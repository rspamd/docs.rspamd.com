"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[8614],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(96540);const r={},l=i.createContext(r);function o(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(l.Provider,{value:n},e.children)}},45953:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"developers/architecture","title":"Rspamd Architecture","description":"Introduction","source":"@site/docs/developers/architecture.md","sourceDirName":"developers","slug":"/developers/architecture","permalink":"/docs.rspamd.com/branches/master/developers/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/developers/architecture.md","tags":[],"version":"current","frontMatter":{"title":"Rspamd Architecture"},"sidebar":"docs","previous":{"title":"Lua API documentation","permalink":"/docs.rspamd.com/branches/master/lua/"},"next":{"title":"Rspamd Architecture","permalink":"/docs.rspamd.com/branches/master/developers/architecture"}}');var r=s(74848),l=s(28453);const o={title:"Rspamd Architecture"},c="Rspamd Architecture",a={},t=[{value:"Introduction",id:"introduction",level:2},{value:"Process Model",id:"process-model",level:2},{value:"Overview",id:"overview",level:3},{value:"Main Process",id:"main-process",level:3},{value:"Worker Types",id:"worker-types",level:3},{value:"Normal Worker",id:"normal-worker",level:4},{value:"Proxy Worker",id:"proxy-worker",level:4},{value:"Controller Worker",id:"controller-worker",level:4},{value:"Fuzzy Storage Worker",id:"fuzzy-storage-worker",level:4},{value:"Event-Driven Architecture",id:"event-driven-architecture",level:2},{value:"Event Loop",id:"event-loop",level:3},{value:"Non-Blocking I/O",id:"non-blocking-io",level:3},{value:"Asynchronous Session Lifecycle",id:"asynchronous-session-lifecycle",level:3},{value:"Message Processing Pipeline",id:"message-processing-pipeline",level:2},{value:"High-Level Flow",id:"high-level-flow",level:3},{value:"Task Object",id:"task-object",level:3},{value:"Processing Phases",id:"processing-phases",level:3},{value:"1. Pre-filters",id:"1-pre-filters",level:4},{value:"2. Filters (Main Rules)",id:"2-filters-main-rules",level:4},{value:"3. Post-filters",id:"3-post-filters",level:4},{value:"4. Idempotent Filters",id:"4-idempotent-filters",level:4},{value:"Async Session Management",id:"async-session-management",level:3},{value:"Module System",id:"module-system",level:2},{value:"Module Architecture",id:"module-architecture",level:3},{value:"C Modules",id:"c-modules",level:3},{value:"Lua Modules",id:"lua-modules",level:3},{value:"Virtual Modules",id:"virtual-modules",level:3},{value:"Rule Modules",id:"rule-modules",level:3},{value:"Symbol and Score System",id:"symbol-and-score-system",level:2},{value:"Symbol Registration",id:"symbol-registration",level:3},{value:"Symbol Dependencies",id:"symbol-dependencies",level:3},{value:"Score Calculation",id:"score-calculation",level:3},{value:"Metric Groups",id:"metric-groups",level:3},{value:"Statistical Modules",id:"statistical-modules",level:2},{value:"Bayesian Classifier",id:"bayesian-classifier",level:3},{value:"Neural Networks Plugin",id:"neural-networks-plugin",level:3},{value:"Fuzzy Hashes",id:"fuzzy-hashes",level:3},{value:"Memory Management",id:"memory-management",level:2},{value:"Memory Pools",id:"memory-pools",level:3},{value:"Zero-Copy Operations",id:"zero-copy-operations",level:3},{value:"Communication and Protocols",id:"communication-and-protocols",level:2},{value:"HTTP Protocol",id:"http-protocol",level:3},{value:"HTTPCrypt Encryption",id:"httpcrypt-encryption",level:3},{value:"Inter-Process Communication",id:"inter-process-communication",level:3},{value:"Configuration System",id:"configuration-system",level:2},{value:"UCL Format",id:"ucl-format",level:3},{value:"Configuration Override",id:"configuration-override",level:3},{value:"Runtime Reloading",id:"runtime-reloading",level:3},{value:"Performance Architecture",id:"performance-architecture",level:2},{value:"Rule Scheduling",id:"rule-scheduling",level:3},{value:"Priority-Based Execution",id:"priority-based-execution",level:4},{value:"Frequency Optimization",id:"frequency-optimization",level:4},{value:"Early Termination",id:"early-termination",level:4},{value:"Caching Strategy",id:"caching-strategy",level:3},{value:"Redis Caching",id:"redis-caching",level:4},{value:"DNS Caching",id:"dns-caching",level:4},{value:"Negative Caching",id:"negative-caching",level:4},{value:"Connection Pooling",id:"connection-pooling",level:3},{value:"Security Architecture",id:"security-architecture",level:2},{value:"Process Isolation",id:"process-isolation",level:3},{value:"Sandboxing",id:"sandboxing",level:3},{value:"Input Validation",id:"input-validation",level:3},{value:"Memory Safety",id:"memory-safety",level:3},{value:"Extensibility Points",id:"extensibility-points",level:2},{value:"Lua API",id:"lua-api",level:3},{value:"Hooks and Callbacks",id:"hooks-and-callbacks",level:3},{value:"External Service Integration",id:"external-service-integration",level:3},{value:"Monitoring and Observability",id:"monitoring-and-observability",level:2},{value:"Metrics Export",id:"metrics-export",level:3},{value:"Logging",id:"logging",level:3},{value:"History",id:"history",level:3},{value:"Scalability and Deployment Patterns",id:"scalability-and-deployment-patterns",level:2},{value:"Vertical Scaling",id:"vertical-scaling",level:3},{value:"Horizontal Scaling",id:"horizontal-scaling",level:3},{value:"1. Proxy-Based Load Balancing",id:"1-proxy-based-load-balancing",level:4},{value:"2. DNS Round-Robin",id:"2-dns-round-robin",level:4},{value:"3. Hardware Load Balancer",id:"3-hardware-load-balancer",level:4},{value:"Shared State",id:"shared-state",level:3},{value:"Summary",id:"summary",level:2},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rspamd-architecture",children:"Rspamd Architecture"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd is a high-performance email processing daemon designed to handle millions of messages per day with minimal resource usage. Its architecture is built on several key principles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event-driven, non-blocking I/O"})," for handling thousands of concurrent connections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-process model"})," with isolated worker processes for security and stability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modular plugin system"})," enabling flexible functionality extension"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Async-first design"})," for efficient external service integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory efficiency"})," through custom memory pool allocators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero-copy operations"})," where possible to minimize overhead"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This document describes the internal architecture, core components, and design patterns used throughout Rspamd."}),"\n",(0,r.jsx)(n.h2,{id:"process-model",children:"Process Model"}),"\n",(0,r.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses a ",(0,r.jsx)(n.strong,{children:"master-worker process model"})," similar to nginx, with one main process spawning multiple worker processes:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                      Main Process                           \u2502\n\u2502  - Configuration management                                 \u2502\n\u2502  - Worker lifecycle management                              \u2502\n\u2502  - Signal handling                                          \u2502\n\u2502  - No message processing                                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                  \u2502\n                  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                  \u25bc             \u25bc            \u25bc            \u25bc             \u25bc\n          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2502  Normal   \u2502 \u2502  Normal   \u2502 \u2502  Proxy   \u2502 \u2502Controller\u2502 \u2502  Fuzzy   \u2502\n          \u2502 Worker 1  \u2502 \u2502 Worker 2  \u2502 \u2502  Worker  \u2502 \u2502  Worker  \u2502 \u2502  Worker  \u2502\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h3,{id:"main-process",children:"Main Process"}),"\n",(0,r.jsx)(n.p,{children:"The main process is responsible for:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration Loading"}),": Parses UCL configuration files and validates settings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Worker Spawning"}),": Forks worker processes with appropriate privileges"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Signal Handling"}),": Responds to system signals (HUP, TERM, USR1, USR2)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Privilege Management"}),": Drops privileges after binding to privileged ports"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Worker Monitoring"}),": Restarts crashed workers automatically"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Log Coordination"}),": Manages centralized logging"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The main process ",(0,r.jsx)(n.strong,{children:"never processes messages"})," directly, maintaining a clean separation of concerns."]}),"\n",(0,r.jsx)(n.h3,{id:"worker-types",children:"Worker Types"}),"\n",(0,r.jsx)(n.h4,{id:"normal-worker",children:"Normal Worker"}),"\n",(0,r.jsx)(n.p,{children:"The primary message processing worker that:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Accepts HTTP connections with email messages"}),"\n",(0,r.jsx)(n.li,{children:"Performs spam/ham classification"}),"\n",(0,r.jsx)(n.li,{children:"Executes all configured rules and modules"}),"\n",(0,r.jsx)(n.li,{children:"Communicates with external services (Redis, DNS, RBLs)"}),"\n",(0,r.jsx)(n.li,{children:"Returns classification results via JSON"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nginx",children:'worker "normal" {\n    bind_socket = "*:11333";\n    count = 4;  # Number of worker processes\n    .include(try=true,priority=1,duplicate=merge) "$LOCAL_CONFDIR/local.d/worker-normal.inc"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Typical deployment:"})," 1-4 workers per CPU core, depending on workload."]}),"\n",(0,r.jsx)(n.h4,{id:"proxy-worker",children:"Proxy Worker"}),"\n",(0,r.jsx)(n.p,{children:"Provides Milter protocol bridging and load balancing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Accepts Milter protocol connections from MTAs"}),"\n",(0,r.jsx)(n.li,{children:"Translates Milter to Rspamd HTTP protocol"}),"\n",(0,r.jsx)(n.li,{children:"Can forward requests to multiple normal workers"}),"\n",(0,r.jsxs)(n.li,{children:["Supports encryption (",(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/encryption",children:"HTTPCrypt protocol"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Handles connection pooling and retries"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Postfix/Sendmail integration via Milter"}),"\n",(0,r.jsx)(n.li,{children:"Load balancing across multiple Rspamd instances"}),"\n",(0,r.jsx)(n.li,{children:"Encryption proxy for untrusted networks"}),"\n",(0,r.jsx)(n.li,{children:"Protocol translation for legacy systems"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"controller-worker",children:"Controller Worker"}),"\n",(0,r.jsx)(n.p,{children:"Management and web interface worker:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Serves WebUI for administration"}),"\n",(0,r.jsx)(n.li,{children:"Provides REST API for learning and configuration"}),"\n",(0,r.jsx)(n.li,{children:"Handles authentication with password/enable password"}),"\n",(0,r.jsx)(n.li,{children:"Supports read-only and read-write modes"}),"\n",(0,r.jsx)(n.li,{children:"Exposes metrics in OpenMetrics format"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security note:"})," Should be bound to localhost or protected by firewall in production."]}),"\n",(0,r.jsx)(n.h4,{id:"fuzzy-storage-worker",children:"Fuzzy Storage Worker"}),"\n",(0,r.jsx)(n.p,{children:"Specialized worker for fuzzy hash storage:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maintains database of fuzzy hashes for near-duplicate detection"}),"\n",(0,r.jsx)(n.li,{children:"Handles add/delete/check operations"}),"\n",(0,r.jsx)(n.li,{children:"Supports sharding and replication"}),"\n",(0,r.jsx)(n.li,{children:"Uses custom protocol over UDP/TCP"}),"\n",(0,r.jsx)(n.li,{children:"Implements expiration and rotation policies"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/workers/fuzzy_storage",children:"fuzzy_storage worker documentation"})," for details."]}),"\n",(0,r.jsx)(n.h2,{id:"event-driven-architecture",children:"Event-Driven Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"event-loop",children:"Event Loop"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses ",(0,r.jsx)(n.strong,{children:"libevent"})," (or ",(0,r.jsx)(n.strong,{children:"libev"})," on some platforms) for event-driven I/O:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                   Event Loop                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                          \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502 I/O Events \u2502  \u2502   Timers   \u2502  \u2502  Signals   \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u2502         \u2502               \u2502                \u2502              \u2502\n\u2502         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2502\n\u2502                         \u2502                               \u2502\n\u2502                    Event Queue                          \u2502\n\u2502                         \u2502                               \u2502\n\u2502         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510              \u2502\n\u2502         \u25bc                               \u25bc              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u2502\n\u2502  \u2502  Callbacks  \u2502                 \u2502  Callbacks  \u2502       \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h3,{id:"non-blocking-io",children:"Non-Blocking I/O"}),"\n",(0,r.jsx)(n.p,{children:"All I/O operations in Rspamd are non-blocking:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network I/O"}),": Socket operations return immediately, callbacks invoked when data available"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DNS Queries"}),": Asynchronous DNS resolution via c-ares library"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Redis Operations"}),": Non-blocking Redis client (hiredis) with connection pooling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External Services"}),": HTTP requests to external services (RBLs, reputation APIs) are async"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This allows a single worker to handle hundreds of concurrent message scans without blocking."}),"\n",(0,r.jsx)(n.h3,{id:"asynchronous-session-lifecycle",children:"Asynchronous Session Lifecycle"}),"\n",(0,r.jsx)(n.p,{children:"A typical message processing session:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Client Connect\n     \u2502\n     \u251c\u2500 Socket Accept (non-blocking)\n     \u2502\n     \u251c\u2500 HTTP Request Parse (may require multiple reads)\n     \u2502\n     \u251c\u2500 Message Processing Start\n     \u2502   \u2502\n     \u2502   \u251c\u2500 DNS Queries (async, multiple in parallel)\n     \u2502   \u251c\u2500 Redis Lookups (async)\n     \u2502   \u251c\u2500 External HTTP Requests (async)\n     \u2502   \u251c\u2500 Rule Processing (CPU-bound, sync)\n     \u2502   \u2502\n     \u2502   \u2514\u2500 Wait for all async operations to complete\n     \u2502\n     \u251c\u2500 Result Aggregation\n     \u2502\n     \u251c\u2500 HTTP Response Send (non-blocking)\n     \u2502\n     \u2514\u2500 Socket Close\n"})}),"\n",(0,r.jsx)(n.p,{children:"All blocking operations (DNS, Redis, HTTP) run concurrently, maximizing throughput."}),"\n",(0,r.jsx)(n.h2,{id:"message-processing-pipeline",children:"Message Processing Pipeline"}),"\n",(0,r.jsx)(n.h3,{id:"high-level-flow",children:"High-Level Flow"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant MTA\n    participant Worker\n    participant Task\n    participant Modules\n    participant Redis\n    participant DNS\n\n    MTA->>Worker: HTTP POST /checkv2\n    Worker->>Task: Create task object\n    Task->>Task: Parse MIME message\n\n    par Parallel Processing\n        Task->>Modules: Pre-filters\n        Modules->>Redis: Fetch statistics (async)\n        Modules->>DNS: RBL queries (async)\n    end\n\n    Task->>Modules: Filters (rules)\n    loop For each rule\n        Modules->>Task: Add symbols with scores\n    end\n\n    Task->>Modules: Post-filters\n    Task->>Task: Calculate final score\n    Task->>Worker: Processing complete\n    Worker->>MTA: JSON response with action"}),"\n",(0,r.jsx)(n.h3,{id:"task-object",children:"Task Object"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"task object"})," is the central data structure representing a message being processed:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"struct rspamd_task {\n    /* Message data */\n    struct rspamd_message *message;      // Parsed MIME structure\n    const guchar *msg;                   // Raw message bytes\n    gsize msg_len;                       // Message length\n\n    /* Processing context */\n    struct rspamd_task_session *s;       // Async session for pending operations\n    struct event_base *ev_base;          // Event loop\n\n    /* Results */\n    GHashTable *results;                 // Symbol results by metric\n    double score;                        // Current score\n\n    /* Metadata */\n    rspamd_inet_addr_t *from_addr;      // Sender IP\n    gchar *deliver_to;                   // Recipient\n    gchar *user;                         // SMTP AUTH user\n\n    /* Memory management */\n    rspamd_mempool_t *task_pool;        // Memory pool for task\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key characteristics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Self-contained"}),": All message data and processing state in one structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory pool"}),": All allocations use task-specific pool, freed at once when task completes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Async session"}),": Tracks pending async operations (DNS, Redis, HTTP)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero-copy"}),": Message data referenced from original buffer when possible"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"processing-phases",children:"Processing Phases"}),"\n",(0,r.jsx)(n.h4,{id:"1-pre-filters",children:"1. Pre-filters"}),"\n",(0,r.jsx)(n.p,{children:"Run before main rule processing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Early decisions, data preparation, short-circuit logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),":\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Whitelisting (bypass spam checks for trusted senders)"}),"\n",(0,r.jsx)(n.li,{children:"Rate limiting (temporary reject if limits exceeded)"}),"\n",(0,r.jsx)(n.li,{children:"Settings application (load user-specific configuration)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),": Can set ",(0,r.jsx)(n.code,{children:"pre_result"})," to skip remaining processing"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Example pre-filter in Lua\nrspamd_config:register_pre_filter(function(task)\n    local ip = task:get_from_ip()\n    if is_trusted_ip(ip) then\n        task:set_pre_result('accept', 'Trusted IP')\n        return true  -- Skip further processing\n    end\nend)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-filters-main-rules",children:"2. Filters (Main Rules)"}),"\n",(0,r.jsx)(n.p,{children:"Core spam detection logic:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rule types"}),": C modules and Lua plugins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Execution"}),": Can be synchronous (CPU-bound) or asynchronous (I/O-bound)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symbols"}),": Each rule registers symbols with scores"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parallelism"}),": Async rules execute concurrently"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common filter modules:"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Module"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Purpose"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spf"})}),(0,r.jsx)(n.td,{children:"C"}),(0,r.jsx)(n.td,{children:"SPF validation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dkim"})}),(0,r.jsx)(n.td,{children:"C"}),(0,r.jsx)(n.td,{children:"DKIM signature verification"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"regexp"})}),(0,r.jsx)(n.td,{children:"C"}),(0,r.jsx)(n.td,{children:"High-performance regex matching"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bayes"})}),(0,r.jsx)(n.td,{children:"C"}),(0,r.jsx)(n.td,{children:"Statistical classification (OSB-Bayes)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"multimap"})}),(0,r.jsx)(n.td,{children:"Lua"}),(0,r.jsx)(n.td,{children:"Generic map-based rules"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rbl"})}),(0,r.jsx)(n.td,{children:"Lua"}),(0,r.jsx)(n.td,{children:"DNS blacklist queries"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"phishing"})}),(0,r.jsx)(n.td,{children:"Lua"}),(0,r.jsx)(n.td,{children:"Phishing URL detection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"neural"})}),(0,r.jsx)(n.td,{children:"C"}),(0,r.jsx)(n.td,{children:"Neural network classification"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"3-post-filters",children:"3. Post-filters"}),"\n",(0,r.jsx)(n.p,{children:"Run after all rules complete:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Final adjustments, actions, logging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),":\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Composites (combine symbols into meta-symbols)"}),"\n",(0,r.jsx)(n.li,{children:"Force actions (override score-based actions)"}),"\n",(0,r.jsx)(n.li,{children:"Metadata export (send results to external systems)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),": Can modify final action"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"4-idempotent-filters",children:"4. Idempotent Filters"}),"\n",(0,r.jsx)(n.p,{children:"Special filters that run after all other processing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Generate metadata, extract information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Execution order"}),": Run strictly after all filters, post-filters, and composites"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),": Email extraction, URL extraction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),": Never modify results, pure data extraction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use case"}),": Safe to call at any point in code, but actual execution is deferred until the end"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"async-session-management",children:"Async Session Management"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses an ",(0,r.jsx)(n.strong,{children:"async session"})," mechanism to track pending operations:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"struct rspamd_async_session {\n    GHashTable *events;          // Pending async events\n    event_finalizer_t fin;       // Callback when all events complete\n    void *user_data;             // User data for finalizer\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How it works:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Register event"}),": When starting async operation, register it with session"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Track completion"}),": Operation callback marks event as complete"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Finalize"}),": When all events complete, session finalizer is called"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timeout"}),": If events don't complete within timeout, force finalization"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example async DNS lookup:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Register async event\nsession_event = rspamd_session_add_event(task->s, dns_callback, task, "dns");\n\n// Start DNS query\nrdns_make_request_full(resolver, dns_callback, task,\n                       timeout, max_retries, query, type);\n\n// When DNS response arrives, dns_callback is invoked\nvoid dns_callback(struct rdns_reply *reply, void *arg) {\n    struct rspamd_task *task = arg;\n\n    // Process DNS reply\n    process_dns_result(task, reply);\n\n    // Remove event from session (may trigger finalization)\n    rspamd_session_remove_event(task->s, session_event);\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"module-system",children:"Module System"}),"\n",(0,r.jsx)(n.h3,{id:"module-architecture",children:"Module Architecture"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd modules are the primary extension mechanism:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Module Interface                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                         \u2502\n\u2502  module_init()      - Initialize module structures      \u2502\n\u2502  module_config()    - Parse configuration               \u2502\n\u2502  module_reconfig()  - Apply config changes              \u2502\n\u2502  module_attach()    - Register callbacks                \u2502\n\u2502                                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502\n         \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u25bc              \u25bc              \u25bc              \u25bc\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502   C    \u2502    \u2502   Lua   \u2502    \u2502 Virtual \u2502   \u2502  Rule   \u2502\n    \u2502 Module \u2502    \u2502  Module \u2502    \u2502 Module  \u2502   \u2502 Module  \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h3,{id:"c-modules",children:"C Modules"}),"\n",(0,r.jsx)(n.p,{children:"Compiled into Rspamd binary or loaded as dynamic libraries:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Advantages:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maximum performance"}),"\n",(0,r.jsx)(n.li,{children:"Direct access to internals"}),"\n",(0,r.jsx)(n.li,{children:"Can hook into low-level events"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Disadvantages:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Requires compilation"}),"\n",(0,r.jsx)(n.li,{children:"Less flexible than Lua"}),"\n",(0,r.jsx)(n.li,{children:"Harder to maintain"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Examples:"})," ",(0,r.jsx)(n.code,{children:"spf"}),", ",(0,r.jsx)(n.code,{children:"dkim"}),", ",(0,r.jsx)(n.code,{children:"regexp"}),", ",(0,r.jsx)(n.code,{children:"chartable"}),", ",(0,r.jsx)(n.code,{children:"fuzzy_check"})]}),"\n",(0,r.jsx)(n.h3,{id:"lua-modules",children:"Lua Modules"}),"\n",(0,r.jsx)(n.p,{children:"Written in Lua with full API access:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Advantages:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Easy to write and modify"}),"\n",(0,r.jsx)(n.li,{children:"No compilation required"}),"\n",(0,r.jsx)(n.li,{children:"Hot-reload support"}),"\n",(0,r.jsx)(n.li,{children:"Full Rspamd API access"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Disadvantages:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Slightly slower than C (but JIT helps)"}),"\n",(0,r.jsx)(n.li,{children:"Limited to Lua API surface"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Examples:"})," ",(0,r.jsx)(n.code,{children:"multimap"}),", ",(0,r.jsx)(n.code,{children:"rbl"}),", ",(0,r.jsx)(n.code,{children:"phishing"}),", ",(0,r.jsx)(n.code,{children:"whitelist"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Module structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Module registration\nlocal mod_name = 'my_module'\n\n-- Configuration parsing\nlocal function configure_module(cfg)\n    local opts = rspamd_config:get_all_opt(mod_name)\n    if not opts then return false end\n\n    -- Parse options\n    return true\nend\n\n-- Symbol callback\nlocal function my_symbol_callback(task)\n    -- Check message\n    if condition_met(task) then\n        task:insert_result('MY_SYMBOL', 1.0, 'reason')\n    end\nend\n\n-- Register symbol\nrspamd_config:register_symbol({\n    name = 'MY_SYMBOL',\n    type = 'normal',\n    callback = my_symbol_callback,\n    score = 5.0,\n    group = 'my_group'\n})\n\n-- Module initialization\nif configure_module(rspamd_config) then\n    rspamd_config:register_module_option(mod_name, 'enabled', 'boolean')\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"virtual-modules",children:"Virtual Modules"}),"\n",(0,r.jsx)(n.p,{children:"Modules without code, used for organizing symbols:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- In rspamd.conf.local\ngroup "my_virtual_module" {\n    symbols {\n        "SYMBOL_ONE" {\n            score = 5.0;\n        }\n        "SYMBOL_TWO" {\n            score = 3.0;\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"rule-modules",children:"Rule Modules"}),"\n",(0,r.jsx)(n.p,{children:"Specialized modules for specific rule types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regexp module"}),": High-performance regex matching with PCRE/Hyperscan"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multimap module"}),": Generic map-based checks (IP, domain, header matching)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Composites module"}),": Combine symbols using boolean expressions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"symbol-and-score-system",children:"Symbol and Score System"}),"\n",(0,r.jsx)(n.h3,{id:"symbol-registration",children:"Symbol Registration"}),"\n",(0,r.jsx)(n.p,{children:"Symbols are registered with metadata:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:register_symbol({\n    name = 'MY_SYMBOL',           -- Symbol name\n    type = 'normal',              -- Symbol type (normal, callback, virtual)\n    callback = my_callback,       -- Callback function\n    score = 5.0,                  -- Default score\n    group = 'my_group',           -- Group for organization\n    description = 'Checks X',     -- Human-readable description\n\n    -- Execution control\n    priority = 10,                -- Execution priority (higher = earlier)\n    one_shot = true,              -- Execute only once per message\n\n    -- Async control\n    flags = 'explicit_disable',   -- Flags controlling behavior\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"symbol-dependencies",children:"Symbol Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"Symbols can depend on other symbols:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:register_dependency('DMARC_POLICY_ALLOW', 'R_DKIM_ALLOW')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This ensures ",(0,r.jsx)(n.code,{children:"R_DKIM_ALLOW"})," runs before ",(0,r.jsx)(n.code,{children:"DMARC_POLICY_ALLOW"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"score-calculation",children:"Score Calculation"}),"\n",(0,r.jsx)(n.p,{children:"Final score is calculated as:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Total Score = \u03a3 (symbol_score \xd7 symbol_weight \xd7 multiplier)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Where:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"symbol_score"}),": Base score from configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"symbol_weight"}),": Dynamic weight returned by symbol (typically 1.0)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"multiplier"}),": Per-symbol or per-group multiplier"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"metric-groups",children:"Metric Groups"}),"\n",(0,r.jsx)(n.p,{children:"Symbols are organized into groups for management:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'group "spf" {\n    max_score = 5.0;  -- Cap group\'s contribution to total score\n\n    symbols {\n        "R_SPF_ALLOW" { score = -2.0; }\n        "R_SPF_FAIL" { score = 3.0; }\n        "R_SPF_SOFTFAIL" { score = 1.0; }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Groups allow:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Score capping (max_score)"}),"\n",(0,r.jsx)(n.li,{children:"Group-wide enable/disable"}),"\n",(0,r.jsx)(n.li,{children:"Organizational hierarchy"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"statistical-modules",children:"Statistical Modules"}),"\n",(0,r.jsx)(n.h3,{id:"bayesian-classifier",children:"Bayesian Classifier"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses ",(0,r.jsx)(n.strong,{children:"OSB-Bayes"})," (Orthogonal Sparse Bigrams):"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Algorithm:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tokenization"}),": Extract tokens from message (words, headers, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bigram generation"}),": Create token pairs with positional information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hashing"}),": Hash bigrams into fixed-size feature space"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Classification"}),": Compare against learned spam/ham distributions"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Storage backends:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Redis"}),": Recommended for production (fast, scalable)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SQLite"}),": Suitable for single-machine deployments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File"}),": Legacy backend, not recommended"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Learning:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Learn as spam\nrspamc learn_spam < spam_message.eml\n\n# Learn as ham\nrspamc learn_ham < ham_message.eml\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Auto-learning:"})}),"\n",(0,r.jsx)(n.p,{children:"Can automatically learn from high-confidence classifications:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'classifier "bayes" {\n    tokenizer {\n        name = "osb";\n    }\n    cache {\n        backend = "redis";\n    }\n    autolearn = true;\n    autolearn {\n        spam_threshold = 15.0;  -- Learn as spam if score > 15\n        ham_threshold = -5.0;   -- Learn as ham if score < -5\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"neural-networks-plugin",children:"Neural Networks Plugin"}),"\n",(0,r.jsxs)(n.p,{children:["Uses ",(0,r.jsx)(n.strong,{children:"perceptron-based clustering"})," with existing symbols as features:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How it works:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Feature extraction"}),": Use triggered symbols as input features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Training"}),": Learn from explicit learning (via ",(0,r.jsx)(n.code,{children:"/learnspam"}),") or auto-learning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prediction"}),": Output score based on symbol pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multiple networks"}),": Can train separate networks for different message types"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Advantages over Bayes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Learns from symbol patterns, not message content"}),"\n",(0,r.jsx)(n.li,{children:"Adapts to your specific rule configuration"}),"\n",(0,r.jsx)(n.li,{children:"Provides complementary signal to Bayes"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'neural {\n    servers = "localhost:6379";  # Redis for model storage\n\n    train {\n        max_trains = 1000;        # Train after 1000 samples\n        learning_rate = 0.01;\n    }\n\n    rules {\n        "NEURAL_SPAM" {\n            spam_score = 5.0;\n            ham_score = -5.0;\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"fuzzy-hashes",children:"Fuzzy Hashes"}),"\n",(0,r.jsx)(n.p,{children:"Near-duplicate detection using fuzzy hashing:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Algorithm:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Extracts text content from message"}),"\n",(0,r.jsx)(n.li,{children:"Computes multiple hashes (for text, images, attachments)"}),"\n",(0,r.jsx)(n.li,{children:"Compares against database of known spam/ham hashes"}),"\n",(0,r.jsx)(n.li,{children:"Returns match percentage"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bulk spam detection"}),"\n",(0,r.jsx)(n.li,{children:"Spam campaign identification"}),"\n",(0,r.jsx)(n.li,{children:"Shared reputation across multiple servers"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/tutorials/fuzzy_storage",children:"fuzzy storage documentation"})," for details."]}),"\n",(0,r.jsx)(n.h2,{id:"memory-management",children:"Memory Management"}),"\n",(0,r.jsx)(n.h3,{id:"memory-pools",children:"Memory Pools"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses custom ",(0,r.jsx)(n.strong,{children:"memory pools"})," for efficient allocation:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'rspamd_mempool_t *pool = rspamd_mempool_new(pool_size, "task");\n\n// Allocate from pool\nvoid *ptr = rspamd_mempool_alloc(pool, size);\n\n// All allocations freed at once\nrspamd_mempool_delete(pool);\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Advantages:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No individual frees"}),": Bulk deallocation when pool destroyed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fast allocation"}),": Simple bump-pointer allocation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reduced fragmentation"}),": Allocations from contiguous regions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Leak prevention"}),": All memory freed with pool"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pool types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task pool"}),": Per-message, destroyed after processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Config pool"}),": Lives for entire config lifetime"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Module pools"}),": Per-module, destroyed on module unload"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"zero-copy-operations",children:"Zero-Copy Operations"}),"\n",(0,r.jsx)(n.p,{children:"Where possible, Rspamd avoids copying data:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message body"}),": References original buffer, no copy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Header values"}),": Point into parsed message buffer"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"String views"}),": Use pointer+length without allocating new strings"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This significantly reduces memory usage and improves cache efficiency."}),"\n",(0,r.jsx)(n.h2,{id:"communication-and-protocols",children:"Communication and Protocols"}),"\n",(0,r.jsx)(n.h3,{id:"http-protocol",children:"HTTP Protocol"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses HTTP as its primary protocol. See ",(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/protocol",children:"Protocol Documentation"})," for details."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Request flow:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Client sends POST request with message body"}),"\n",(0,r.jsx)(n.li,{children:"HTTP headers contain metadata (IP, envelope, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Rspamd processes message"}),"\n",(0,r.jsx)(n.li,{children:"Returns JSON response with results"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Compression:"})}),"\n",(0,r.jsxs)(n.p,{children:["Supports ",(0,r.jsx)(n.code,{children:"zstd"})," compression for large messages:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"POST /checkv2 HTTP/1.1\nContent-Encoding: zstd\nFlags: zstd\n"})}),"\n",(0,r.jsx)(n.h3,{id:"httpcrypt-encryption",children:"HTTPCrypt Encryption"}),"\n",(0,r.jsxs)(n.p,{children:["For secure communication, Rspamd supports the HTTPCrypt protocol. See ",(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/encryption",children:"Encryption Documentation"})," for complete details."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"X25519 key exchange with forward secrecy"}),"\n",(0,r.jsx)(n.li,{children:"XChaCha20-Poly1305 authenticated encryption"}),"\n",(0,r.jsx)(n.li,{children:"Ephemeral keys per connection"}),"\n",(0,r.jsx)(n.li,{children:"Base32-encoded key identification"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Generate keypair\nrspamadm keypair\n\n# Configure in worker\nworker "normal" {\n    bind_socket = "*:11333";\n    keypair {\n        pubkey = "...";\n        privkey = "...";\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"inter-process-communication",children:"Inter-Process Communication"}),"\n",(0,r.jsx)(n.p,{children:"Workers communicate via:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shared memory"}),": For statistics and counters (read-only)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Control socket"}),": Commands from main process to workers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Redis"}),": Shared state across workers and instances"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Workers are ",(0,r.jsx)(n.strong,{children:"isolated"})," - no direct IPC between worker processes."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-system",children:"Configuration System"}),"\n",(0,r.jsx)(n.h3,{id:"ucl-format",children:"UCL Format"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses ",(0,r.jsx)(n.strong,{children:"UCL (Universal Configuration Language)"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nginx",children:'# Comments start with #\n\n# Simple values\nkey = "value";\nnumber = 123;\nboolean = true;\n\n# Objects\nsection {\n    nested_key = "value";\n}\n\n# Arrays\nlist = ["item1", "item2"];\n\n# Includes\n.include "$CONFDIR/local.d/rspamd.local.conf"\n\n# Macros\n.define MY_VAR "value"\n.define MY_LIST ["a", "b", "c"]\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nginx-like syntax (familiar to sysadmins)"}),"\n",(0,r.jsx)(n.li,{children:"Comments and macros"}),"\n",(0,r.jsx)(n.li,{children:"Includes with priority and merge modes"}),"\n",(0,r.jsx)(n.li,{children:"Type validation"}),"\n",(0,r.jsx)(n.li,{children:"Variable substitution"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-override",children:"Configuration Override"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd supports layered configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/etc/rspamd/rspamd.conf              [base]\n    \u251c\u2500\u2500 /etc/rspamd/modules.d/*.conf [module defaults]\n    \u251c\u2500\u2500 /etc/rspamd/local.d/*.conf   [local overrides - merge]\n    \u2514\u2500\u2500 /etc/rspamd/override.d/*.conf [local overrides - replace]\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Override modes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"local.d"}),": Merges with existing configuration (recommended)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"override.d"}),": Completely replaces section (for advanced users)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"runtime-reloading",children:"Runtime Reloading"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd supports configuration reload without restart:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Send HUP signal\nkillall -HUP rspamd\n\n# Or via rspamadm\nrspamadm configtest  # Test config first\nsystemctl reload rspamd\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Reload process:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Main process receives SIGHUP"}),"\n",(0,r.jsx)(n.li,{children:"Parses new configuration"}),"\n",(0,r.jsx)(n.li,{children:"Validates configuration"}),"\n",(0,r.jsx)(n.li,{children:"Spawns new workers with new config"}),"\n",(0,r.jsx)(n.li,{children:"Waits for old workers to finish current tasks"}),"\n",(0,r.jsx)(n.li,{children:"Terminates old workers"}),"\n",(0,r.jsx)(n.li,{children:"Old workers drain connections gracefully"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"No messages are dropped during reload."}),"\n",(0,r.jsx)(n.h2,{id:"performance-architecture",children:"Performance Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"rule-scheduling",children:"Rule Scheduling"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd optimizes rule execution through intelligent scheduling:"}),"\n",(0,r.jsx)(n.h4,{id:"priority-based-execution",children:"Priority-Based Execution"}),"\n",(0,r.jsx)(n.p,{children:"Rules with higher priority execute first:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:register_symbol({\n    name = 'CRITICAL_CHECK',\n    priority = high,  -- Numeric value, higher = earlier\n    callback = callback_fn\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Priority guidelines:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High priority"}),": Fast rules that can short-circuit processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Normal priority"}),": Standard checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Low priority"}),": Expensive rules, run only if needed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"frequency-optimization",children:"Frequency Optimization"}),"\n",(0,r.jsx)(n.p,{children:"Frequently-triggered rules are cached and optimized:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hot rules kept in CPU cache"}),"\n",(0,r.jsx)(n.li,{children:"Common patterns compiled to bytecode"}),"\n",(0,r.jsx)(n.li,{children:"Regex compiled and cached"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"early-termination",children:"Early Termination"}),"\n",(0,r.jsx)(n.p,{children:"If score exceeds reject threshold significantly, remaining rules may be skipped:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"task:set_flag('skip_process')  -- Stop processing\n"})}),"\n",(0,r.jsx)(n.h3,{id:"caching-strategy",children:"Caching Strategy"}),"\n",(0,r.jsx)(n.h4,{id:"redis-caching",children:"Redis Caching"}),"\n",(0,r.jsx)(n.p,{children:"Used for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bayesian statistics"}),"\n",(0,r.jsx)(n.li,{children:"Neural network models"}),"\n",(0,r.jsx)(n.li,{children:"Reputation data"}),"\n",(0,r.jsx)(n.li,{children:"Greylisting state"}),"\n",(0,r.jsx)(n.li,{children:"Rate limiting counters"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connection pooling:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'redis {\n    servers = "localhost:6379";\n    db = 0;\n    timeout = 1s;\n\n    # Connection pool settings\n    max_connections = 100;\n    idle_timeout = 60s;\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"dns-caching",children:"DNS Caching"}),"\n",(0,r.jsx)(n.p,{children:"Built-in DNS cache reduces external queries:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"dns {\n    timeout = 1s;\n    retransmits = 2;\n\n    # Cache settings\n    cache_size = 1000;\n    cache_ttl = 60;\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"negative-caching",children:"Negative Caching"}),"\n",(0,r.jsx)(n.p,{children:"Failed lookups are cached to avoid repeated queries:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"DNS NXDOMAIN responses"}),"\n",(0,r.jsx)(n.li,{children:"Redis connection failures"}),"\n",(0,r.jsx)(n.li,{children:"RBL timeout results"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"connection-pooling",children:"Connection Pooling"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd maintains connection pools for:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Redis connections"}),": Per-worker pool with configurable size"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTP connections"}),": Reused for external service calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DNS sockets"}),": Shared across all queries"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This reduces connection overhead and improves latency."}),"\n",(0,r.jsx)(n.h2,{id:"security-architecture",children:"Security Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"process-isolation",children:"Process Isolation"}),"\n",(0,r.jsx)(n.p,{children:"Workers run with minimal privileges:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Main process starts as root (to bind privileged ports)"}),"\n",(0,r.jsxs)(n.li,{children:["After binding, drops privileges to ",(0,r.jsx)(n.code,{children:"_rspamd"})," user"]}),"\n",(0,r.jsx)(n.li,{children:"Workers inherit non-root privileges"}),"\n",(0,r.jsx)(n.li,{children:"Each worker has isolated memory space (no shared memory for processing)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"sandboxing",children:"Sandboxing"}),"\n",(0,r.jsx)(n.p,{children:"On supported platforms, Rspamd can use:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capsicum"})," (FreeBSD): Capability-based security"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Seccomp"})," (Linux): Syscall filtering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pledge"})," (OpenBSD): Promise-based restrictions"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"input-validation",children:"Input Validation"}),"\n",(0,r.jsx)(n.p,{children:"All external input is validated:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"HTTP headers parsed with strict validation"}),"\n",(0,r.jsx)(n.li,{children:"Message size limits enforced"}),"\n",(0,r.jsx)(n.li,{children:"MIME parsing with malformed input handling"}),"\n",(0,r.jsx)(n.li,{children:"Configuration validated before application"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"memory-safety",children:"Memory Safety"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Memory pools prevent leaks and use-after-free"}),"\n",(0,r.jsx)(n.li,{children:"Bounds checking on all array accesses"}),"\n",(0,r.jsx)(n.li,{children:"String operations use length-aware functions"}),"\n",(0,r.jsx)(n.li,{children:"No dynamic SQL - all queries are parameterized"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"extensibility-points",children:"Extensibility Points"}),"\n",(0,r.jsx)(n.h3,{id:"lua-api",children:"Lua API"}),"\n",(0,r.jsx)(n.p,{children:"Comprehensive Lua API provides access to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message parsing"}),": Headers, body, MIME parts, attachments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network operations"}),": HTTP requests, DNS queries, Redis commands"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symbol manipulation"}),": Insert, modify, remove symbols"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration"}),": Access and override settings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Utilities"}),": Cryptography, encoding, hashing, string operations"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/lua/index",children:"Lua API documentation"})," for complete reference."]}),"\n",(0,r.jsx)(n.h3,{id:"hooks-and-callbacks",children:"Hooks and Callbacks"}),"\n",(0,r.jsx)(n.p,{children:"Modules can register callbacks for various events:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Pre-filter: runs before main processing\nrspamd_config:register_pre_filter(callback)\n\n-- Symbol: main processing\nrspamd_config:register_symbol({name = 'SYM', callback = callback})\n\n-- Post-filter: runs after all rules\nrspamd_config:register_post_filter(callback)\n\n-- Idempotent: runs after all other processing (filters, post-filters, composites)\nrspamd_config:register_symbol({name = 'SYM', type = 'idempotent', callback = callback})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"external-service-integration",children:"External Service Integration"}),"\n",(0,r.jsx)(n.p,{children:"Easy integration with external services:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local function check_external_service(task)\n    local function callback(err, code, body)\n        if not err and code == 200 then\n            -- Process response\n            local result = parse_json(body)\n            if result.is_spam then\n                task:insert_result('EXTERNAL_SPAM', 1.0)\n            end\n        end\n    end\n\n    rspamd_http.request({\n        task = task,\n        url = 'https://api.example.com/check',\n        method = 'POST',\n        body = task:get_content(),\n        callback = callback\n    })\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"monitoring-and-observability",children:"Monitoring and Observability"}),"\n",(0,r.jsx)(n.h3,{id:"metrics-export",children:"Metrics Export"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd exports metrics in OpenMetrics format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:11334/metrics\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Available metrics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Message processing rates"}),"\n",(0,r.jsx)(n.li,{children:"Action distribution (reject, add header, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Module-specific statistics"}),"\n",(0,r.jsx)(n.li,{children:"Resource usage (memory, connections)"}),"\n",(0,r.jsx)(n.li,{children:"Latency histograms"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,r.jsx)(n.p,{children:"Structured logging with multiple levels:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'logging {\n    type = "file";\n    filename = "/var/log/rspamd/rspamd.log";\n    level = "info";\n\n    # Log format\n    log_format = "default";\n\n    # Colored output for console\n    log_color = yes;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Log levels:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"error"}),": Critical errors only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"warning"}),": Important issues"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"info"}),": Normal operations (default)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"debug"}),": Verbose debugging"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"history",children:"History"}),"\n",(0,r.jsx)(n.p,{children:"Recent scan results are stored in memory (or Redis):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Via HTTP API\ncurl http://localhost:11334/history\n\n# Via rspamc\nrspamc history\n"})}),"\n",(0,r.jsx)(n.p,{children:"Useful for debugging and auditing."}),"\n",(0,r.jsx)(n.h2,{id:"scalability-and-deployment-patterns",children:"Scalability and Deployment Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"vertical-scaling",children:"Vertical Scaling"}),"\n",(0,r.jsx)(n.p,{children:"Single-machine scaling:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Worker count"}),": 1-4 workers per CPU core"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory"}),": 256-512 MB per worker typical"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connections"}),": Thousands per worker with async I/O"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recommended:"})," Start with ",(0,r.jsx)(n.code,{children:"count = num_cpus"})," and tune based on load."]}),"\n",(0,r.jsx)(n.h3,{id:"horizontal-scaling",children:"Horizontal Scaling"}),"\n",(0,r.jsx)(n.p,{children:"Multi-machine deployment patterns:"}),"\n",(0,r.jsx)(n.h4,{id:"1-proxy-based-load-balancing",children:"1. Proxy-Based Load Balancing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502     MTA      \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2502\n                     \u25bc\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502 Rspamd Proxy \u2502\n              \u2502  (mirror: Y) \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2502\n         \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n         \u25bc (master)              \u25bc (mirror)\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502  Rspamd 1   \u2502          \u2502  Rspamd 2   \u2502\n  \u2502  (normal)   \u2502          \u2502  (normal)   \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502                        \u2502\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                  \u25bc\n           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n           \u2502    Redis    \u2502\n           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Proxy can be configured for load balancing or mirroring:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Load balancing"}),": Distributes requests (default)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mirroring"}),": Sends requests to all backends, uses first response"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple setup"}),"\n",(0,r.jsx)(n.li,{children:"Rspamd proxy handles load balancing"}),"\n",(0,r.jsx)(n.li,{children:"Automatic failover"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Proxy is single point of failure (can be replicated)"}),"\n",(0,r.jsx)(n.li,{children:"Additional network hop"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-dns-round-robin",children:"2. DNS Round-Robin"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502     MTA      \u2502\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n                \u25bc\n         DNS: rspamd.local\n         \u2192 10.0.1.1, 10.0.1.2\n                \u2502\n    \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n    \u25bc                        \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Rspamd 1   \u2502      \u2502  Rspamd 2   \u2502\n\u2502 10.0.1.1    \u2502      \u2502 10.0.1.2    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No single point of failure"}),"\n",(0,r.jsx)(n.li,{children:"Simple, no proxy needed"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Client must implement failover"}),"\n",(0,r.jsx)(n.li,{children:"No session affinity"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-hardware-load-balancer",children:"3. Hardware Load Balancer"}),"\n",(0,r.jsx)(n.p,{children:"Use HAProxy, nginx, or hardware LB:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enterprise-grade reliability"}),"\n",(0,r.jsx)(n.li,{children:"Advanced features (SSL termination, health checks)"}),"\n",(0,r.jsx)(n.li,{children:"Session affinity if needed"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Additional component to manage"}),"\n",(0,r.jsx)(n.li,{children:"More complex setup"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"shared-state",children:"Shared State"}),"\n",(0,r.jsx)(n.p,{children:"For multi-instance deployments, use Redis for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bayesian statistics"}),"\n",(0,r.jsx)(n.li,{children:"Neural network models"}),"\n",(0,r.jsx)(n.li,{children:"Greylisting"}),"\n",(0,r.jsx)(n.li,{children:"Ratelimiting"}),"\n",(0,r.jsx)(n.li,{children:"Reputation"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All instances must connect to same Redis (or Redis cluster)."}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd's architecture provides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High performance"})," through event-driven, non-blocking I/O"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"})," via multi-process model and horizontal scaling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibility"})," through comprehensive Lua API and plugin system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reliability"})," with process isolation and graceful degradation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security"})," via sandboxing, input validation, and memory safety"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maintainability"})," through modular design and runtime reloading"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This design allows Rspamd to handle millions of messages per day on modest hardware while remaining extensible and easy to customize."}),"\n",(0,r.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/protocol",children:"Protocol Documentation"})," - HTTP/JSON protocol details"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/encryption",children:"Encryption Documentation"})," - HTTPCrypt encryption protocol"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/sync_async",children:"Sync/Async Model"})," - Deep dive into async processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs.rspamd.com/branches/master/developers/writing_rules",children:"Writing Rules"})," - Guide to creating custom rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/lua/index",children:"Lua API Reference"})," - Complete API documentation"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);