"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[119],{3952:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"modules/fuzzy_check","title":"Fuzzy check module","description":"The purpose of this module is to verify messages for certain fuzzy patterns that are stored in the","source":"@site/docs/modules/fuzzy_check.md","sourceDirName":"modules","slug":"/modules/fuzzy_check","permalink":"/docs.rspamd.com/branches/master/modules/fuzzy_check","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/fuzzy_check.md","tags":[],"version":"current","frontMatter":{"title":"Fuzzy check module"},"sidebar":"docs","previous":{"title":"Force Actions module","permalink":"/docs.rspamd.com/branches/master/modules/force_actions"},"next":{"title":"GPT Plugin","permalink":"/docs.rspamd.com/branches/master/modules/gpt"}}');var r=s(4848),t=s(8453);const o={title:"Fuzzy check module"},a="Fuzzy check module",l={},c=[{value:"Fuzzy patterns",id:"fuzzy-patterns",level:2},{value:"Module outline",id:"module-outline",level:2},{value:"Module configuration",id:"module-configuration",level:2},{value:"Training fuzzy_check",id:"training-fuzzy_check",level:2},{value:"Usage of the feeds provided by <code>rspamd.com</code>",id:"usage-of-the-feeds-provided-by-rspamdcom",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"fuzzy-check-module",children:"Fuzzy check module"})}),"\n",(0,r.jsxs)(n.p,{children:["The purpose of this module is to verify messages for certain fuzzy patterns that are stored in the\n",(0,r.jsx)(n.a,{href:"/workers/fuzzy_storage",children:"fuzzy storage workers"}),". At the same time, this module\nis responsible for teaching fuzzy storage with message patterns."]}),"\n",(0,r.jsx)(n.h2,{id:"fuzzy-patterns",children:"Fuzzy patterns"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd utilizes the ",(0,r.jsx)(n.code,{children:"shingles"})," algorithm to conduct fuzzy matching of messages. This algorithm\noperates in a probabilistic manner by using word chains as patterns, which helps to filter\nout spam or ham messages. A detailed description of the ",(0,r.jsx)(n.code,{children:"shingles"})," algorithm can be found in the\n",(0,r.jsx)(n.a,{href:"https://dl.acm.org/doi/10.5555/283554.283370",children:"research paper"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In Rspamd, we employ trigrams (3-grams) for the shingles algorithm, and we use\na set of hash functions, including siphash, mumhash, and others.\nCurrently, Rspamd uses 32 hashes for ",(0,r.jsx)(n.code,{children:"shingles"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Note that attachments and images are currently not matched against fuzzy hashes.\nInstead, they are verified by blake2 digests using strict match."}),"\n",(0,r.jsx)(n.h2,{id:"module-outline",children:"Module outline"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# local.d/fuzzy_check.conf\nfuzzy_check\n{\n    max_errors = ...; //int: Maximum number of upstream errors; affects error rate threshold\n    min_bytes = ...; //int: Minimum number of *bytes* to check a non-text part\n    min_height = ...; //int: Minimum pixel height of embedded images to check using fuzzy storage\n    min_length = ...; //int: Minimum number of *words* to check a text part\n    min_width = ...; //int: Minimum pixel width of embedded images to check using fuzzy storage\n    retransmits = ...; //int: Maximum number of retransmissions for a single request\n    revive_time = ...; //float: Time (seconds?) to lapse before re-resolving faulty upstream\n    symbol = "default symbol"; //string: Default symbol for rule (if no flags defined or matched)\n    text_multiplier = ...; //float: Multiplier for bytes limit when checking for text parts\n    timeout = ...; //time: Timeout to wait for a reply from a fuzzy server, e.g. 1s, 2m, 5h\n    whitelist = "..."; //string: Whitelisted IPs map\n\n    rule { //Fuzzy check rule\n        algorithm = "..."; //string: rule hashing algo\n        encryption_key = "..."; //string: Base32 value for the protocol encryption public key\n        fuzzy_key = "..."; //string: Base32 value for the hashing key (for private storages)\n        fuzzy_map = { //object: Map of SYMBOL -> data for flags configuration\n            max_score = ... ; //int: Maximum score for this flag\n            flag = ... ; //int: Flag number (ordinal)\n        }; \n        fuzzy_shingles_key = "..."; //string: Base32 value for the shingles hashing key (for private storages)\n        headers = "..."; //array: Headers that are used to make a separate hash\n        learn_condition = "..."; //string: Lua script that returns boolean function to check whether this task should be considered when training fuzzy storage\n        max_score = ...; //int: Max value for fuzzy hash when weight of symbol is exactly 1.0 (if value is higher, then the score is still 1.0)\n        mime_types = "..."; //array: Set of mime types (in form type/subtype, or type/*, or *) to check with fuzzy\n        min_bytes = ...; //int: Override module default min bytes for this rule\n        read_only = ...; //boolean: If true then never try to train this fuzzy storage\n        servers = "..."; //string: List of servers to check (or train)\n        short_text_direct_hash = ...; //boolean: Use direct hash for short texts\n        skip_hashes = "..."; //string: Whitelisted hashes map\n        skip_unknown = ...; //boolean: If true then ignores unknown flags and does not add the default fuzzy symbol\n        symbol = "..."; //string: Default symbol for rule (if no flags defined or matched)\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"module-configuration",children:"Module configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"fuzzy_check"})," module has several global options, including:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"min_bytes"}),": minimum length of attachments and images in bytes to check them in fuzzy storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"min_height"}),": minimum pixel height of images to be checked"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"min_length"}),": minimum length of text parts in words to perform fuzzy check (default - check all text parts)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"min_width"}),": minimum pixel width of images to be checked"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"retransmits"}),": maximum retransmissions before giving up"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"symbol"}),": default symbol to insert (if no flags match)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timeout"}),": timeout to wait for a reply, e.g. 1s, 2m, 5h"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"whitelist"}),": IPs in this list bypass all fuzzy checks"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"e.g."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:"# local.d/fuzzy_check.conf\n# the following are defaults in 1.9.4\nfuzzy_check {\n    min_bytes = 1k; # Since small parts and small attachments cause too many FP\n    timeout = 2s;\n    retransmits = 1;\n    ...\n    rule {...}\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["A fuzzy ",(0,r.jsx)(n.code,{children:"rule"})," is defined as a set of ",(0,r.jsx)(n.code,{children:"rule"})," definitions. Each ",(0,r.jsx)(n.code,{children:"rule"})," is required to have a ",(0,r.jsx)(n.code,{children:"servers"})," list for checking or teaching (training), along with a set of flags and optional parameters."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"servers"})," parameter defines ",(0,r.jsx)(n.a,{href:"/configuration/upstream",children:"upstream"})," object that can be configured to rotate or shard as needed. Sharding is performed based on the hash value itself."]}),"\n",(0,r.jsx)(n.p,{children:"The available parameters include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"algorithm"}),": rule hashing algo; one of: ",(0,r.jsx)(n.code,{children:"fasthash"})," (or just ",(0,r.jsx)(n.code,{children:"fast"}),"), ",(0,r.jsx)(n.code,{children:"mumhash"}),", ",(0,r.jsx)(n.code,{children:"siphash"})," (or ",(0,r.jsx)(n.code,{children:"old"}),") or ",(0,r.jsx)(n.code,{children:"xxhash"}),". The default value is ",(0,r.jsx)(n.code,{children:"mumhash"})," currently."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"encryption_key"}),": Base32 value public key to perform wire encryption"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fuzzy_map"}),": Map of SYMBOL -> data for flags configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fuzzy_key"}),": Base32 value for the hashing key (for private storages)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"learn_condition"}),": An Lua script that returns a boolean function to check whether this task\nshould be considered when training fuzzy storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"max_score"}),": float value: score threshold for this rule's activation/trigger"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mime_types"}),": array or list of acceptable mime-type regexs for this rule. Can be: ",(0,r.jsx)(n.code,{children:'["*"]'})," to match anything"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"read_only"}),": set to ",(0,r.jsx)(n.code,{children:"no"})," to enable training, set to ",(0,r.jsx)(n.code,{children:"yes"})," for no training"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"servers"}),": list of servers to check or train"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"short_text_direct_hash"}),": whether to check the exact hash match for short texts where fuzzy algorithm is not applicable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skip_unknown"}),": whether or not to ignore unmatched content; if ",(0,r.jsx)(n.code,{children:"true"})," or ",(0,r.jsx)(n.code,{children:"yes"})," then ignore unknown flags and\ndoes not add the default fuzzy symbol"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"symbol"}),": the default symbol applied for a rule."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example ",(0,r.jsx)(n.code,{children:"rule"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# local.d/fuzzy_check.conf\n...\nrule "FUZZY_CUSTOM" {\n  # List of servers. Can be an array or multi-value item\n  servers = "127.0.0.1:11335";\n\n  # List of additional mime types to be checked in this fuzzy ("*" for any)\n  mime_types = ["application/*"];\n\n  # Maximum global score for all maps combined\n  max_score = 20.0;\n\n  # Ignore flags that are not listed in maps for this rule\n  skip_unknown = yes;\n\n  # If this value is false (i.e. no), then allow learning for this fuzzy rule\n  read_only = no;\n\n  # Fast hash type\n  algorithm = "mumhash";\n  # This is used for binary parts and for text parts (size in bytes)\n  min_bytes = 1024;\n  # Text parts only: minimum number of words\n  min_length = 64;\n  # Divide min_bytes by 4 for texts\n  text_multiplier = 4.0,\n\n  # Minimum dimensions for images (in pixels)\n  min_height = 500;\n  min_width = 500;\n\n  # Scan all archives mime parts (e.g. zip attachments)\n  scan_archives = true;\n  # If part has num words < min_length, use direct hash instead of fuzzy\n  short_text_direct_hash = true;\n\n  # Apply fuzzy logic for text parts\n  text_shingles = true;\n  # Skip images if needed\n  skip_images = false;\n}\n...\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Each ",(0,r.jsx)(n.code,{children:"rule"})," can have several ",(0,r.jsx)(n.code,{children:"fuzzy_map"})," values, ordered by an ordinal ",(0,r.jsx)(n.code,{children:"flag"})," value. A single\nfuzzy storage can contain both good and bad hashes that should have different symbols,\nand thus, different weights. To accommodate these varying needs, multiple ",(0,r.jsx)(n.code,{children:"fuzzy_maps"}),"\ncan be defined within a fuzzy ",(0,r.jsx)(n.code,{children:"rule"}),", as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# local.d/fuzzy_check.conf\nrule "FUZZY_LOCAL" {\n...\nfuzzy_map = {\n  FUZZY_DENIED {\n    # Maximum weight for this list\n    max_score = 20.0;\n    # Flag value\n    flag = 1\n  }\n  FUZZY_PROB {\n    max_score = 10.0;\n    flag = 2\n  }\n  FUZZY_WHITE {\n    max_score = 2.0;\n    flag = 3\n  }\n}\n...\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Based on the information provided above, we can deduce that email messages accumulating\na ",(0,r.jsx)(n.code,{children:"max_score"})," above 20.0 will be assigned the ",(0,r.jsx)(n.code,{children:"FUZZY_DENIED"})," mapping, thus being categorized as spam."]}),"\n",(0,r.jsxs)(n.p,{children:["However, the concept of ",(0,r.jsx)(n.code,{children:"max_score"})," can be somewhat ambiguous. It's important to note that all hashes\nin the fuzzy storage have individual weights. For instance, if we have a hash ",(0,r.jsx)(n.code,{children:"A"})," that has been marked\nas spam by 100 users, then its weight will be ",(0,r.jsx)(n.code,{children:"100 * single_vote_weight"}),".\nConsequently, if the ",(0,r.jsx)(n.code,{children:"single_vote_weight"})," is ",(0,r.jsx)(n.code,{children:"1"}),", the final weight will be ",(0,r.jsx)(n.code,{children:"100"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In the context of fuzzy rules, ",(0,r.jsx)(n.code,{children:"max_score"})," refers to the weight that must be achieved by a rule in order\nfor it to add its symbol to the maximum score of 1.0 (which is then multiplied by the ",(0,r.jsx)(n.code,{children:"metric"})," value's weight).\nFor example, if the weight of a hash is ",(0,r.jsx)(n.code,{children:"100"})," and the ",(0,r.jsx)(n.code,{children:"max_score"})," is set to ",(0,r.jsx)(n.code,{children:"20"}),", then the rule will be added\nwith a weight of ",(0,r.jsx)(n.code,{children:"1"}),". However, if the ",(0,r.jsx)(n.code,{children:"max_score"})," is set to ",(0,r.jsx)(n.code,{children:"200"}),", the rule will be added with a weight\nlikely calculated through hyperbolic tangent as ",(0,r.jsx)(n.code,{children:"0.2"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"In the following configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'metric {\n    name = "default";\n    ...\n    symbol {\n        name = "FUZZY_DENIED";\n        weight = "10.0";\n    }\n    ...\n}\nfuzzy_check {\n    rule {\n    ...\n    fuzzy_map = {\n        FUZZY_DENIED {\n            # Maximum weight for this list\n            max_score = 20.0;\n            # Flag value\n            flag = 1\n        }\n        ...\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If a hash has value ",(0,r.jsx)(n.code,{children:"10"}),", then a symbol ",(0,r.jsx)(n.code,{children:"FUZZY_DENIED"})," with weight of ",(0,r.jsx)(n.code,{children:"2.0"})," will be added.\nIf a hash has value ",(0,r.jsx)(n.code,{children:"100500"}),", then ",(0,r.jsx)(n.code,{children:"FUZZY_DENIED"})," will have weight ",(0,r.jsx)(n.code,{children:"10.0"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"training-fuzzy_check",children:"Training fuzzy_check"}),"\n",(0,r.jsxs)(n.p,{children:["Module ",(0,r.jsx)(n.code,{children:"fuzzy_check"})," is not only able to check messages for fuzzy patterns, but it can also learn from them.\nTo accomplish this, you can use the ",(0,r.jsx)(n.code,{children:"rspamc"})," command or connect to the ",(0,r.jsx)(n.strong,{children:"controller"})," worker using HTTP protocol.\nFor learning, you must check the following settings:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Controller worker should be accessible by ",(0,r.jsx)(n.code,{children:"rspamc"})," or HTTP (check ",(0,r.jsx)(n.code,{children:"bind_socket"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Controller should allow privileged commands for this client (check ",(0,r.jsx)(n.code,{children:"enable_password"})," or ",(0,r.jsx)(n.code,{children:"secure_ip"})," settings)"]}),"\n",(0,r.jsxs)(n.li,{children:["Controller should have ",(0,r.jsx)(n.code,{children:"fuzzy_check"})," module configured to the servers specified"]}),"\n",(0,r.jsxs)(n.li,{children:["You should know ",(0,r.jsx)(n.code,{children:"fuzzy_key"})," and ",(0,r.jsx)(n.code,{children:"fuzzy_shingles_key"})," to operate with this storage"]}),"\n",(0,r.jsxs)(n.li,{children:["Your ",(0,r.jsx)(n.code,{children:"fuzzy_check"})," module should have ",(0,r.jsx)(n.code,{children:"fuzzy_map"})," configured to the flags used by server"]}),"\n",(0,r.jsxs)(n.li,{children:["Your ",(0,r.jsx)(n.code,{children:"fuzzy_check"})," rule must have ",(0,r.jsx)(n.code,{children:"read_only"})," option turned off (",(0,r.jsx)(n.code,{children:"read_only = false"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Your ",(0,r.jsx)(n.code,{children:"fuzzy_storage"})," worker should allow updates from the controller's host (",(0,r.jsx)(n.code,{children:"allow_update"})," option)"]}),"\n",(0,r.jsxs)(n.li,{children:["Your controller should be able to communicate with fuzzy storage by means of the ",(0,r.jsx)(n.code,{children:"UDP"})," protocol"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If all these conditions are met, then you can teach rspamd messages with rspamc:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rspamc -w <weight> -f <flag> fuzzy_add ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"or delete hashes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rspamc -f <flag> fuzzy_del ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"you can also delete a hash that you find in the log output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rspamc -f <flag> fuzzy_delhash <hash-id>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["On learning, rspamd sends commands to ",(0,r.jsx)(n.strong,{children:"all"})," servers inside a specific rule. On check,\nrspamd selects a server in a round-robin manner."]}),"\n",(0,r.jsxs)(n.h2,{id:"usage-of-the-feeds-provided-by-rspamdcom",children:["Usage of the feeds provided by ",(0,r.jsx)(n.code,{children:"rspamd.com"})]}),"\n",(0,r.jsxs)(n.p,{children:["By default, ",(0,r.jsx)(n.code,{children:"rspamd.com"})," feeds are enabled. However, if you decide to use these feeds,\nit's important to ensure that you comply with the ",(0,r.jsx)(n.a,{href:"/other/usage_policy",children:(0,r.jsx)(n.strong,{children:"free usage policy"})}),".\nFailure to do so may result in being blocked from using the service. In such cases, the special ",(0,r.jsx)(n.code,{children:"FUZZY_BLOCKED"})," symbol\nwill be assigned to the messages in question. It's worth noting that this symbol has no weight and will not affect any mail processing operations."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);