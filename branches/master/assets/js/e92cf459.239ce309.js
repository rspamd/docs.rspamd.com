"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[5924],{5275:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"about/features","title":"Features","description":"Rspamd is a high-performance spam filtering system that combines traditional spam detection techniques with modern machine learning approaches. Each message is analyzed by multiple independent checks (called symbols) that contribute to a cumulative spam score. Based on this score and configurable thresholds, Rspamd recommends an action (reject, greylist, add header, or accept) to your mail server.","source":"@site/docs/about/features.md","sourceDirName":"about","slug":"/about/features","permalink":"/docs.rspamd.com/branches/master/about/features","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/about/features.md","tags":[],"version":"current","frontMatter":{"title":"Features"},"sidebar":"docs","previous":{"title":"About Rspamd","permalink":"/docs.rspamd.com/branches/master/about/"},"next":{"title":"Comparison","permalink":"/docs.rspamd.com/branches/master/about/comparison"}}');var r=s(74848),l=s(28453);const t={title:"Features"},a="Rspamd Features",c={},d=[{value:"Core Architecture Features",id:"core-architecture-features",level:2},{value:"Event-Driven Non-Blocking Architecture",id:"event-driven-non-blocking-architecture",level:3},{value:"Multi-Worker Process Model",id:"multi-worker-process-model",level:3},{value:"Modular Plugin System",id:"modular-plugin-system",level:3},{value:"Flexible Configuration System",id:"flexible-configuration-system",level:3},{value:"Advanced Analysis Features",id:"advanced-analysis-features",level:2},{value:"Email Authentication Standards",id:"email-authentication-standards",level:3},{value:"Statistical Learning",id:"statistical-learning",level:3},{value:"Content Analysis",id:"content-analysis",level:3},{value:"Reputation and Blacklists",id:"reputation-and-blacklists",level:3},{value:"Anti-Abuse Mechanisms",id:"anti-abuse-mechanisms",level:3},{value:"Integration and Management",id:"integration-and-management",level:2},{value:"Protocol Support",id:"protocol-support",level:3},{value:"Web Interface",id:"web-interface",level:3},{value:"Monitoring and Observability",id:"monitoring-and-observability",level:3},{value:"Deployment and Scalability",id:"deployment-and-scalability",level:2},{value:"High Availability",id:"high-availability",level:3},{value:"Horizontal Scaling",id:"horizontal-scaling",level:3},{value:"Security",id:"security",level:3},{value:"Resource Efficiency",id:"resource-efficiency",level:3},{value:"Extending Rspamd",id:"extending-rspamd",level:2},{value:"Lua Plugin Development",id:"lua-plugin-development",level:3},{value:"External Service Integration",id:"external-service-integration",level:3},{value:"Migration from Other Systems",id:"migration-from-other-systems",level:2},{value:"SpamAssassin Compatibility",id:"spamassassin-compatibility",level:3},{value:"Comparison with Other Solutions",id:"comparison-with-other-solutions",level:2},{value:"Community and Support",id:"community-and-support",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rspamd-features",children:"Rspamd Features"})}),"\n",(0,r.jsx)(n.p,{children:"Rspamd is a high-performance spam filtering system that combines traditional spam detection techniques with modern machine learning approaches. Each message is analyzed by multiple independent checks (called symbols) that contribute to a cumulative spam score. Based on this score and configurable thresholds, Rspamd recommends an action (reject, greylist, add header, or accept) to your mail server."}),"\n",(0,r.jsx)(n.h2,{id:"core-architecture-features",children:"Core Architecture Features"}),"\n",(0,r.jsx)(n.h3,{id:"event-driven-non-blocking-architecture",children:"Event-Driven Non-Blocking Architecture"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses ",(0,r.jsx)(n.a,{href:"https://libevent.org/",children:"libevent"})," for asynchronous I/O operations, allowing a single worker process to handle thousands of concurrent connections without blocking."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Technical details:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Non-blocking DNS lookups (hundreds of RBL/DKIM/SPF queries per message)"}),"\n",(0,r.jsx)(n.li,{children:"Asynchronous Redis operations for statistics and learning"}),"\n",(0,r.jsx)(n.li,{children:"Parallel HTTP requests to external services (antivirus, URL checkers)"}),"\n",(0,r.jsx)(n.li,{children:"Async session tracking ensures no message is finalized until all checks complete"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance impact:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single worker can process 100+ messages simultaneously"}),"\n",(0,r.jsx)(n.li,{children:"Typical message scanning: 50-200ms (including all network operations)"}),"\n",(0,r.jsx)(n.li,{children:"Memory footprint: ~50-100MB per worker process"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/developers/architecture#event-driven-model",children:"Architecture documentation"})," for internal details."]}),"\n",(0,r.jsx)(n.h3,{id:"multi-worker-process-model",children:"Multi-Worker Process Model"}),"\n",(0,r.jsx)(n.p,{children:"Rspamd uses a master-worker architecture inspired by nginx:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Main process"}),": Configuration management, worker lifecycle, no message processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Normal workers"}),": Message analysis and scoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Proxy workers"}),": Protocol translation (milter, HTTP) and load balancing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controller worker"}),": Web UI and management API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fuzzy storage worker"}),": Distributed fuzzy hash storage"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Isolated processes improve stability (one worker crash doesn't affect others)"}),"\n",(0,r.jsx)(n.li,{children:"Easy horizontal scaling (add more workers or servers)"}),"\n",(0,r.jsx)(n.li,{children:"Zero-downtime configuration reloads (graceful worker restart)"}),"\n",(0,r.jsx)(n.li,{children:"Per-worker resource limits prevent runaway processes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"modular-plugin-system",children:"Modular Plugin System"}),"\n",(0,r.jsx)(n.p,{children:"Over 60 built-in modules can be enabled/disabled/configured independently:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# Example: Configure SPF module\n# /etc/rspamd/local.d/spf.conf\nexternal_relay = ["192.168.1.0/24"];  # Skip SPF for internal relays\nwhitelist = ["example.com"];          # Whitelist trusted domains\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Module categories:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication"}),": SPF, DKIM, DMARC, ARC"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Content analysis"}),": Regex rules, MIME checks, language detection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External services"}),": Antivirus, URL redirector, GPT integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Statistics"}),": Bayes classifier, neural networks, fuzzy hashing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Policies"}),": Rate limiting, greylisting, whitelisting, force actions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Exporting"}),": ClickHouse, Elastic, metadata exporter"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/",children:"Modules documentation"})," for complete list."]}),"\n",(0,r.jsx)(n.h3,{id:"flexible-configuration-system",children:"Flexible Configuration System"}),"\n",(0,r.jsxs)(n.p,{children:["Rspamd uses ",(0,r.jsx)(n.a,{href:"/configuration/ucl",children:"UCL (Universal Configuration Language)"})," - a JSON-compatible format with includes and macros:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# Base configuration\nreject = 15;\n\n# Include external file\n.include(try=true) "/etc/rspamd/custom-thresholds.conf"\n\n# Macros\n.define MY_NETWORK "192.168.1.0/24"\nwhitelist_ip = "$MY_NETWORK";\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration layers:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Default config: ",(0,r.jsx)(n.code,{children:"/etc/rspamd/rspamd.conf"})]}),"\n",(0,r.jsxs)(n.li,{children:["Module defaults: ",(0,r.jsx)(n.code,{children:"/etc/rspamd/modules.d/*.conf"})]}),"\n",(0,r.jsxs)(n.li,{children:["Local overrides: ",(0,r.jsx)(n.code,{children:"/etc/rspamd/local.d/*.conf"})," (recommended)"]}),"\n",(0,r.jsxs)(n.li,{children:["Force overrides: ",(0,r.jsx)(n.code,{children:"/etc/rspamd/override.d/*.conf"})," (complete replacement)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/guides/configuration/fundamentals",children:"Configuration fundamentals"})," for best practices."]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-analysis-features",children:"Advanced Analysis Features"}),"\n",(0,r.jsx)(n.h3,{id:"email-authentication-standards",children:"Email Authentication Standards"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SPF (Sender Policy Framework):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validates sender IP against DNS records"}),"\n",(0,r.jsx)(n.li,{children:"Supports includes, redirects, and complex policies"}),"\n",(0,r.jsxs)(n.li,{children:["Symbols: ",(0,r.jsx)(n.code,{children:"R_SPF_ALLOW"}),", ",(0,r.jsx)(n.code,{children:"R_SPF_FAIL"}),", ",(0,r.jsx)(n.code,{children:"R_SPF_SOFTFAIL"}),", ",(0,r.jsx)(n.code,{children:"R_SPF_NEUTRAL"}),", ",(0,r.jsx)(n.code,{children:"R_SPF_PERMFAIL"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"DKIM (DomainKeys Identified Mail):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verifies cryptographic signatures in email headers"}),"\n",(0,r.jsx)(n.li,{children:"Supports multiple signatures per message"}),"\n",(0,r.jsx)(n.li,{children:"Caches public keys in Redis for performance"}),"\n",(0,r.jsxs)(n.li,{children:["Symbols: ",(0,r.jsx)(n.code,{children:"R_DKIM_ALLOW"}),", ",(0,r.jsx)(n.code,{children:"R_DKIM_REJECT"}),", ",(0,r.jsx)(n.code,{children:"R_DKIM_TEMPFAIL"}),", ",(0,r.jsx)(n.code,{children:"R_DKIM_PERMFAIL"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"DMARC (Domain-based Message Authentication):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Combines SPF and DKIM results with domain policy"}),"\n",(0,r.jsx)(n.li,{children:"Supports aggregate and forensic reporting"}),"\n",(0,r.jsx)(n.li,{children:"Policy enforcement: none, quarantine, reject"}),"\n",(0,r.jsxs)(n.li,{children:["Symbols: ",(0,r.jsx)(n.code,{children:"DMARC_POLICY_ALLOW"}),", ",(0,r.jsx)(n.code,{children:"DMARC_POLICY_REJECT"}),", ",(0,r.jsx)(n.code,{children:"DMARC_POLICY_QUARANTINE"}),", ",(0,r.jsx)(n.code,{children:"DMARC_POLICY_SOFTFAIL"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ARC (Authenticated Received Chain):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Preserves authentication results across forwarding"}),"\n",(0,r.jsx)(n.li,{children:"Validates authentication chain integrity"}),"\n",(0,r.jsx)(n.li,{children:"Essential for mailing lists and forwarders"}),"\n",(0,r.jsxs)(n.li,{children:["Symbols: ",(0,r.jsx)(n.code,{children:"ARC_ALLOW"}),", ",(0,r.jsx)(n.code,{children:"ARC_REJECT"}),", ",(0,r.jsx)(n.code,{children:"ARC_INVALID"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/spf",children:"SPF module"}),", ",(0,r.jsx)(n.a,{href:"/modules/dkim",children:"DKIM module"}),", ",(0,r.jsx)(n.a,{href:"/modules/dmarc",children:"DMARC module"}),", ",(0,r.jsx)(n.a,{href:"/modules/arc",children:"ARC module"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"statistical-learning",children:"Statistical Learning"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Bayesian Classification:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Token-based statistical analysis (words, patterns, metadata)"}),"\n",(0,r.jsx)(n.li,{children:"Redis backend with automatic token expiration"}),"\n",(0,r.jsx)(n.li,{children:"Per-user and per-language training support"}),"\n",(0,r.jsx)(n.li,{children:"Autolearn mode: automatically train on high-confidence spam/ham"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/classifier-bayes.conf\nbackend = "redis";\nnew_schema = true;\nexpire = 8640000;  # 100 days\n\nautolearn {\n  spam_threshold = 12.0;\n  ham_threshold = -2.0;\n  check_balance = true;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Neural Networks:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-layer perceptron with rule outputs as inputs"}),"\n",(0,r.jsx)(n.li,{children:"Automatically learns optimal symbol weight combinations"}),"\n",(0,r.jsx)(n.li,{children:"Separate networks for short/medium/long messages"}),"\n",(0,r.jsx)(n.li,{children:"Requires Redis for weight storage"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/neural.conf\nrules {\n  "NEURAL_SPAM" {\n    train {\n      max_trains = 10000;  # Training cycles\n      max_usages = 100;    # Retrains after this many classifications\n      spam_score = 8.0;    # Learn as spam if score >= 8\n      ham_score = -2.0;    # Learn as ham if score <= -2\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fuzzy Hashing:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Perceptual hashing identifies similar messages"}),"\n",(0,r.jsx)(n.li,{children:"Resistant to minor content modifications"}),"\n",(0,r.jsx)(n.li,{children:"Distributed storage with replication"}),"\n",(0,r.jsx)(n.li,{children:"Encrypted communication between nodes"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Use cases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Newsletter detection (shared fuzzy hash across servers)"}),"\n",(0,r.jsx)(n.li,{children:"Spam campaign identification (similar messages)"}),"\n",(0,r.jsx)(n.li,{children:"Hash sharing with trusted partners"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/configuration/statistic",children:"Statistic configuration"}),", ",(0,r.jsx)(n.a,{href:"/modules/neural",children:"Neural module"}),", ",(0,r.jsx)(n.a,{href:"/modules/fuzzy_check",children:"Fuzzy check module"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"content-analysis",children:"Content Analysis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Regular Expression Rules:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"LuaJIT-optimized regex engine (Hyperscan on x86_64)"}),"\n",(0,r.jsx)(n.li,{children:"Multi-expression matching in single pass"}),"\n",(0,r.jsx)(n.li,{children:"Header, body, URL, and raw content matching"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example custom rule:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'-- /etc/rspamd/local.d/custom_rules.lua\nrspamd_config.SUSPICIOUS_ATTACHMENT = {\n  callback = function(task)\n    local parts = task:get_parts()\n    for _, part in ipairs(parts) do\n      local ext = part:get_extension()\n      if ext and (ext == "exe" or ext == "scr" or ext == "bat") then\n        return true, 1.0, ext  -- Return true, weight 1.0, attachment extension\n      end\n    end\n    return false\n  end,\n  score = 5.0,\n  group = "malware",\n  description = "Suspicious executable attachment"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MIME Structure Analysis:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Malformed MIME detection"}),"\n",(0,r.jsx)(n.li,{children:"Charset validation and conversion"}),"\n",(0,r.jsx)(n.li,{children:"Attachment type checking"}),"\n",(0,r.jsx)(n.li,{children:"HTML/text ratio analysis"}),"\n",(0,r.jsx)(n.li,{children:"Embedded image analysis"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Language and Charset Detection:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatic language identification (60+ languages)"}),"\n",(0,r.jsx)(n.li,{children:"Mixed charset detection (common in spam)"}),"\n",(0,r.jsx)(n.li,{children:"UTF-8 validation"}),"\n",(0,r.jsx)(n.li,{children:"CJK (Chinese, Japanese, Korean) support"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"URL Processing:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Extracts URLs from HTML, text, and headers"}),"\n",(0,r.jsx)(n.li,{children:"SURBL/URIBL lookups (real-time URL blacklists)"}),"\n",(0,r.jsx)(n.li,{children:"URL redirector resolution (follows shortened URLs)"}),"\n",(0,r.jsx)(n.li,{children:"Phishing detection (lookalike domains)"}),"\n",(0,r.jsx)(n.li,{children:"TLD validation"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/regexp",children:"Regexp module"}),", ",(0,r.jsx)(n.a,{href:"/modules/surbl",children:"SURBL module"}),", ",(0,r.jsx)(n.a,{href:"/modules/phishing",children:"Phishing module"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"reputation-and-blacklists",children:"Reputation and Blacklists"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"RBL (Real-time Blackhole Lists):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Parallel DNS queries to multiple RBLs (50+ preconfigured)"}),"\n",(0,r.jsx)(n.li,{children:"IP reputation: sender IP, email server IPs from headers"}),"\n",(0,r.jsx)(n.li,{children:"Automatic retry logic and caching"}),"\n",(0,r.jsx)(n.li,{children:"Configurable weights per RBL"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Commonly used RBLs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Spamhaus (ZEN, DBL, PBL)"}),"\n",(0,r.jsx)(n.li,{children:"SORBS"}),"\n",(0,r.jsx)(n.li,{children:"SpamCop"}),"\n",(0,r.jsx)(n.li,{children:"Barracuda"}),"\n",(0,r.jsx)(n.li,{children:"URIBL (URL-based)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ASN and Country Detection:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"GeoIP2/MaxMind database integration"}),"\n",(0,r.jsx)(n.li,{children:"ASN-based reputation scoring"}),"\n",(0,r.jsx)(n.li,{children:"Country-specific rules"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"IP Score Module:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Tracks IP reputation based on historical behavior"}),"\n",(0,r.jsx)(n.li,{children:"Learns from user actions (spam/ham classification)"}),"\n",(0,r.jsx)(n.li,{children:"Exponential decay for old data"}),"\n",(0,r.jsx)(n.li,{children:"Whitelist trusted IPs automatically"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/rbl",children:"RBL module"}),", ",(0,r.jsx)(n.a,{href:"/modules/asn",children:"ASN module"}),", ",(0,r.jsx)(n.a,{href:"/modules/ip_score",children:"IP Score module"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"anti-abuse-mechanisms",children:"Anti-Abuse Mechanisms"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Greylisting:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Temporary rejection of unknown sender/recipient pairs"}),"\n",(0,r.jsx)(n.li,{children:"Legitimate MTAs retry within minutes; spambots don't"}),"\n",(0,r.jsx)(n.li,{children:"Redis-backed triplet storage (IP, sender, recipient)"}),"\n",(0,r.jsx)(n.li,{children:"Configurable delay and expiration"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:"# /etc/rspamd/local.d/greylist.conf\nexpire = 86400;      # 24 hours\ntimeout = 300;       # 5 minutes delay\nwhitelist_ip = [];   # IPs to skip greylisting\nwhitelist_rcpt = []; # Recipients to skip greylisting\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Rate Limiting:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Limits messages per time period by IP, sender, recipient, or custom selector"}),"\n",(0,r.jsx)(n.li,{children:"Bucket-based rate limiting (token bucket algorithm)"}),"\n",(0,r.jsx)(n.li,{children:"Multiple limit tiers (soft limits, hard limits)"}),"\n",(0,r.jsx)(n.li,{children:"Redis-backed counters"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/ratelimit.conf\nrates {\n  # Limit to 100 messages per hour per sender IP\n  to = {\n    bucket = {\n      burst = 120;\n      rate = "100 / 1h";\n    }\n  }\n\n  # Limit to 1000 recipients per hour per authenticated user\n  to_ip_from = {\n    bucket = {\n      burst = 1100;\n      rate = "1000 / 1h";\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Spamtrap Detection:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mark certain addresses as spamtraps"}),"\n",(0,r.jsx)(n.li,{children:"Auto-learn as spam any message to spamtraps"}),"\n",(0,r.jsx)(n.li,{children:"Feed spamtraps to Bayesian classifier"}),"\n",(0,r.jsx)(n.li,{children:"Block sender IPs sending to spamtraps"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/greylisting",children:"Greylisting module"}),", ",(0,r.jsx)(n.a,{href:"/modules/ratelimit",children:"Ratelimit module"}),", ",(0,r.jsx)(n.a,{href:"/modules/spamtrap",children:"Spamtrap module"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"integration-and-management",children:"Integration and Management"}),"\n",(0,r.jsx)(n.h3,{id:"protocol-support",children:"Protocol Support"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"HTTP/JSON API:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Native protocol for message scanning"}),"\n",(0,r.jsx)(n.li,{children:"RESTful endpoints for management"}),"\n",(0,r.jsx)(n.li,{children:"WebSocket support for real-time updates"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/developers/encryption",children:"HTTPCrypt encryption"})," for inter-server communication"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example API request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:11333/checkv2 \\\n  -H "Content-Type: message/rfc822" \\\n  --data-binary @message.eml\n'})}),"\n",(0,r.jsx)(n.p,{children:"Response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "action": "add header",\n  "score": 8.5,\n  "required_score": 15.0,\n  "symbols": {\n    "R_SPF_FAIL": {"score": 1.0},\n    "BAYES_SPAM": {"score": 3.5, "options": ["0.95"]},\n    "SUSPICIOUS_URL": {"score": 2.0}\n  },\n  "messages": [],\n  "message-id": "msg-12345"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Milter Protocol:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compatible with Postfix, Sendmail, and other milter-capable MTAs"}),"\n",(0,r.jsx)(n.li,{children:"Protocol translation via Proxy worker"}),"\n",(0,r.jsx)(n.li,{children:"Support for all milter actions (reject, tempfail, add/remove headers, modify body)"}),"\n",(0,r.jsx)(n.li,{children:"Multiplexing multiple messages over single connection"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exim Protocol:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Native integration via Exim's spam scanner interface"}),"\n",(0,r.jsx)(n.li,{children:"Support for Exim ACLs"}),"\n",(0,r.jsx)(n.li,{children:"Per-recipient scanning"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/developers/protocol",children:"Protocol documentation"}),", ",(0,r.jsx)(n.a,{href:"/tutorials/integration",children:"Integration guide"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"web-interface",children:"Web Interface"}),"\n",(0,r.jsx)(n.p,{children:"Modern single-page application for monitoring and management:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Real-time message history with detailed symbol breakdown"}),"\n",(0,r.jsx)(n.li,{children:"Live statistics and graphs (messages/sec, actions distribution)"}),"\n",(0,r.jsx)(n.li,{children:"Bayesian training (learn spam/ham from web UI)"}),"\n",(0,r.jsx)(n.li,{children:"Fuzzy hash management (add/delete hashes)"}),"\n",(0,r.jsx)(n.li,{children:"Configuration validation"}),"\n",(0,r.jsx)(n.li,{children:"Symbol and rule management"}),"\n",(0,r.jsx)(n.li,{children:"Server cluster monitoring (multiple Rspamd instances)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Access control:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Password-protected (bcrypt hashing)"}),"\n",(0,r.jsx)(n.li,{children:"Separate read-only and enable passwords"}),"\n",(0,r.jsx)(n.li,{children:"IP-based access restrictions"}),"\n",(0,r.jsx)(n.li,{children:"Optional HTTPS with client certificates"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"API endpoints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/stat"})," - Server statistics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/graph"})," - Historical data (requires ClickHouse or Redis)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/history"})," - Recent messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/errors"})," - Error log"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/learn_spam"}),", ",(0,r.jsx)(n.code,{children:"/learn_ham"})," - Training endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/saveactions"})," - Modify action thresholds"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/workers/controller",children:"Controller worker"})," documentation."]}),"\n",(0,r.jsx)(n.h3,{id:"monitoring-and-observability",children:"Monitoring and Observability"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Built-in Metrics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Message processing statistics (total, per action, per symbol)"}),"\n",(0,r.jsx)(n.li,{children:"Performance metrics (scan time, DNS time, cache hit rate)"}),"\n",(0,r.jsx)(n.li,{children:"Bayesian learning statistics (spam/ham ratio, token count)"}),"\n",(0,r.jsx)(n.li,{children:"Connection statistics (active connections, total processed)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Prometheus Integration:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/metrics"})," endpoint in Prometheus format"]}),"\n",(0,r.jsx)(n.li,{children:"Metric exporter module for custom metrics"}),"\n",(0,r.jsx)(n.li,{children:"Pre-built Grafana dashboards available"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Logging:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Structured JSON logging"}),"\n",(0,r.jsx)(n.li,{children:"Syslog support"}),"\n",(0,r.jsx)(n.li,{children:"Per-module log levels"}),"\n",(0,r.jsx)(n.li,{children:"Request ID tracking for debugging"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Health Checks:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/ping"})," - Liveness check (is Rspamd responding?)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/stat"})," - Readiness check (is Rspamd ready to process?)"]}),"\n",(0,r.jsx)(n.li,{children:"Systemd watchdog support"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example Prometheus query:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-promql",children:"# Message processing rate\nrate(rspamd_scanned_total[5m])\n\n# Spam detection rate\nrate(rspamd_spam_total[5m]) / rate(rspamd_scanned_total[5m])\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/metric_exporter",children:"Metric exporter module"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"deployment-and-scalability",children:"Deployment and Scalability"}),"\n",(0,r.jsx)(n.h3,{id:"high-availability",children:"High Availability"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Load Balancing:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Proxy worker can forward to multiple Normal workers"}),"\n",(0,r.jsx)(n.li,{children:"Round-robin, hash-based, or least-connection algorithms"}),"\n",(0,r.jsx)(n.li,{children:"Automatic failover on worker failure"}),"\n",(0,r.jsx)(n.li,{children:"Health checks for backend workers"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Redis High Availability:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Redis Sentinel support for automatic failover"}),"\n",(0,r.jsx)(n.li,{children:"Redis Cluster support for sharding"}),"\n",(0,r.jsx)(n.li,{children:"Consistent hashing for multi-Redis setups"}),"\n",(0,r.jsx)(n.li,{children:"Connection pooling and retry logic"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fuzzy Storage Replication:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Master-slave replication for fuzzy hashes"}),"\n",(0,r.jsx)(n.li,{children:"Mirroring mode: write to multiple storage nodes"}),"\n",(0,r.jsx)(n.li,{children:"Encrypted replication channels"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration Synchronization:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Centralized configuration management (version control)"}),"\n",(0,r.jsx)(n.li,{children:"Configuration templating (Ansible, Puppet, Chef)"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic configuration updates via controller API"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"horizontal-scaling",children:"Horizontal Scaling"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Typical deployment patterns:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Single server"})," (< 100K messages/day):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"MTA \u2192 Rspamd (proxy + normal + controller) \u2192 Redis\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Load-balanced"})," (100K - 1M messages/day):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"              \u250c\u2192 Rspamd Worker 1 \u2510\nMTA \u2192 Rspamd Proxy \u2192\u2192 Rspamd Worker 2 \u2192 Redis\n              \u2514\u2192 Rspamd Worker 3 \u2518\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Distributed"})," (> 1M messages/day):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"MTA Cluster \u2192 Hardware LB \u2192 Rspamd Proxy Cluster \u2192 Rspamd Worker Cluster \u2192 Redis Cluster\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance expectations:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single worker: 5-10 messages/sec (500K-1M messages/day)"}),"\n",(0,r.jsx)(n.li,{children:"4-worker server: 20-40 messages/sec (2-3M messages/day)"}),"\n",(0,r.jsx)(n.li,{children:"DNS resolver speed is often the bottleneck (use local recursive resolver)"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/developers/architecture#deployment-patterns",children:"Architecture deployment patterns"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"HTTPCrypt Protocol:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lightweight encryption for inter-server communication"}),"\n",(0,r.jsx)(n.li,{children:"X25519 key exchange + XChaCha20-Poly1305 encryption"}),"\n",(0,r.jsx)(n.li,{children:"Forward secrecy with ephemeral keys"}),"\n",(0,r.jsx)(n.li,{children:"No certificate management (public key cryptography)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# Enable encryption between proxy and workers\n# /etc/rspamd/local.d/worker-proxy.inc\nupstream "backend" {\n  hosts = "backend1.example.com:11333";\n  encryption = {\n    type = "httpcrypt";\n    pubkey = "your-public-key-here";\n  };\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Secure Defaults:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Web interface bound to localhost by default"}),"\n",(0,r.jsx)(n.li,{children:"No open ports on public interfaces"}),"\n",(0,r.jsx)(n.li,{children:"Minimal attack surface (no direct MTA protocol handling)"}),"\n",(0,r.jsx)(n.li,{children:"Regular security updates"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/developers/encryption",children:"Encryption documentation"})," for cryptographic details."]}),"\n",(0,r.jsx)(n.h3,{id:"resource-efficiency",children:"Resource Efficiency"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Memory Management:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Custom memory pools for per-message allocations"}),"\n",(0,r.jsx)(n.li,{children:"Bulk deallocation when message processing completes"}),"\n",(0,r.jsx)(n.li,{children:"Typical memory usage: 50-100MB per worker"}),"\n",(0,r.jsx)(n.li,{children:"No memory leaks in core (valgrind-tested)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"CPU Optimization:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Zero-copy message handling where possible"}),"\n",(0,r.jsx)(n.li,{children:"Regex engine optimization (Hyperscan on x86_64)"}),"\n",(0,r.jsx)(n.li,{children:"LuaJIT for fast rule execution"}),"\n",(0,r.jsx)(n.li,{children:"SIMD operations for fuzzy hashing"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Disk I/O:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimal disk writes (only logs)"}),"\n",(0,r.jsx)(n.li,{children:"All working data in Redis (in-memory)"}),"\n",(0,r.jsx)(n.li,{children:"Optional persistent history (SQLite or ClickHouse)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Network Optimization:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Connection pooling for Redis, HTTP, and DNS"}),"\n",(0,r.jsx)(n.li,{children:"Parallel DNS queries (configurable socket count)"}),"\n",(0,r.jsx)(n.li,{children:"Keep-alive connections where supported"}),"\n",(0,r.jsx)(n.li,{children:"Request pipelining for batch operations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"extending-rspamd",children:"Extending Rspamd"}),"\n",(0,r.jsx)(n.h3,{id:"lua-plugin-development",children:"Lua Plugin Development"}),"\n",(0,r.jsx)(n.p,{children:"Write custom plugins in Lua with full access to Rspamd internals:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- /etc/rspamd/plugins.d/sender_reputation.lua\nlocal lua_redis = require \"lua_redis\"\nlocal rspamd_logger = require \"rspamd_logger\"\n\n-- Callback for checking sender reputation\nlocal function check_sender_reputation(task)\n  local from = task:get_from('smtp')\n  if not from or not from[1] then\n    return false\n  end\n\n  local sender = from[1].addr:lower()\n\n  -- Async Redis callback\n  local function redis_cb(err, data)\n    if err then\n      rspamd_logger.warnx(task, 'Redis error: %s', err)\n      return\n    end\n\n    if data then\n      local score = tonumber(data)\n      if score and score > 10 then\n        -- Insert result symbol with score\n        task:insert_result('SENDER_BAD_REPUTATION', 1.0, string.format('score=%s', score))\n      end\n    end\n  end\n\n  -- Make async Redis request\n  local redis_params = lua_redis.parse_redis_server('reputation')\n  if redis_params then\n    local ret = lua_redis.redis_make_request(task,\n      redis_params,\n      sender,\n      false, -- is write\n      redis_cb,\n      'GET',\n      {'sender_rep:' .. sender}\n    )\n    if not ret then\n      rspamd_logger.warnx(task, 'Cannot make redis request')\n    end\n  end\n\n  return false  -- Do not insert symbol here; will be inserted in callback\nend\n\n-- Register callback symbol (virtual, no score)\nrspamd_config:register_symbol({\n  name = 'SENDER_REPUTATION_CHECK',\n  type = 'normal',\n  callback = check_sender_reputation,\n  flags = 'nice', -- Execute even if message is already spam\n  priority = 5\n})\n\n-- Register result symbol (this gets the score)\nrspamd_config:register_symbol({\n  name = 'SENDER_BAD_REPUTATION',\n  type = 'virtual',\n  parent = 'SENDER_REPUTATION_CHECK',\n  score = 5.0,\n  group = 'reputation',\n  description = 'Sender has bad reputation in our database'\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key concepts for async operations:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Main callback registers a check symbol (virtual, no score)"}),"\n",(0,r.jsx)(n.li,{children:"Async operations (Redis, DNS, HTTP) use callbacks to insert results"}),"\n",(0,r.jsxs)(n.li,{children:["Result symbols use ",(0,r.jsx)(n.code,{children:"parent"})," to link to check symbol"]}),"\n",(0,r.jsxs)(n.li,{children:["Main callback returns ",(0,r.jsx)(n.code,{children:"false"})," (result inserted asynchronously via ",(0,r.jsx)(n.code,{children:"task:insert_result()"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Lua API features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Full message access (headers, body, attachments, MIME structure)"}),"\n",(0,r.jsx)(n.li,{children:"Async operations (Redis, HTTP, DNS)"}),"\n",(0,r.jsx)(n.li,{children:"Task manipulation (insert symbols, add/modify headers)"}),"\n",(0,r.jsx)(n.li,{children:"Configuration access"}),"\n",(0,r.jsx)(n.li,{children:"Logging and debugging"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/developers/writing_rules",children:"Writing rules"})," and ",(0,r.jsx)(n.a,{href:"/lua/",children:"Lua API documentation"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"external-service-integration",children:"External Service Integration"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Antivirus Scanning:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"ClamAV, Sophos, F-Prot, Kaspersky, ESET support"}),"\n",(0,r.jsx)(n.li,{children:"Parallel scanning with multiple engines"}),"\n",(0,r.jsx)(n.li,{children:"Result caching to avoid re-scanning"}),"\n",(0,r.jsx)(n.li,{children:"Timeout and retry handling"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"URL Filtering:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Google Safe Browsing API"}),"\n",(0,r.jsx)(n.li,{children:"OPH (Open Phish)"}),"\n",(0,r.jsx)(n.li,{children:"Custom URL checkers via HTTP"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"AI/ML Services:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"GPT integration for content analysis"}),"\n",(0,r.jsx)(n.li,{children:"Custom HTTP-based classifiers"}),"\n",(0,r.jsx)(n.li,{children:"Verdict aggregation with existing rules"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Data Export:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"ClickHouse for long-term analytics"}),"\n",(0,r.jsx)(n.li,{children:"Elasticsearch for log aggregation"}),"\n",(0,r.jsx)(n.li,{children:"Custom webhooks for message events"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/modules/external_services",children:"External services module"}),", ",(0,r.jsx)(n.a,{href:"/modules/antivirus",children:"Antivirus module"}),", ",(0,r.jsx)(n.a,{href:"/modules/clickhouse",children:"ClickHouse module"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"migration-from-other-systems",children:"Migration from Other Systems"}),"\n",(0,r.jsx)(n.h3,{id:"spamassassin-compatibility",children:"SpamAssassin Compatibility"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Migration approach:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rspamd can work alongside SpamAssassin during transition"}),"\n",(0,r.jsx)(n.li,{children:"Compatible scoring system and similar rule concepts"}),"\n",(0,r.jsx)(n.li,{children:"SpamAssassin module can import scores from SA configuration"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Differences from SpamAssassin:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Much faster (10-100x depending on ruleset)"}),"\n",(0,r.jsx)(n.li,{children:"Event-driven architecture vs process-per-message"}),"\n",(0,r.jsx)(n.li,{children:"Better handling of modern spam techniques (DMARC, ARC, neural networks)"}),"\n",(0,r.jsx)(n.li,{children:"Statistical learning requires retraining (Bayes databases are not compatible)"}),"\n",(0,r.jsx)(n.li,{children:"Different plugin architecture (Lua vs Perl)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Migration strategy:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Install Rspamd alongside SpamAssassin"}),"\n",(0,r.jsx)(n.li,{children:"Configure both to add headers (not reject) for testing"}),"\n",(0,r.jsx)(n.li,{children:"Compare results over several days"}),"\n",(0,r.jsx)(n.li,{children:"Retrain Bayesian classifier with your mail corpus"}),"\n",(0,r.jsx)(n.li,{children:"Gradually transition to Rspamd once confident"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/tutorials/migrate_sa",children:"SpamAssassin migration guide"})," for detailed migration steps."]}),"\n",(0,r.jsx)(n.h2,{id:"comparison-with-other-solutions",children:"Comparison with Other Solutions"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"Rspamd"}),(0,r.jsx)(n.th,{children:"SpamAssassin"}),(0,r.jsx)(n.th,{children:"Amavis"}),(0,r.jsx)(n.th,{children:"Rspamd Advantage"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Performance"})}),(0,r.jsx)(n.td,{children:"20-40 msg/sec/core"}),(0,r.jsx)(n.td,{children:"2-4 msg/sec/core"}),(0,r.jsx)(n.td,{children:"5-10 msg/sec/core"}),(0,r.jsx)(n.td,{children:"10-100x faster"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Architecture"})}),(0,r.jsx)(n.td,{children:"Event-driven, async"}),(0,r.jsx)(n.td,{children:"Process-per-message"}),(0,r.jsx)(n.td,{children:"Process pool"}),(0,r.jsx)(n.td,{children:"Non-blocking I/O"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Memory usage"})}),(0,r.jsx)(n.td,{children:"50-100MB/worker"}),(0,r.jsx)(n.td,{children:"30-50MB/process"}),(0,r.jsx)(n.td,{children:"100-200MB/process"}),(0,r.jsx)(n.td,{children:"Efficient memory pools"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Learning"})}),(0,r.jsx)(n.td,{children:"Bayes, Neural, Fuzzy"}),(0,r.jsx)(n.td,{children:"Bayes only"}),(0,r.jsx)(n.td,{children:"Via SpamAssassin"}),(0,r.jsx)(n.td,{children:"Multiple ML methods"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Configuration"})}),(0,r.jsx)(n.td,{children:"UCL (structured)"}),(0,r.jsx)(n.td,{children:"Plain text rules"}),(0,r.jsx)(n.td,{children:"Perl code"}),(0,r.jsx)(n.td,{children:"Type-safe, validated"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Web UI"})}),(0,r.jsx)(n.td,{children:"Modern SPA"}),(0,r.jsx)(n.td,{children:"None (third-party)"}),(0,r.jsx)(n.td,{children:"None"}),(0,r.jsx)(n.td,{children:"Built-in monitoring"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Protocol"})}),(0,r.jsx)(n.td,{children:"HTTP, Milter, native"}),(0,r.jsx)(n.td,{children:"Spamc/spamd"}),(0,r.jsx)(n.td,{children:"SMTP proxy"}),(0,r.jsx)(n.td,{children:"Flexible integration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Real-time updates"})}),(0,r.jsx)(n.td,{children:"Dynamic rules via maps"}),(0,r.jsx)(n.td,{children:"Restart required"}),(0,r.jsx)(n.td,{children:"Restart required"}),(0,r.jsx)(n.td,{children:"No downtime"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Clustering"})}),(0,r.jsx)(n.td,{children:"Native support"}),(0,r.jsx)(n.td,{children:"Limited"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Built-in load balancing"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/about/comparison",children:"Comparison page"})," for detailed analysis."]}),"\n",(0,r.jsx)(n.h2,{id:"community-and-support",children:"Community and Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Comprehensive guides, API reference, examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Community support"}),": ",(0,r.jsx)(n.a,{href:"/support",children:"Support channels"})," (Matrix, mailing list, GitHub)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Professional support"}),": Available from Rspamd developers and partners"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Active development"}),": Regular releases, security updates, new features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Open source"}),": Apache 2.0 license, source code on ",(0,r.jsx)(n.a,{href:"https://github.com/rspamd/rspamd",children:"GitHub"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ready to start?"})," See ",(0,r.jsx)(n.a,{href:"/getting-started/installation",children:"Installation Guide"})," \u2192 ",(0,r.jsx)(n.a,{href:"/getting-started/first-setup",children:"First Setup"})," \u2192 ",(0,r.jsx)(n.a,{href:"/guides/configuration/fundamentals",children:"Configuration Fundamentals"})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);