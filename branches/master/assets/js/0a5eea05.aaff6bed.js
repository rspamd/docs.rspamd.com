"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[7627],{5330:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"modules/reputation","title":"Reputation module","description":"This plugin is designed to monitor the reputation of various objects and adjust scores accordingly.","source":"@site/docs/modules/reputation.md","sourceDirName":"modules","slug":"/modules/reputation","permalink":"/docs.rspamd.com/branches/master/modules/reputation","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/reputation.md","tags":[],"version":"current","frontMatter":{"title":"Reputation module"},"sidebar":"docs","previous":{"title":"Replies module","permalink":"/docs.rspamd.com/branches/master/modules/replies"},"next":{"title":"Rspamd update module","permalink":"/docs.rspamd.com/branches/master/modules/rspamd_update"}}');var i=s(4848),t=s(8453);const r={title:"Reputation module"},c="Reputation plugin",l={},a=[{value:"Configuration and principles of work",id:"configuration-and-principles-of-work",level:2},{value:"Backends configuration and principles of work",id:"backends-configuration-and-principles-of-work",level:3},{value:"Selector types",id:"selector-types",level:2}];function d(e){const n={a:"a",center:"center",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"reputation-plugin",children:"Reputation plugin"})}),"\n",(0,i.jsx)(n.p,{children:"This plugin is designed to monitor the reputation of various objects and adjust scores accordingly."}),"\n",(0,i.jsx)(n.p,{children:"For instance, if you have a DKIM domain that is known to be used for spam, this module enables you to decrease the negative score of the DKIM_ALLOW symbol, or even add some score."}),"\n",(0,i.jsx)(n.p,{children:"Conversely, if a domain has a high reputation, the DKIM_ALLOW score will have a more negative score (like auto-whitelisting) and increase the score for DKIM_REJECT accordingly (since the message looks like a phishing attempt)."}),"\n",(0,i.jsx)(n.p,{children:"Additionally, this module encompasses the functionality of the following modules:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/modules/ip_score",children:"ip_score"})," - by means of ",(0,i.jsx)(n.code,{children:"ip"})," component"]}),"\n",(0,i.jsxs)(n.li,{children:["url_reputation - by means of ",(0,i.jsx)(n.code,{children:"url"})," component (removed in Rspamd 2.0)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configuration-and-principles-of-work",children:"Configuration and principles of work"}),"\n",(0,i.jsx)(n.p,{children:"Like many other modules, this module requires a set of rules to be defined. Each rule comprises the following components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Selector configuration - specifies the data to be extracted from a message and defines data processing logic"}),"\n",(0,i.jsx)(n.li,{children:"Backend configuration - determines where reputational tokens should be stored and queried. For instance, Redis can be used for both storing and extracting, while DNS can only be used as a read-only storage"}),"\n",(0,i.jsx)(n.li,{children:"Common configuration - defines generic rule parameters, such as a symbol, that are not related to either the backend or the selector"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Below are a few examples of such configurations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'# local.d/reputation.conf\nrules {\n  ip_reputation = {\n    selector "ip" {\n    }\n    backend "redis" {\n      servers = "localhost";\n    }\n\n    symbol = "IP_REPUTATION";\n  }\n  spf_reputation =  {\n    selector "spf" {\n    }\n    backend "redis" {\n      servers = "localhost";\n    }\n\n    symbol = "SPF_REPUTATION";\n  }\n  dkim_reputation =  {\n    selector "dkim" {\n    }\n    backend "redis" {\n      servers = "localhost";\n    }\n\n    symbol = "DKIM_REPUTATION"; # Also adjusts scores for DKIM_ALLOW, DKIM_REJECT\n  }\n  generic_reputation =  {\n    selector "generic" {\n      selector = "ip"; # see https://docs.rspamd.com/configuration/selectors\n    }\n    backend "redis" {\n      servers = "localhost";\n    }\n\n    symbol = "GENERIC_REPUTATION";\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You also need to ",(0,i.jsx)(n.strong,{children:"define the scores"})," for symbols added by this module:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'# local.d/groups.conf\ngroup "reputation" {\n    symbols = {\n        "IP_REPUTATION_HAM" {\n            weight = -1.0;\n        }\n        "IP_REPUTATION_SPAM" {\n            weight = 4.0;\n        }\n\n        "DKIM_REPUTATION" {\n            weight = 1.0;\n        }\n\n        "SPF_REPUTATION_HAM" {\n            weight = -1.0;\n        }\n        "SPF_REPUTATION_SPAM" {\n            weight = 2.0;\n        }\n\n        "GENERIC_REPUTATION" {\n            weight = 1.0;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"The weight assigned to these symbols are merely examples and you should adjust them to fit your particular situation."}),"\n",(0,i.jsx)(n.p,{children:"The image below illustrates the process of reputation token handling:"}),"\n",(0,i.jsx)(n.center,{children:(0,i.jsx)(n.img,{className:"img-fluid",src:"/img/reputation1.png",width:"50%"})}),"\n",(0,i.jsx)(n.h3,{id:"backends-configuration-and-principles-of-work",children:"Backends configuration and principles of work"}),"\n",(0,i.jsxs)(n.p,{children:["Selectors provide what are known as tokens for backends. For instance, in the case of IP reputation, these tokens could be ",(0,i.jsx)(n.code,{children:"asn"}),", ",(0,i.jsx)(n.code,{children:"ipnet"}),", and ",(0,i.jsx)(n.code,{children:"country"}),". Each token is mapped to a particular key in the backend. In the case of Redis backend, there is a concept of ",(0,i.jsx)(n.strong,{children:"buckets"}),", with each bucket containing a set of counters that indicate the number of messages with a specific action:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"number of spam messages"}),"\n",(0,i.jsx)(n.li,{children:"number of ham messages"}),"\n",(0,i.jsx)(n.li,{children:"number of probable spam (junk) messages"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"When filling these buckets, the score may also be taken into account. Additionally, each bucket has two other attributes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"time window;"}),"\n",(0,i.jsx)(n.li,{children:"score multiplier;"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each bucket uses discrete time windows that are specified. By default, one bucket with a time window of 30 days is defined for Redis:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:"buckets = [\n  {\n    time = 60 * 60 * 24 * 30,\n    name = '1m',\n    mult = 1.0,\n  }\n];\n"})}),"\n",(0,i.jsx)(n.p,{children:"Upon bucket lookup, you have the following attributes:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Number of messages of the each class (let's say ",(0,i.jsx)(n.code,{children:"h"}),", ",(0,i.jsx)(n.code,{children:"s"}),", ",(0,i.jsx)(n.code,{children:"j"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Bucket score (e.g. ",(0,i.jsx)(n.code,{children:"1.5"})," for short term bucket)"]}),"\n",(0,i.jsx)(n.li,{children:"Combination formula defined in the selector:"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"$$\nf(buckets)=\\sum_{i=1}^n {(spam_{i} * mult_{spam} + ham_{i} * mult_{ham} + junk_{i} * mult_{junk}) * bscore_{i}}\n$$"}),"\n",(0,i.jsx)(n.center,{children:(0,i.jsx)(n.img,{className:"img-fluid",src:"/img/reputation2.png",width:"50%"})}),"\n",(0,i.jsx)(n.h2,{id:"selector-types",children:"Selector types"}),"\n",(0,i.jsx)(n.p,{children:"There are couple of pre-defined selector types, specifically:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["SPF reputation - ",(0,i.jsx)(n.code,{children:"spf"})," selector"]}),"\n",(0,i.jsxs)(n.li,{children:["DKIM reputation - ",(0,i.jsx)(n.code,{children:"dkim"})," selector"]}),"\n",(0,i.jsxs)(n.li,{children:["IP, asn, country and network reputation - ",(0,i.jsx)(n.code,{children:"ip"})," selector"]}),"\n",(0,i.jsxs)(n.li,{children:["URLs reputation - ",(0,i.jsx)(n.code,{children:"url"})," selector"]}),"\n",(0,i.jsxs)(n.li,{children:["Generic reputation based on ",(0,i.jsx)(n.a,{href:"/configuration/selectors",children:"selectors framework"})," - ",(0,i.jsx)(n.code,{children:"generic"})," selector"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All selector types except for ",(0,i.jsx)(n.code,{children:"generic"})," do not require explicit configuration. The ",(0,i.jsx)(n.code,{children:"generic"})," selector, on the other hand, necessitates the setting of a selector attribute. For more advanced ",(0,i.jsx)(n.code,{children:"selector"})," configurations, you may refer to the module's source code."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var o=s(6540);const i={},t=o.createContext(i);function r(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);