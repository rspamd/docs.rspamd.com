"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[8824],{173:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"configuration/metrics","title":"Actions and scores","description":"Introduction","source":"@site/docs/configuration/metrics.md","sourceDirName":"configuration","slug":"/configuration/metrics","permalink":"/docs.rspamd.com/branches/master/configuration/metrics","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/configuration/metrics.md","tags":[],"version":"current","frontMatter":{"title":"Actions and scores"},"sidebar":"docs","previous":{"title":"User settings","permalink":"/docs.rspamd.com/branches/master/configuration/settings"},"next":{"title":"Logging settings","permalink":"/docs.rspamd.com/branches/master/configuration/logging"}}');var o=n(4848),t=n(8453);const r={title:"Actions and scores"},c="Rspamd actions and scores",l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Actions vs thresholds (important)",id:"actions-vs-thresholds-important",level:2},{value:"Configuring scores and actions",id:"configuring-scores-and-actions",level:2},{value:"Symbols",id:"symbols",level:3},{value:"Actions",id:"actions",level:3}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"rspamd-actions-and-scores",children:"Rspamd actions and scores"})}),"\n",(0,o.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(s.p,{children:"Rspamd produces a message score and a single resulting action. The action is a recommendation to your MTA about how to handle the message. You control when actions trigger via thresholds, and you control how symbols contribute to the score via weights."}),"\n",(0,o.jsx)(s.p,{children:"Actions returned by Rspamd:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"discard"}),": drop the email but return success to the sender (special cases only)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"reject"}),": ultimately reject the message"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"rewrite subject"}),": rewrite the subject to indicate spam"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"add header"}),": add a header to indicate spam"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"no action"}),": allow the message"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"soft reject"}),": temporarily defer the message (used by greylisting/ratelimiting; no threshold)"]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"From version 1.9, there are also some more actions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"quarantine"}),": push a message to quarantine (must be supported by MTA)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"discard"}),": silently discard a message"]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["Starting from version 1.9, you have the flexibility to define custom actions with their own thresholds in Rspamd. You can also utilize these custom actions in the ",(0,o.jsx)(s.code,{children:"force_actions"})," module:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-hcl",children:'actions {\n  # Generic threshold\n  my_action = {\n    score = 9.0;\n  },\n  # Force action only\n  phishing = {\n    flags = ["no_threshold"],\n  }\n}\n'})}),"\n",(0,o.jsx)(s.p,{children:"Only one action could be applied to a message. Hence, it is generally useless to define two actions with the same threshold."}),"\n",(0,o.jsx)(s.h2,{id:"actions-vs-thresholds-important",children:"Actions vs thresholds (important)"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Thresholds are numeric score cutoffs defined in ",(0,o.jsx)(s.code,{children:"local.d/actions.conf"}),"."]}),"\n",(0,o.jsx)(s.li,{children:"Actions are what Rspamd actually returns to the MTA."}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"Key points:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"soft reject"})," has no threshold. It is emitted by modules (e.g. ",(0,o.jsx)(s.code,{children:"greylist"}),", ",(0,o.jsx)(s.code,{children:"ratelimit"}),") or by core logic (e.g. timeouts) via a pre-result."]}),"\n",(0,o.jsxs)(s.li,{children:["The ",(0,o.jsx)(s.code,{children:"greylist"})," threshold triggers the ",(0,o.jsx)(s.code,{children:"soft reject"})," action. For example, ",(0,o.jsx)(s.code,{children:"greylist = 4;"})," means \u201cat score \u2265 4, apply greylisting and return action soft reject\u201d. This is expected by design."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"Example:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/actions.conf\nactions {\n  reject = 15;      # final reject\n  add_header = 6;   # mark spam\n  greylist = 4;     # triggers soft reject (temporary deferral)\n\n  # Custom action (referenced by force_actions), no own threshold\n  phishing = {\n    flags = ["no_threshold"];\n  }\n}\n'})}),"\n",(0,o.jsx)(s.p,{children:"Notes:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Modules can force an action regardless of thresholds (e.g. greylisting/ratelimit calling ",(0,o.jsx)(s.code,{children:"task:set_pre_result('soft reject', ...)"}),"). The most severe applicable action wins."]}),"\n",(0,o.jsx)(s.li,{children:"Do not define two thresholds at the same score; only one action is returned."}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"configuring-scores-and-actions",children:"Configuring scores and actions"}),"\n",(0,o.jsx)(s.h3,{id:"symbols",children:"Symbols"}),"\n",(0,o.jsx)(s.p,{children:"Symbols are defined by an object with the following properties:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"weight"})," - the symbol weight as floating point number (negative or positive); by default the weight is ",(0,o.jsx)(s.code,{children:"1.0"})]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"group"})," - a group of symbols, for example ",(0,o.jsx)(s.code,{children:"DNSBL symbols"})," (as shown in WebUI)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"description"})," - optional symbolic description for WebUI"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"one_shot"})," - normally, Rspamd inserts a symbol as many times as the corresponding rule matches for the specific message; however, if ",(0,o.jsx)(s.code,{children:"one_shot"})," is ",(0,o.jsx)(s.code,{children:"true"})," then only the ",(0,o.jsx)(s.strong,{children:"maximum"})," weight is added to the metric. ",(0,o.jsx)(s.code,{children:"grow_factor"})," is correspondingly not modified by a repeated triggering of ",(0,o.jsx)(s.code,{children:"one_shot"})," rules."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"A symbol definition can look like this:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-hcl",children:'symbol "RWL_SPAMHAUS_WL_IND" {\n    weight = -0.7;\n    description = "Sender listed at Spamhaus whitelist";\n}\n'})}),"\n",(0,o.jsxs)(s.p,{children:["Rspamd rules are typically organized into groups, with each symbol capable of belonging to multiple groups. For instance, the ",(0,o.jsx)(s.code,{children:"DKIM_ALLOW"})," symbol is part of both the ",(0,o.jsx)(s.code,{children:"dkim"})," group and the ",(0,o.jsx)(s.code,{children:"policies"})," metagroup. You have the flexibility to group or not group your own rules. If you wish to adjust the scores of your symbols, you can do so by modifying the ",(0,o.jsx)(s.code,{children:"local.d/groups.conf"})," file as shown below:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-hcl",children:'# local.d/groups.conf\n\nsymbols {\n  "SOME_SYMBOL" {\n    weight = 1.0; # Define your weight\n  }\n}\n'})}),"\n",(0,o.jsx)(s.p,{children:"Or, for grouped symbols:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-hcl",children:'group "mygroup" {\n  max_score = 10.0;\n  \n  symbols {\n    "MY_SYMBOL" {\n      weight = 1.0; # Define your weight\n    }\n  }\n}\n'})}),"\n",(0,o.jsxs)(s.p,{children:["To modify symbols for existing groups, it is advisable to utilize dedicated files in either the ",(0,o.jsx)(s.code,{children:"local.d"})," or ",(0,o.jsx)(s.code,{children:"override.d"})," directory. For instance, you can create a file named ",(0,o.jsx)(s.code,{children:"local.d/rbl_group.conf"})," to incorporate your custom RBLs. To obtain a comprehensive list of these files, you can refer to the ",(0,o.jsx)(s.code,{children:"groups.conf"})," file located in the primary Rspamd configuration directory (e.g., ",(0,o.jsx)(s.code,{children:"/etc/rspamd/groups.conf"}),")."]}),"\n",(0,o.jsx)(s.h3,{id:"actions",children:"Actions"}),"\n",(0,o.jsxs)(s.p,{children:["Actions thresholds and configuration are defined in ",(0,o.jsx)(s.code,{children:"local.d/actions.conf"}),":"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-hcl",children:'# local.d/actions.conf\nactions {\n  reject = 15;\n  add_header = 6;\n  greylist = 4; # will result in soft reject\n\n  # Optional custom action used by force_actions\n  phishing = {\n    flags = ["no_threshold"];\n  }\n}\n'})}),"\n",(0,o.jsx)(s.p,{children:"It is also possible to define some generic attributes for actions applications:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"grow_factor"})," - the multiplier applied for the subsequent symbols inserting by the following rule:"]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"$$\nscore = score + grow_factor * symbol_weight\n$$"}),"\n",(0,o.jsx)(s.p,{children:"$$\ngrow_factor = grow_factor * grow_factor\n$$"}),"\n",(0,o.jsxs)(s.p,{children:["The default value for this setting is ",(0,o.jsx)(s.code,{children:"1.0"}),", indicating no weight increase is applied. By raising this value, the score of messages with multiple matching ",(0,o.jsx)(s.code,{children:"spam"})," rules is amplified. It's important to note that negative score values do not affect this value."]}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"subject"})," - string value that replaces the message's subject if the ",(0,o.jsx)(s.code,{children:"rewrite subject"})," action is applied. Original subject can be included with ",(0,o.jsx)(s.code,{children:"%s"}),". Message score can be filled using ",(0,o.jsx)(s.code,{children:"%d"}),"."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"unknown_weight"})," - weight for unknown rules. If set, all rules may add symbols to this metric. If a rule is not specified in the metric, its weight defaults to this value. Without this option, rules not registered in any metric are ignored."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(6540);const o={},t=i.createContext(o);function r(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);