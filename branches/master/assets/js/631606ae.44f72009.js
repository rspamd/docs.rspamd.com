"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[119],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},33952:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"modules/fuzzy_check","title":"Fuzzy check module","description":"The purpose of this module is to verify messages for certain fuzzy patterns that are stored in the","source":"@site/docs/modules/fuzzy_check.md","sourceDirName":"modules","slug":"/modules/fuzzy_check","permalink":"/docs.rspamd.com/branches/master/modules/fuzzy_check","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/fuzzy_check.md","tags":[],"version":"current","frontMatter":{"title":"Fuzzy check module"},"sidebar":"docs","previous":{"title":"Force Actions module","permalink":"/docs.rspamd.com/branches/master/modules/force_actions"},"next":{"title":"GPT Plugin","permalink":"/docs.rspamd.com/branches/master/modules/gpt"}}');var t=s(74848),r=s(28453);const l={title:"Fuzzy check module"},a="Fuzzy check module",c={},h=[{value:"Fuzzy patterns",id:"fuzzy-patterns",level:2},{value:"HTML Structure Fuzzy Hashing (Since 3.14.0)",id:"html-structure-fuzzy-hashing-since-3140",level:2},{value:"Why HTML fuzzy matching?",id:"why-html-fuzzy-matching",level:3},{value:"Architecture",id:"architecture",level:3},{value:"1. Direct Hash (Exact Matching)",id:"1-direct-hash-exact-matching",level:4},{value:"2. Structure Shingles (Fuzzy Matching)",id:"2-structure-shingles-fuzzy-matching",level:4},{value:"3. CTA Domains Hash (Phishing Protection)",id:"3-cta-domains-hash-phishing-protection",level:4},{value:"4. All Domains Hash (15% weight)",id:"4-all-domains-hash-15-weight",level:4},{value:"5. Features Hash (5% weight)",id:"5-features-hash-5-weight",level:4},{value:"HTML Token Format",id:"html-token-format",level:3},{value:"Similarity Comparison",id:"similarity-comparison",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Per-rule options:",id:"per-rule-options",level:4},{value:"Example configurations:",id:"example-configurations",level:4},{value:"Safety and False Positives",id:"safety-and-false-positives",level:3},{value:"Phishing Detection Workflow",id:"phishing-detection-workflow",level:3},{value:"Performance",id:"performance",level:3},{value:"Lua API",id:"lua-api",level:3},{value:"Module outline",id:"module-outline",level:2},{value:"Module configuration",id:"module-configuration",level:2},{value:"Training fuzzy_check",id:"training-fuzzy_check",level:2},{value:"Usage of the feeds provided by <code>rspamd.com</code>",id:"usage-of-the-feeds-provided-by-rspamdcom",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"fuzzy-check-module",children:"Fuzzy check module"})}),"\n",(0,t.jsxs)(n.p,{children:["The purpose of this module is to verify messages for certain fuzzy patterns that are stored in the\n",(0,t.jsx)(n.a,{href:"/workers/fuzzy_storage",children:"fuzzy storage workers"}),". At the same time, this module\nis responsible for teaching fuzzy storage with message patterns."]}),"\n",(0,t.jsx)(n.h2,{id:"fuzzy-patterns",children:"Fuzzy patterns"}),"\n",(0,t.jsxs)(n.p,{children:["Rspamd utilizes the ",(0,t.jsx)(n.code,{children:"shingles"})," algorithm to conduct fuzzy matching of messages. This algorithm\noperates in a probabilistic manner by using word chains as patterns, which helps to filter\nout spam or ham messages. A detailed description of the ",(0,t.jsx)(n.code,{children:"shingles"})," algorithm can be found in the\n",(0,t.jsx)(n.a,{href:"https://dl.acm.org/doi/10.5555/283554.283370",children:"research paper"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["In Rspamd, we employ trigrams (3-grams) for the shingles algorithm, and we use\na set of hash functions, including siphash, mumhash, and others.\nCurrently, Rspamd uses 32 hashes for ",(0,t.jsx)(n.code,{children:"shingles"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Note that attachments and images are currently not matched against fuzzy hashes.\nInstead, they are verified by blake2 digests using strict match."}),"\n",(0,t.jsx)(n.h2,{id:"html-structure-fuzzy-hashing-since-3140",children:"HTML Structure Fuzzy Hashing (Since 3.14.0)"}),"\n",(0,t.jsxs)(n.p,{children:["In addition to text content fuzzy matching, Rspamd 3.14.0 introduces ",(0,t.jsx)(n.strong,{children:"HTML structure fuzzy hashing"}),". This feature enables detection of similar emails based on their DOM structure, layout, and link patterns, independent of text content variations."]}),"\n",(0,t.jsx)(n.h3,{id:"why-html-fuzzy-matching",children:"Why HTML fuzzy matching?"}),"\n",(0,t.jsx)(n.p,{children:"Many legitimate emails (newsletters, notifications) and spam campaigns share common HTML templates while varying text content:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Newsletters"}),": Same HTML structure, different article titles/content each week"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Notifications"}),": Fixed template from services (Facebook, Amazon), varying user data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Spam campaigns"}),": Identical HTML layout, personalized text (names, dates)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Phishing"}),": Copied legitimate HTML structure, but different CTA (Call-To-Action) domains"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Text fuzzy hashing misses these patterns because text changes, but HTML structure fuzzy can detect them."}),"\n",(0,t.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.p,{children:"HTML fuzzy hashing uses a multi-layer approach for robust matching:"}),"\n",(0,t.jsx)(n.h4,{id:"1-direct-hash-exact-matching",children:"1. Direct Hash (Exact Matching)"}),"\n",(0,t.jsxs)(n.p,{children:["Similar to text parts, a direct ",(0,t.jsx)(n.code,{children:"blake2b"})," hash of all HTML tokens ensures no false positives:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"direct_hash = blake2b(token1 + token2 + ... + tokenN)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This guarantees two HTML structures with different tokens will have different hashes,\npreventing MinHash collision issues."}),"\n",(0,t.jsx)(n.h4,{id:"2-structure-shingles-fuzzy-matching",children:"2. Structure Shingles (Fuzzy Matching)"}),"\n",(0,t.jsx)(n.p,{children:"32 shingles generated using sliding window (size 3) over HTML token sequence:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Tokens: div \u2192 a@example.com \u2192 img \u2192 p \u2192 span\nWindows:\n  [div, a@example.com, img] \u2192 hash1\n  [a@example.com, img, p]   \u2192 hash2\n  [img, p, span]            \u2192 hash3\n\u2192 Apply MinHash \u2192 32 shingles\n"})}),"\n",(0,t.jsx)(n.p,{children:"This provides tolerance to small structural changes (1-2 tags added/removed)."}),"\n",(0,t.jsx)(n.h4,{id:"3-cta-domains-hash-phishing-protection",children:"3. CTA Domains Hash (Phishing Protection)"}),"\n",(0,t.jsxs)(n.p,{children:["Separate hash of Call-To-Action link domains, contributing ",(0,t.jsx)(n.strong,{children:"30% weight"})," to similarity score."]}),"\n",(0,t.jsx)(n.p,{children:"CTA links are automatically detected using button heuristics:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Links with ",(0,t.jsx)(n.code,{children:'class="button"'}),", ",(0,t.jsx)(n.code,{children:'class="cta"'}),", etc."]}),"\n",(0,t.jsx)(n.li,{children:"Links with button-like styling"}),"\n",(0,t.jsxs)(n.li,{children:["Links from ",(0,t.jsx)(n.code,{children:"url_button_weights"})," analysis"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Why critical for phishing:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Legitimate: HTML_structure + CTA=facebook.com \u2192 hash_A\nPhishing:   HTML_structure + CTA=evil.com     \u2192 hash_B\n\nCTA mismatch \u2192 similarity heavily penalized (\xd70.3)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"4-all-domains-hash-15-weight",children:"4. All Domains Hash (15% weight)"}),"\n",(0,t.jsx)(n.p,{children:"Hash of top-10 most frequent link domains (sorted, deduplicated). Captures overall\ndomain usage pattern without being sensitive to single tracking pixels."}),"\n",(0,t.jsx)(n.h4,{id:"5-features-hash-5-weight",children:"5. Features Hash (5% weight)"}),"\n",(0,t.jsx)(n.p,{children:"Bucketed HTML statistics for additional matching:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tag count (buckets: <10, 10-50, 50-100, 100-200, >200)"}),"\n",(0,t.jsx)(n.li,{children:"Link count (buckets: <5, 5-10, 10-20, 20-50, >50)"}),"\n",(0,t.jsx)(n.li,{children:"DOM depth (buckets: <5, 5-10, 10-15, 15-20, >20)"}),"\n",(0,t.jsx)(n.li,{children:"Image count, forms presence, password inputs"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Bucketing ensures minor variations don't affect hash."}),"\n",(0,t.jsx)(n.h3,{id:"html-token-format",children:"HTML Token Format"}),"\n",(0,t.jsx)(n.p,{children:"Each HTML tag becomes a structural token:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"tagname[.class][@domain]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"div.header"}),' - div with "header" class']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"a.button@example.com"}),' - link with "button" class to example.com']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"img@cdn.example.com"})," - image from cdn.example.com"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"p"})," - plain paragraph (no class, no link)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"form@evil.com"})," - form with action to evil.com"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Normalization rules:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Only first CSS class used (multiple classes cause instability)"}),"\n",(0,t.jsxs)(n.li,{children:["Tracking classes filtered out (",(0,t.jsx)(n.code,{children:"utm"}),", ",(0,t.jsx)(n.code,{children:"analytics"}),", ",(0,t.jsx)(n.code,{children:"campaign"}),", ",(0,t.jsx)(n.code,{children:"guid"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Dynamic classes ignored (mostly digits, UUIDs)"}),"\n",(0,t.jsx)(n.li,{children:"Domains extracted as eTLD+1 (registrable domain)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"similarity-comparison",children:"Similarity Comparison"}),"\n",(0,t.jsx)(n.p,{children:"When comparing two HTML structures:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"similarity = 0.50 \xd7 structure_shingles_similarity\n           + 0.30 \xd7 cta_domains_match\n           + 0.15 \xd7 all_domains_similarity\n           + 0.05 \xd7 features_similarity\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key: CTA domains must match for high similarity!"})}),"\n",(0,t.jsx)(n.p,{children:"If CTA domains differ completely, overall similarity is penalized:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"result = structure_similarity \xd7 0.3  (heavy penalty)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h4,{id:"per-rule-options",children:"Per-rule options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"html_shingles"})}),": ",(0,t.jsx)(n.code,{children:"true|false"})," (default: ",(0,t.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enable HTML structure fuzzy hashing for this rule"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"min_html_tags"})}),": integer (default: ",(0,t.jsx)(n.code,{children:"10"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Minimum HTML tags required to generate hash"}),"\n",(0,t.jsx)(n.li,{children:"Prevents false positives on trivial HTML snippets"}),"\n",(0,t.jsx)(n.li,{children:"Recommended: 10-20 depending on use case"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"html_weight"})}),": float (default: ",(0,t.jsx)(n.code,{children:"1.0"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Score multiplier for HTML fuzzy matches"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<1.0"}),": reduce HTML match impact"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:">1.0"}),": increase HTML match importance (e.g., for phishing detection)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example-configurations",children:"Example configurations:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Phishing detection (prioritize structure):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'rule "PHISHING_DETECT" {\n  servers = "localhost:11335";\n  algorithm = "mumhash";\n  \n  html_shingles = true;\n  min_html_tags = 20;  # Require complex HTML\n  html_weight = 1.5;   # Prioritize structure over text\n  \n  fuzzy_map = {\n    FUZZY_PHISHING {\n      flag = 20;\n      max_score = 25.0;\n    }\n    FUZZY_LEGIT_BRANDS {\n      flag = 21;\n      max_score = -25.0;  # Whitelist\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Spam campaigns (balanced):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'rule "SPAM_CAMPAIGNS" {\n  html_shingles = true;\n  min_html_tags = 15;\n  html_weight = 1.0;  # Equal to text\n  \n  fuzzy_map = {\n    FUZZY_SPAM_TEMPLATES {\n      flag = 200;\n      max_score = 15.0;\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Combined text+HTML:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'rule "COMBINED" {\n  text_shingles = true;\n  html_shingles = true;\n  \n  min_length = 32;      # Text: min words\n  min_html_tags = 10;   # HTML: min tags\n  \n  # Both use same storage/flags\n  fuzzy_map = {\n    FUZZY_COMBINED_SPAM {\n      flag = 10;\n      max_score = 20.0;\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"safety-and-false-positives",children:"Safety and False Positives"}),"\n",(0,t.jsx)(n.p,{children:"To prevent false positives, HTML fuzzy has multiple safety checks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Minimum complexity requirements:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["At least ",(0,t.jsx)(n.code,{children:"min_html_tags"})," tags (default 10)"]}),"\n",(0,t.jsx)(n.li,{children:"At least 2 links (single link too generic)"}),"\n",(0,t.jsx)(n.li,{children:"At least DOM depth 3 (flat HTML too common)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Stable tokenization:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Only first CSS class (multiple classes unstable)"}),"\n",(0,t.jsxs)(n.li,{children:["Tracking tokens filtered (",(0,t.jsx)(n.code,{children:"utm_*"}),", ",(0,t.jsx)(n.code,{children:"analytics_*"}),", etc.)"]}),"\n",(0,t.jsx)(n.li,{children:"Dynamic classes ignored (GUIDs, timestamps)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Domain-aware:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"eTLD+1 used (registrable domain)"}),"\n",(0,t.jsx)(n.li,{children:"CTA verification prevents phishing false positives"}),"\n",(0,t.jsx)(n.li,{children:"Top-N domains reduce tracking pixel noise"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Simple HTML that will be skipped:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<html><body><p>Hello <a href="...">link</a></p></body></html>\n'})}),"\n",(0,t.jsx)(n.p,{children:"(Only 5 tags, 1 link, depth 2 - too simple)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Complex HTML that will be hashed:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<html><head>...</head>\n<body>\n  <div class="header"><a href="...">logo</a></div>\n  <div class="content">\n    <p>Text</p>\n    <a class="button" href="...">CTA</a>\n    <img src="..." />\n  </div>\n  <div class="footer"><a href="...">unsubscribe</a></div>\n</body></html>\n'})}),"\n",(0,t.jsx)(n.p,{children:"(15+ tags, 3+ links, depth 4+ - complex enough)"}),"\n",(0,t.jsx)(n.h3,{id:"phishing-detection-workflow",children:"Phishing Detection Workflow"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Scenario 1: Legitimate brand email copied with fake CTA"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Legitimate email learned:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"rspamc -f 1 -w 10 fuzzy_add amazon_legit.eml\n"})}),"\n",(0,t.jsx)(n.p,{children:"Stores: text_hash_A, html_hash_A (with CTA=amazon.com)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Phishing attempt arrives:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Same HTML structure"}),"\n",(0,t.jsx)(n.li,{children:"Same or similar text"}),"\n",(0,t.jsxs)(n.li,{children:["But CTA points to ",(0,t.jsx)(n.code,{children:"fake-amazon.evil"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Matching:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Text fuzzy: HIGH match (0.8-0.9)"}),"\n",(0,t.jsx)(n.li,{children:"HTML structure: HIGH initial (0.8)"}),"\n",(0,t.jsx)(n.li,{children:"But CTA differs: similarity \xd7 0.3 = 0.24 (LOW!)"}),"\n",(0,t.jsx)(n.li,{children:"Result: Suspicious pattern detected"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Scenario 2: Template with varying content (legitimate)"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Newsletter template learned:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"rspamc -f 300 -w 5 fuzzy_add newsletter_week1.eml\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Next week's newsletter:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Same HTML structure"}),"\n",(0,t.jsx)(n.li,{children:"Different article titles/content"}),"\n",(0,t.jsx)(n.li,{children:"Same CTA domains (same brand)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Matching:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Text fuzzy: LOW match (0.1-0.3) - expected"}),"\n",(0,t.jsx)(n.li,{children:"HTML fuzzy: HIGH match (0.9) - same template"}),"\n",(0,t.jsx)(n.li,{children:"CTA matches: similarity maintained"}),"\n",(0,t.jsx)(n.li,{children:"Result: Legitimate newsletter variation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generation time"}),": <1ms for typical HTML (100-200 tags)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory"}),": ~300 bytes final structure, ~1KB temporary during generation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Algorithm"}),": MurmurHash recommended for speed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Overhead"}),": Minimal - only for HTML text parts with html_shingles enabled"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"lua-api",children:"Lua API"}),"\n",(0,t.jsx)(n.p,{children:"For advanced use cases, Lua API provides direct access:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local text_parts = task:get_text_parts()\nfor _, part in ipairs(text_parts) do\n  if part:is_html() then\n    local digest, shingles = part:get_html_fuzzy_hashes(task:get_mempool())\n    \n    if digest and shingles then\n      -- digest: hex string (direct hash)\n      -- shingles[1..32]: structure shingles\n      -- shingles.cta_domains_hash: CTA hash\n      -- shingles.all_domains_hash: all domains\n      -- shingles.features_hash: statistics\n      -- shingles.tags_count: metadata\n    end\n  end\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"module-outline",children:"Module outline"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'# local.d/fuzzy_check.conf\nfuzzy_check\n{\n    max_errors = ...; //int: Maximum number of upstream errors; affects error rate threshold\n    min_bytes = ...; //int: Minimum number of *bytes* to check a non-text part\n    min_height = ...; //int: Minimum pixel height of embedded images to check using fuzzy storage\n    min_length = ...; //int: Minimum number of *words* to check a text part\n    min_width = ...; //int: Minimum pixel width of embedded images to check using fuzzy storage\n    retransmits = ...; //int: Maximum number of retransmissions for a single request\n    revive_time = ...; //float: Time (seconds?) to lapse before re-resolving faulty upstream\n    symbol = "default symbol"; //string: Default symbol for rule (if no flags defined or matched)\n    text_multiplier = ...; //float: Multiplier for bytes limit when checking for text parts\n    timeout = ...; //time: Timeout to wait for a reply from a fuzzy server, e.g. 1s, 2m, 5h\n    whitelist = "..."; //string: Whitelisted IPs map\n\n    rule { //Fuzzy check rule\n        algorithm = "..."; //string: rule hashing algo\n        encryption_key = "..."; //string: Base32 value for the protocol encryption public key\n        fuzzy_key = "..."; //string: Base32 value for the hashing key (for private storages)\n        fuzzy_map = { //object: Map of SYMBOL -> data for flags configuration\n            max_score = ... ; //int: Maximum score for this flag\n            flag = ... ; //int: Flag number (ordinal)\n        }; \n        fuzzy_shingles_key = "..."; //string: Base32 value for the shingles hashing key (for private storages)\n        headers = "..."; //array: Headers that are used to make a separate hash\n        learn_condition = "..."; //string: Lua script that returns boolean function to check whether this task should be considered when training fuzzy storage\n        max_score = ...; //int: Max value for fuzzy hash when weight of symbol is exactly 1.0 (if value is higher, then the score is still 1.0)\n        mime_types = "..."; //array: Set of mime types (in form type/subtype, or type/*, or *) to check with fuzzy\n        min_bytes = ...; //int: Override module default min bytes for this rule\n        read_only = ...; //boolean: If true then never try to train this fuzzy storage\n        servers = "..."; //string: List of servers to check (or train)\n        short_text_direct_hash = ...; //boolean: Use direct hash for short texts\n        skip_hashes = "..."; //string: Whitelisted hashes map\n        skip_unknown = ...; //boolean: If true then ignores unknown flags and does not add the default fuzzy symbol\n        symbol = "..."; //string: Default symbol for rule (if no flags defined or matched)\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"module-configuration",children:"Module configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"fuzzy_check"})," module has several global options, including:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"min_bytes"}),": minimum length of attachments and images in bytes to check them in fuzzy storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"min_height"}),": minimum pixel height of images to be checked"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"min_length"}),": minimum length of text parts in words to perform fuzzy check (default - check all text parts)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"min_width"}),": minimum pixel width of images to be checked"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"retransmits"}),": maximum retransmissions before giving up"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"symbol"}),": default symbol to insert (if no flags match)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeout"}),": timeout to wait for a reply, e.g. 1s, 2m, 5h"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"whitelist"}),": IPs in this list bypass all fuzzy checks"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:"# local.d/fuzzy_check.conf\n# the following are defaults in 1.9.4\nfuzzy_check {\n    min_bytes = 1k; # Since small parts and small attachments cause too many FP\n    timeout = 2s;\n    retransmits = 1;\n    ...\n    rule {...}\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A fuzzy ",(0,t.jsx)(n.code,{children:"rule"})," is defined as a set of ",(0,t.jsx)(n.code,{children:"rule"})," definitions. Each ",(0,t.jsx)(n.code,{children:"rule"})," is required to have a ",(0,t.jsx)(n.code,{children:"servers"})," list for checking or teaching (training), along with a set of flags and optional parameters."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"servers"})," parameter defines ",(0,t.jsx)(n.a,{href:"/configuration/upstream",children:"upstream"})," object that can be configured to rotate or shard as needed. Sharding is performed based on the hash value itself."]}),"\n",(0,t.jsx)(n.p,{children:"The available parameters include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"algorithm"}),": rule hashing algo; one of: ",(0,t.jsx)(n.code,{children:"fasthash"})," (or just ",(0,t.jsx)(n.code,{children:"fast"}),"), ",(0,t.jsx)(n.code,{children:"mumhash"}),", ",(0,t.jsx)(n.code,{children:"siphash"})," (or ",(0,t.jsx)(n.code,{children:"old"}),") or ",(0,t.jsx)(n.code,{children:"xxhash"}),". The default value is ",(0,t.jsx)(n.code,{children:"mumhash"})," currently."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encryption_key"}),": Base32 value public key to perform wire encryption"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fuzzy_map"}),": Map of SYMBOL -> data for flags configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fuzzy_key"}),": Base32 value for the hashing key (for private storages)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"learn_condition"}),": An Lua script that returns a boolean function to check whether this task\nshould be considered when training fuzzy storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"max_score"}),": float value: score threshold for this rule's activation/trigger"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mime_types"}),": array or list of acceptable mime-type regexs for this rule. Can be: ",(0,t.jsx)(n.code,{children:'["*"]'})," to match anything"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"read_only"}),": set to ",(0,t.jsx)(n.code,{children:"no"})," to enable training, set to ",(0,t.jsx)(n.code,{children:"yes"})," for no training"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"servers"}),": list of servers to check or train"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"short_text_direct_hash"}),": whether to check the exact hash match for short texts where fuzzy algorithm is not applicable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"skip_unknown"}),": whether or not to ignore unmatched content; if ",(0,t.jsx)(n.code,{children:"true"})," or ",(0,t.jsx)(n.code,{children:"yes"})," then ignore unknown flags and\ndoes not add the default fuzzy symbol"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"symbol"}),": the default symbol applied for a rule."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Here is an example ",(0,t.jsx)(n.code,{children:"rule"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'# local.d/fuzzy_check.conf\n...\nrule "FUZZY_CUSTOM" {\n  # List of servers. Can be an array or multi-value item\n  servers = "127.0.0.1:11335";\n\n  # List of additional mime types to be checked in this fuzzy ("*" for any)\n  mime_types = ["application/*"];\n\n  # Maximum global score for all maps combined\n  max_score = 20.0;\n\n  # Ignore flags that are not listed in maps for this rule\n  skip_unknown = yes;\n\n  # If this value is false (i.e. no), then allow learning for this fuzzy rule\n  read_only = no;\n\n  # Fast hash type\n  algorithm = "mumhash";\n  # This is used for binary parts and for text parts (size in bytes)\n  min_bytes = 1024;\n  # Text parts only: minimum number of words\n  min_length = 64;\n  # Divide min_bytes by 4 for texts\n  text_multiplier = 4.0,\n\n  # Minimum dimensions for images (in pixels)\n  min_height = 500;\n  min_width = 500;\n\n  # Scan all archives mime parts (e.g. zip attachments)\n  scan_archives = true;\n  # If part has num words < min_length, use direct hash instead of fuzzy\n  short_text_direct_hash = true;\n\n  # Apply fuzzy logic for text parts\n  text_shingles = true;\n  # Skip images if needed\n  skip_images = false;\n}\n...\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Each ",(0,t.jsx)(n.code,{children:"rule"})," can have several ",(0,t.jsx)(n.code,{children:"fuzzy_map"})," values, ordered by an ordinal ",(0,t.jsx)(n.code,{children:"flag"})," value. A single\nfuzzy storage can contain both good and bad hashes that should have different symbols,\nand thus, different weights. To accommodate these varying needs, multiple ",(0,t.jsx)(n.code,{children:"fuzzy_maps"}),"\ncan be defined within a fuzzy ",(0,t.jsx)(n.code,{children:"rule"}),", as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'# local.d/fuzzy_check.conf\nrule "FUZZY_LOCAL" {\n...\nfuzzy_map = {\n  FUZZY_DENIED {\n    # Maximum weight for this list\n    max_score = 20.0;\n    # Flag value\n    flag = 1\n  }\n  FUZZY_PROB {\n    max_score = 10.0;\n    flag = 2\n  }\n  FUZZY_WHITE {\n    max_score = 2.0;\n    flag = 3\n  }\n}\n...\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Based on the information provided above, we can deduce that email messages accumulating\na ",(0,t.jsx)(n.code,{children:"max_score"})," above 20.0 will be assigned the ",(0,t.jsx)(n.code,{children:"FUZZY_DENIED"})," mapping, thus being categorized as spam."]}),"\n",(0,t.jsxs)(n.p,{children:["However, the concept of ",(0,t.jsx)(n.code,{children:"max_score"})," can be somewhat ambiguous. It's important to note that all hashes\nin the fuzzy storage have individual weights. For instance, if we have a hash ",(0,t.jsx)(n.code,{children:"A"})," that has been marked\nas spam by 100 users, then its weight will be ",(0,t.jsx)(n.code,{children:"100 * single_vote_weight"}),".\nConsequently, if the ",(0,t.jsx)(n.code,{children:"single_vote_weight"})," is ",(0,t.jsx)(n.code,{children:"1"}),", the final weight will be ",(0,t.jsx)(n.code,{children:"100"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["In the context of fuzzy rules, ",(0,t.jsx)(n.code,{children:"max_score"})," refers to the weight that must be achieved by a rule in order\nfor it to add its symbol to the maximum score of 1.0 (which is then multiplied by the ",(0,t.jsx)(n.code,{children:"metric"})," value's weight).\nFor example, if the weight of a hash is ",(0,t.jsx)(n.code,{children:"100"})," and the ",(0,t.jsx)(n.code,{children:"max_score"})," is set to ",(0,t.jsx)(n.code,{children:"20"}),", then the rule will be added\nwith a weight of ",(0,t.jsx)(n.code,{children:"1"}),". However, if the ",(0,t.jsx)(n.code,{children:"max_score"})," is set to ",(0,t.jsx)(n.code,{children:"200"}),", the rule will be added with a weight\nlikely calculated through hyperbolic tangent as ",(0,t.jsx)(n.code,{children:"0.2"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"In the following configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-hcl",children:'metric {\n    name = "default";\n    ...\n    symbol {\n        name = "FUZZY_DENIED";\n        weight = "10.0";\n    }\n    ...\n}\nfuzzy_check {\n    rule {\n    ...\n    fuzzy_map = {\n        FUZZY_DENIED {\n            # Maximum weight for this list\n            max_score = 20.0;\n            # Flag value\n            flag = 1\n        }\n        ...\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If a hash has value ",(0,t.jsx)(n.code,{children:"10"}),", then a symbol ",(0,t.jsx)(n.code,{children:"FUZZY_DENIED"})," with weight of ",(0,t.jsx)(n.code,{children:"2.0"})," will be added.\nIf a hash has value ",(0,t.jsx)(n.code,{children:"100500"}),", then ",(0,t.jsx)(n.code,{children:"FUZZY_DENIED"})," will have weight ",(0,t.jsx)(n.code,{children:"10.0"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"training-fuzzy_check",children:"Training fuzzy_check"}),"\n",(0,t.jsxs)(n.p,{children:["Module ",(0,t.jsx)(n.code,{children:"fuzzy_check"})," is not only able to check messages for fuzzy patterns, but it can also learn from them.\nTo accomplish this, you can use the ",(0,t.jsx)(n.code,{children:"rspamc"})," command or connect to the ",(0,t.jsx)(n.strong,{children:"controller"})," worker using HTTP protocol.\nFor learning, you must check the following settings:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Controller worker should be accessible by ",(0,t.jsx)(n.code,{children:"rspamc"})," or HTTP (check ",(0,t.jsx)(n.code,{children:"bind_socket"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Controller should allow privileged commands for this client (check ",(0,t.jsx)(n.code,{children:"enable_password"})," or ",(0,t.jsx)(n.code,{children:"secure_ip"})," settings)"]}),"\n",(0,t.jsxs)(n.li,{children:["Controller should have ",(0,t.jsx)(n.code,{children:"fuzzy_check"})," module configured to the servers specified"]}),"\n",(0,t.jsxs)(n.li,{children:["You should know ",(0,t.jsx)(n.code,{children:"fuzzy_key"})," and ",(0,t.jsx)(n.code,{children:"fuzzy_shingles_key"})," to operate with this storage"]}),"\n",(0,t.jsxs)(n.li,{children:["Your ",(0,t.jsx)(n.code,{children:"fuzzy_check"})," module should have ",(0,t.jsx)(n.code,{children:"fuzzy_map"})," configured to the flags used by server"]}),"\n",(0,t.jsxs)(n.li,{children:["Your ",(0,t.jsx)(n.code,{children:"fuzzy_check"})," rule must have ",(0,t.jsx)(n.code,{children:"read_only"})," option turned off (",(0,t.jsx)(n.code,{children:"read_only = false"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Your ",(0,t.jsx)(n.code,{children:"fuzzy_storage"})," worker should allow updates from the controller's host (",(0,t.jsx)(n.code,{children:"allow_update"})," option)"]}),"\n",(0,t.jsxs)(n.li,{children:["Your controller should be able to communicate with fuzzy storage by means of the ",(0,t.jsx)(n.code,{children:"UDP"})," protocol"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If all these conditions are met, then you can teach rspamd messages with rspamc:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rspamc -w <weight> -f <flag> fuzzy_add ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"or delete hashes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rspamc -f <flag> fuzzy_del ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"you can also delete a hash that you find in the log output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rspamc -f <flag> fuzzy_delhash <hash-id>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["On learning, rspamd sends commands to ",(0,t.jsx)(n.strong,{children:"all"})," servers inside a specific rule. On check,\nrspamd selects a server in a round-robin manner."]}),"\n",(0,t.jsxs)(n.h2,{id:"usage-of-the-feeds-provided-by-rspamdcom",children:["Usage of the feeds provided by ",(0,t.jsx)(n.code,{children:"rspamd.com"})]}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"rspamd.com"})," feeds are enabled. However, if you decide to use these feeds,\nit's important to ensure that you comply with the ",(0,t.jsx)(n.a,{href:"/other/usage_policy",children:(0,t.jsx)(n.strong,{children:"free usage policy"})}),".\nFailure to do so may result in being blocked from using the service. In such cases, the special ",(0,t.jsx)(n.code,{children:"FUZZY_BLOCKED"})," symbol\nwill be assigned to the messages in question. It's worth noting that this symbol has no weight and will not affect any mail processing operations."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);