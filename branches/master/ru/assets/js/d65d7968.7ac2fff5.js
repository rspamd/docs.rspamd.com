"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[4872],{4441:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"modules/history_redis","title":"Redis history module","description":"The purpose of this module is to enable the storage of history in Redis lists with increased precision, thanks to its finer control over fields, optional compression, and out-of-the-box cluster support.","source":"@site/docs/modules/history_redis.md","sourceDirName":"modules","slug":"/modules/history_redis","permalink":"/docs.rspamd.com/branches/master/ru/modules/history_redis","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/history_redis.md","tags":[],"version":"current","frontMatter":{"title":"Redis history module"},"sidebar":"docs","previous":{"title":"Hfilter module","permalink":"/docs.rspamd.com/branches/master/ru/modules/hfilter"},"next":{"title":"IP Score module","permalink":"/docs.rspamd.com/branches/master/ru/modules/ip_score"}}');var r=o(4848),t=o(8453);const n={title:"Redis history module"},d="Redis history module",l={},c=[{value:"Storage model",id:"storage-model",level:2},{value:"Compression",id:"compression",level:2},{value:"WebUI support",id:"webui-support",level:2},{value:"Configuration",id:"configuration",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"redis-history-module",children:"Redis history module"})}),"\n",(0,r.jsx)(s.p,{children:"The purpose of this module is to enable the storage of history in Redis lists with increased precision, thanks to its finer control over fields, optional compression, and out-of-the-box cluster support."}),"\n",(0,r.jsx)(s.h2,{id:"storage-model",children:"Storage model"}),"\n",(0,r.jsx)(s.p,{children:"This module stores keys as follows:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Get key prefix"}),"\n",(0,r.jsx)(s.li,{children:"Append hostname"}),"\n",(0,r.jsxs)(s.li,{children:["Append ",(0,r.jsx)(s.code,{children:"_zst"})," if history is compressed"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["In addition, there is a special set where suffixes are stored, and the keyname for this set is simply ",(0,r.jsx)(s.code,{children:"key_prefix"}),". For example, if there is a host ",(0,r.jsx)(s.code,{children:"example.local"})," and it stores compressed history entries, it will save the following element if ",(0,r.jsx)(s.code,{children:"key_prefix"})," is set: ",(0,r.jsx)(s.code,{children:"example.local_zst"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"compression",children:"Compression"}),"\n",(0,r.jsxs)(s.p,{children:["Rspamd uses ",(0,r.jsx)(s.a,{href:"https://facebook.github.io/zstd/",children:"zstd"})," compression, which is highly efficient for both compression and decompression, offering a typical compression rate of 50% for history elements. As long as you have sufficient computational power, it is recommended to use zstd in order to minimize Redis memory usage when storing elements."]}),"\n",(0,r.jsx)(s.h2,{id:"webui-support",children:"WebUI support"}),"\n",(0,r.jsx)(s.p,{children:"The Web Interface automatically recognises that history is stored in Redis and loads it appropriately."}),"\n",(0,r.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(s.p,{children:["The configuration of this module is pretty straightforward (use ",(0,r.jsx)(s.code,{children:"local.d/history_redis.conf"})," to define your own values):"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:"servers = 127.0.0.1:6379; # Redis server to store history\nexpire = 432000; # Expire in seconds for inactive keys, default to 5 days\nnrows = 200; # Default rows limit\ncompress = true; # Use zstd compression when storing data in Redis\nsubject_privacy = false; # Subject privacy is off\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," Reducing the ",(0,r.jsx)(s.code,{children:"expire"})," value can result in a one-time situation where newer entries are deleted before older ones, creating a gap in the middle of the history."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>n,x:()=>d});var i=o(6540);const r={},t=i.createContext(r);function n(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);