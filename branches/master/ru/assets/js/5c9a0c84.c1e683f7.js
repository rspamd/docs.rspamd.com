"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[38],{466:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"modules/dmarc","title":"DMARC module","description":"DMARC is a technology that uses SPF and DKIM to enable domain owners to publish policies regarding how email messages with their domain in the (RFC5322) From field should be handled.","source":"@site/docs/modules/dmarc.md","sourceDirName":"modules","slug":"/modules/dmarc","permalink":"/docs.rspamd.com/branches/master/ru/modules/dmarc","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/dmarc.md","tags":[],"version":"current","frontMatter":{"title":"DMARC module"},"sidebar":"docs","previous":{"title":"DKIM signing module","permalink":"/docs.rspamd.com/branches/master/ru/modules/dkim_signing"},"next":{"title":"Elasticsearch module","permalink":"/docs.rspamd.com/branches/master/ru/modules/elastic"}}');var o=i(4848),s=i(8453);const t={title:"DMARC module"},a="DMARC module",d={},l=[{value:"DMARC in rspamd",id:"dmarc-in-rspamd",level:2},{value:"Reporting",id:"reporting",level:2},{value:"DMARC Munging",id:"dmarc-munging",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dmarc-module",children:"DMARC module"})}),"\n",(0,o.jsxs)(n.p,{children:["DMARC is a technology that uses SPF and DKIM to enable domain owners to publish policies regarding how email messages with their domain in the (RFC5322) ",(0,o.jsx)(n.code,{children:"From"})," field should be handled."]}),"\n",(0,o.jsx)(n.p,{children:"For instance, DMARC can be configured to require a receiving MTA to quarantine or reject messages which do not have an aligned DKIM or SPF identifier."}),"\n",(0,o.jsx)(n.p,{children:"DMARC can also be configured to request reports from remote MTAs about these messages to aid in identifying abuse and/or misconfiguration and to facilitate informed decisions about policy application."}),"\n",(0,o.jsx)(n.h2,{id:"dmarc-in-rspamd",children:"DMARC in rspamd"}),"\n",(0,o.jsx)(n.p,{children:"By default, the DMARC module in rspamd is configured with an empty collection, as shown below:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-hcl",children:"dmarc {\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"This minimal configuration is sufficient to activate the module and enforce DMARC policies."}),"\n",(0,o.jsx)(n.p,{children:"Symbols that the module adds are listed below:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DMARC_BAD_POLICY"}),": Policy was invalid or multiple policies found in DNS"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DMARC_NA"}),": Domain in From header has no DMARC policy or From header is missing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DMARC_POLICY_ALLOW"}),": Message was authenticated & allowed by DMARC policy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DMARC_POLICY_REJECT"}),": Authentication failed- rejection suggested by DMARC policy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DMARC_POLICY_QUARANTINE"}),": Authentication failed- quarantine suggested by DMARC policy"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"DMARC_POLICY_SOFTFAIL"}),": Authentication failed- no action suggested by DMARC policy"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"reporting",children:"Reporting"}),"\n",(0,o.jsxs)(n.p,{children:["Starting from Rspamd 3.0, the recommended way to send DMARC ",(0,o.jsx)(n.code,{children:"aggregate"})," reports is to use the ",(0,o.jsx)(n.code,{children:"rspamadm dmarc_report"})," command with cron or systemd timers. Depending on the amount of traffic, this should be scheduled either daily or hourly. A working MTA running on a specific host is required to send the reports. Ideally, the local MTA should allow email to be sent without authentication or SSL."]}),"\n",(0,o.jsxs)(n.p,{children:["If you're upgrading from a previous version, make sure that you remove the ",(0,o.jsx)(n.code,{children:"reporting = true;"})," setting from ",(0,o.jsx)(n.code,{children:"rspamadm configdump dmarc"}),". This setting has been intentionally converted to the new options schema to prevent misconfiguration. The line ",(0,o.jsx)(n.code,{children:"reporting = true;"})," ",(0,o.jsx)(n.strong,{children:"must"})," be removed from the ",(0,o.jsx)(n.code,{children:"local.d/dmarc.conf"})," if it is there."]}),"\n",(0,o.jsxs)(n.p,{children:["DMARC reporting information is stored in Redis. Please refer to ",(0,o.jsx)(n.a,{href:"/configuration/redis",children:"this guide"})," for instructions on how to configure Redis."]}),"\n",(0,o.jsx)(n.p,{children:"Below are the configuration parameters for DMARC reporting, along with corresponding comments:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-hcl",children:"# local.d/dmarc.conf\n  reporting {\n    # Required attributes\n    enabled = true; # Enable reports in general\n    email = 'dmarc_reports@example.com'; # Source of DMARC reports\n    domain = 'example.com'; # Domain to serve\n    org_name = 'Example organisation'; # Organisation\n    # Optional parameters\n    bcc_addrs = [\"postmaster@example.com\"]; # additional addresses to copy on reports\n    report_local_controller = false; # Store reports for local/controller scans (for testing only)\n    helo = 'rspamd.localhost'; # Helo used in SMTP dialog\n    smtp = '127.0.0.1'; # SMTP server IP\n    smtp_port = 25; # SMTP server port\n    from_name = 'Rspamd'; # SMTP FROM\n    msgid_from = 'rspamd'; # Msgid format\n    max_entries = 1k; # Maximum amount of entries per domain\n    keys_expire = 2d; # Expire date for Redis keys\n    #only_domains = '/path/to/map'; # Only store reports from domains or eSLDs listed in this map\n    # Available from 3.3\n    #exclude_domains = '/path/to/map'; # Exclude reports from domains or eSLDs listed in this map\n    #exclude_domains = [\"example.com\", \"another.com\"]; # Alternative, use array to exclude reports from domains or eSLDs\n    # Available from 3.8\n    #exclude_recipients = '/path/to/map'; # Exclude reports for recipients listed in this map\n    #exclude_recipients = [\"a@example.com\", \"b@another.com\"]; # Alternative, use array to exclude reports for recipients\n  }\n"})}),"\n",(0,o.jsx)(n.p,{children:"Here is the list of options explained:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"enabled"})," (Required): Set to 'true' to enable DMARC reports. If 'false', no reports will be generated."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"email"})," (Required): The email address where DMARC reports will be sent."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"domain"})," (Required): The domain for which DMARC reports will be generated."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"org_name"})," (Required): The name of the organization generating the reports."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bcc_addrs"})," (Optional): An array of additional email addresses to receive a copy of the DMARC reports."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"report_local_controller"})," (Optional): If set to 'true', stores reports for local/controller scans, which is useful for testing purposes only."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"helo"})," (Optional): The HELO identifier used in the SMTP dialog."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"smtp"})," (Optional): The IP address of the SMTP server used for sending reports."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"smtp_port"})," (Optional): The port number of the SMTP server."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"from_name"})," (Optional): The name that appears in the 'FROM' field in the SMTP messages."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"msgid_from"})," (Optional): The message ID format used in SMTP messages."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"max_entries"})," (Optional): The maximum number of entries allowed per domain in the DMARC report."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"keys_expire"})," (Optional): The expiration time for Redis keys storing report data."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"only_domains"})," (Optional): A path to a map file containing a list of domains or eSLDs for which reports should be stored. Reports from other domains will be ignored."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"exclude_domains"})," (Optional): A path to a map file containing a list of domains or eSLDs to be excluded from the reports. Alternatively, an array of domains can be used for the same purpose."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"exclude_recipients"})," (Optional): A path to a map file containing a list of recipients to not send reports to. Alternatively, an array of recipients can be used for the same purpose."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["In versions of Rspamd prior to 3.3, you could exclude certain domains from reporting by configuring the ",(0,o.jsx)(n.code,{children:"no_reporting_domains"})," setting, which is a map of domains or eSLDs to be excluded. Starting from Rspamd 3.3, this option is also available in the ",(0,o.jsx)(n.code,{children:"reporting"})," section. However, the legacy option ",(0,o.jsx)(n.code,{children:"settings.no_reporting_domains"})," is still supported (although it's not recommended)."]}),"\n",(0,o.jsxs)(n.p,{children:["Starting from Rspamd 3.8, there is a new option ",(0,o.jsx)(n.code,{children:"exclude_recipients"})," available in the reporting section. Here you can list recipient email addresses for which no reporting data should be collected (because the recipients generate bounces all the time)."]}),"\n",(0,o.jsxs)(n.p,{children:["Rspamd does not support sending ",(0,o.jsx)(n.code,{children:"forensic"})," DMARC reports."]}),"\n",(0,o.jsx)(n.h2,{id:"dmarc-munging",children:"DMARC Munging"}),"\n",(0,o.jsxs)(n.p,{children:["Starting from version 3.0, Rspamd supports DMARC munging for mailing lists. In this mode, Rspamd will modify the ",(0,o.jsx)(n.code,{children:"From:"})," header of messages with a ",(0,o.jsx)(n.strong,{children:"valid"})," DMARC policy of ",(0,o.jsx)(n.strong,{children:"reject/quarantine"})," to a pre-defined address (such as a mailing list address) to prevent delivery failure during mailing list forwarding.\nAn example of this technique is ",(0,o.jsx)(n.a,{href:"https://mailman.readthedocs.io/en/release-3.1/src/mailman/handlers/docs/dmarc-mitigations.html",children:"documented"})," for the Mailman mailing list management system."]}),"\n",(0,o.jsx)(n.p,{children:"There is a configuration example below that demonstrates how to set up DMARC munging in Rspamd:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-hcl",children:'# local.d/dmarc.conf\nmunging {\n  list_map = "/etc/rspamd/maps.d/dmarc_munging.map"; # map of maillist domains (mandatory)\n  mitigate_strict_only = false; # perform munging merely for reject/quarantine policies\n  reply_goes_to_list = false; # set reply-to to the list address\n  mitigate_allow_only = true; # perform munging based on DMARC_POLICY_ALLOW only\n  munge_from = true; # replace From header with something like <orig name> via <rcpt user>\n  #munge_map_condition = "R_SPF_ALLOW & !FOO"; # maps expression to enable munging\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var r=i(6540);const o={},s=r.createContext(o);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);