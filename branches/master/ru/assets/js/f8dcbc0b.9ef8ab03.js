"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[3377],{4057:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"tutorials/settings_guide","title":"Settings Module Guide","description":"The settings module allows you to apply different Rspamd configurations based on various conditions like sender domain, recipient, IP address, or authentication status. This enables fine-grained control over spam filtering for different users and domains.","source":"@site/docs/tutorials/settings_guide.md","sourceDirName":"tutorials","slug":"/tutorials/settings_guide","permalink":"/docs.rspamd.com/branches/master/ru/tutorials/settings_guide","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/tutorials/settings_guide.md","tags":[],"version":"current","frontMatter":{"title":"Settings Module Guide"},"sidebar":"docs","previous":{"title":"Multimap Module Guide","permalink":"/docs.rspamd.com/branches/master/ru/tutorials/multimap_guide"},"next":{"title":"DKIM Signing Guide","permalink":"/docs.rspamd.com/branches/master/ru/tutorials/dkim_signing_guide"}}');var t=s(4848),r=s(8453);const a={title:"Settings Module Guide"},l="Settings Module: Per-Domain and Per-User Configuration",o={},d=[{value:"What are Settings?",id:"what-are-settings",level:2},{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"Setting Structure",id:"setting-structure",level:3},{value:"Common Conditions",id:"common-conditions",level:3},{value:"Practical Examples",id:"practical-examples",level:2},{value:"Example 1: Per-Domain Spam Thresholds",id:"example-1-per-domain-spam-thresholds",level:3},{value:"Example 2: VIP User Configuration",id:"example-2-vip-user-configuration",level:3},{value:"Example 3: Authenticated vs. Unauthenticated Users",id:"example-3-authenticated-vs-unauthenticated-users",level:3},{value:"Example 4: Geographic and Network-Based Settings",id:"example-4-geographic-and-network-based-settings",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Configuration Management",id:"configuration-management",level:3},{value:"Testing and Validation",id:"testing-and-validation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging",id:"debugging",level:3}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"settings-module-per-domain-and-per-user-configuration",children:"Settings Module: Per-Domain and Per-User Configuration"})}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.strong,{children:"settings module"})," allows you to apply different Rspamd configurations based on various conditions like sender domain, recipient, IP address, or authentication status. This enables fine-grained control over spam filtering for different users and domains."]}),"\n",(0,t.jsx)(e.h2,{id:"what-are-settings",children:"What are Settings?"}),"\n",(0,t.jsx)(e.p,{children:"Settings are conditional configuration overrides that allow you to:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Apply different spam thresholds per domain"}),"\n",(0,t.jsx)(e.li,{children:"Enable/disable specific modules for certain users"}),"\n",(0,t.jsx)(e.li,{children:"Create custom rules for VIP customers"}),"\n",(0,t.jsx)(e.li,{children:"Implement tiered service levels"}),"\n",(0,t.jsx)(e.li,{children:"Handle special routing scenarios"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"basic-concepts",children:"Basic Concepts"}),"\n",(0,t.jsx)(e.h3,{id:"setting-structure",children:"Setting Structure"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'settingname {\n  # Conditions when this setting applies\n  condition = "...";\n  \n  # What to apply when condition matches\n  apply {\n    # Configuration changes\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"common-conditions",children:"Common Conditions"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"ip"}),": Sender IP address"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"from"}),": Sender email address"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"rcpt"}),": Recipient email address"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"user"}),": Authenticated username"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"hostname"}),": Client hostname"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"authenticated"}),": Authentication status"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"practical-examples",children:"Practical Examples"}),"\n",(0,t.jsx)(e.h3,{id:"example-1-per-domain-spam-thresholds",children:"Example 1: Per-Domain Spam Thresholds"}),"\n",(0,t.jsx)(e.p,{children:"Create different filtering levels for different domains:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/settings.conf\n\n# Strict filtering for executive domain\nexecutives {\n  rcpt = "@executives.company.com";\n  apply {\n    actions {\n      reject = 5.0;      # Very strict\n      add_header = 2.0;\n      greylist = 1.0;\n    }\n    \n    # Enable additional protection\n    symbols_enabled = [\n      "EXECUTIVE_PROTECTION"\n    ];\n  }\n}\n\n# Relaxed filtering for marketing domain  \nmarketing {\n  rcpt = "@marketing.company.com";\n  apply {\n    actions {\n      reject = 20.0;     # Very lenient\n      add_header = 15.0;\n      greylist = 10.0;\n    }\n    \n    # Disable some checks for newsletters\n    symbols_disabled = [\n      "BULK_EMAIL",\n      "MAILLIST"\n    ];\n  }\n}\n\n# Standard filtering for main domain\nstandard {\n  rcpt = "@company.com";\n  apply {\n    actions {\n      reject = 15.0;     # Standard thresholds\n      add_header = 6.0;\n      greylist = 4.0;\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"example-2-vip-user-configuration",children:"Example 2: VIP User Configuration"}),"\n",(0,t.jsx)(e.p,{children:"Special handling for important customers:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# VIP customers with priority processing\nvip_customers {\n  rcpt = [\n    "ceo@bigclient.com",\n    "admin@importantpartner.org",\n    "@vip-domain.com"\n  ];\n  \n  apply {\n    # Very permissive for VIPs\n    actions {\n      reject = 25.0;\n      add_header = 20.0;\n      greylist = null;    # Disable greylisting\n    }\n    \n    # Disable reputation checks\n    symbols_disabled = [\n      "IP_SCORE",\n      "URL_REPUTATION"\n    ];\n    \n    # Add VIP symbol for identification\n    symbols_enabled = [\n      "VIP_RECIPIENT"\n    ];\n    \n    # Custom headers\n    milter_headers {\n      extended_spam_headers = true;\n    }\n  }\n}\n\n# VIP senders - always allow\nvip_senders {\n  from = [\n    "noreply@trusted-bank.com",\n    "alerts@security-vendor.com",\n    "@government.gov"\n  ];\n  \n  apply {\n    actions {\n      reject = null;      # Never reject\n      add_header = null;  # Never add headers\n      greylist = null;    # Never greylist\n    }\n    \n    # Bypass most checks\n    symbols_disabled = [\n      "DMARC_POLICY_REJECT",\n      "SPF_FAIL", \n      "DKIM_INVALID"\n    ];\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"example-3-authenticated-vs-unauthenticated-users",children:"Example 3: Authenticated vs. Unauthenticated Users"}),"\n",(0,t.jsx)(e.p,{children:"Different rules based on authentication:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# Authenticated users (outbound)\nauthenticated_users {\n  authenticated = true;\n  \n  apply {\n    # Relaxed outbound filtering\n    actions {\n      reject = 30.0;\n      add_header = 25.0;\n      greylist = null;\n    }\n    \n    # Disable inbound-specific checks\n    symbols_disabled = [\n      "BAYES_SPAM",\n      "SURBL_MULTI"\n    ];\n    \n    # Enable outbound-specific checks\n    symbols_enabled = [\n      "DKIM_SIGN",\n      "ARC_SIGN"\n    ];\n  }\n}\n\n# Unauthenticated external mail\nunauthenticated_external {\n  authenticated = false;\n  ip = "!192.168.0.0/16";\n  \n  apply {\n    # Strict inbound filtering\n    actions {\n      reject = 10.0;\n      add_header = 5.0;\n      greylist = 3.0;\n    }\n    \n    # Enable all protection modules\n    symbols_enabled = [\n      "PHISHING",\n      "MALWARE_SCAN",\n      "ATTACHMENT_CHECK"\n    ];\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"example-4-geographic-and-network-based-settings",children:"Example 4: Geographic and Network-Based Settings"}),"\n",(0,t.jsx)(e.p,{children:"Configure based on source location:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# Internal network - trusted\ninternal_network {\n  ip = [\n    "192.168.0.0/16",\n    "10.0.0.0/8",\n    "172.16.0.0/12"\n  ];\n  \n  apply {\n    # Relaxed for internal\n    actions {\n      reject = 20.0;\n      add_header = 15.0;\n      greylist = null;\n    }\n    \n    # Skip external checks\n    symbols_disabled = [\n      "RBL_CHECK",\n      "PHISHING"\n    ];\n  }\n}\n\n# Known good mail servers\ntrusted_relays {\n  ip = [\n    "203.0.113.10",     # Partner MX\n    "198.51.100.20",    # Backup MX\n    "2001:db8::1"       # IPv6 relay\n  ];\n  \n  apply {\n    actions {\n      reject = 25.0;\n      add_header = 20.0;\n      greylist = null;\n    }\n    \n    symbols_disabled = [\n      "IP_SCORE_UNDER",\n      "ONCE_RECEIVED"\n    ];\n  }\n}\n\n'})}),"\n",(0,t.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(e.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Order settings by frequency"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:"# Most common conditions first\ncommon_domain { ... }\nspecific_users { ... }\nedge_cases { ... }\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Use efficient conditions"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# Fast IP lookups\nip = "192.168.1.0/24";\n\n# Avoid complex regex in hot paths\nfrom = "user@domain.com";  # Better than regex\n'})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Minimize setting complexity"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# Simple conditions perform better\nrcpt = "@domain.com";\n\n# Complex conditions only when needed\nand = [{ip = "..."}, {time = "..."}];\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Use includes for organization"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/settings.conf\n.include(try=true,priority=1,duplicate=merge) "$LOCAL_CONFDIR/local.d/settings-domains.conf"\n.include(try=true,priority=1,duplicate=merge) "$LOCAL_CONFDIR/local.d/settings-users.conf"\n'})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Document your settings"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:"# VIP customer configuration\n# Updated: 2024-01-15\n# Contact: admin@company.com\nvip_config {\n  # ... configuration\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Version control settings"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'# Track changes to settings\ngit add /etc/rspamd/local.d/settings*.conf\ngit commit -m "Updated VIP customer thresholds"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"testing-and-validation",children:"Testing and Validation"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Test settings syntax"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"rspamadm configtest\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Verify setting application"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'# Test with specific message\nrspamc -f sender@domain.com -r recipient@company.com < test.eml\n\n# Check which settings applied\ngrep "applied.*setting" /var/log/rspamd/rspamd.log\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(e.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Settings not applying"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'# Check condition syntax\nrspamadm configtest\n\n# Verify conditions match\ngrep "setting.*applied" /var/log/rspamd/rspamd.log\n'})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Conflicting settings"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Check setting priorities\n# Later settings override earlier ones\n# Use priority parameter to control order\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Performance problems"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Monitor setting evaluation time\n# Simplify complex conditions\n# Move frequently-matched settings first\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"debugging",children:"Debugging"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# local.d/settings.conf\n\n# Enable debug logging for settings\ndebug_modules = ["settings"];\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'# Test specific setting conditions\nrspamc --header="X-Test: value" -f sender@test.com -r recipient@domain.com < test.eml\n\n# Check setting application in logs\ntail -f /var/log/rspamd/rspamd.log | grep -i setting\n'})})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function a(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);