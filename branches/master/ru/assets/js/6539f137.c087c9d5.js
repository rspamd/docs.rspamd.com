"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[1469],{132:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"developers/protocol","title":"Rspamd protocol","description":"Protocol basics","source":"@site/docs/developers/protocol.md","sourceDirName":"developers","slug":"/developers/protocol","permalink":"/docs.rspamd.com/branches/master/ru/developers/protocol","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/developers/protocol.md","tags":[],"version":"current","frontMatter":{"title":"Rspamd protocol"},"sidebar":"docs","previous":{"title":"Rspamd architecture","permalink":"/docs.rspamd.com/branches/master/ru/developers/architecture"},"next":{"title":"Coroutines and async calls","permalink":"/docs.rspamd.com/branches/master/ru/developers/sync_async"}}');var t=n(4848),l=n(8453);const i={title:"Rspamd protocol"},d="Rspamd protocol",a={},o=[{value:"Protocol basics",id:"protocol-basics",level:2},{value:"Rspamd HTTP request",id:"rspamd-http-request",level:2},{value:"Rspamd protocol encryption",id:"rspamd-protocol-encryption",level:2},{value:"HTTP request",id:"http-request",level:3},{value:"HTTP headers",id:"http-headers",level:3},{value:"Rspamd HTTP reply",id:"rspamd-http-reply",level:2},{value:"Milter headers",id:"milter-headers",level:2},{value:"Adding headers",id:"adding-headers",level:3},{value:"Removing headers",id:"removing-headers",level:3},{value:"Complete example",id:"complete-example",level:3},{value:"Curl example",id:"curl-example",level:2},{value:"Normal worker HTTP endpoints",id:"normal-worker-http-endpoints",level:2},{value:"Controller HTTP endpoints",id:"controller-http-endpoints",level:2}];function c(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"rspamd-protocol",children:"Rspamd protocol"})}),"\n",(0,t.jsx)(s.h2,{id:"protocol-basics",children:"Protocol basics"}),"\n",(0,t.jsx)(s.p,{children:"Rspamd employs the HTTP protocol, specifically versions 1.0 or 1.1. Rspamd defines some headers which allow the passing of extra information about a scanned message, such as envelope data, IP address or SMTP SASL authentication data, etc. Rspamd supports normal and chunked encoded HTTP requests."}),"\n",(0,t.jsx)(s.h2,{id:"rspamd-http-request",children:"Rspamd HTTP request"}),"\n",(0,t.jsx)(s.p,{children:"Rspamd encourages the use of the HTTP protocol due to its universality and compatibility with virtually every programming language, without the need for obscure libraries. A typical HTTP request takes the following form:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"  POST /checkv2 HTTP/1.0\n  Content-Length: 26969\n  From: smtp@example.com\n  Pass: all\n  Ip: 95.211.146.161\n  Helo: localhost.localdomain\n  Hostname: localhost\n\n  <your message goes here>\n"})}),"\n",(0,t.jsx)(s.p,{children:"For added flexibility, chunked encoding can be utilized, streamlining data transfer, particularly when the message length is unknown."}),"\n",(0,t.jsx)(s.h2,{id:"rspamd-protocol-encryption",children:"Rspamd protocol encryption"}),"\n",(0,t.jsxs)(s.p,{children:["Rspamd supports encryption by means of lightweight protocol called HTTPCrypt. You can find comprehensive details about this protocol in the following ",(0,t.jsx)(s.a,{href:"https://highsecure.ru/httpcrypt.pdf",children:"paper"}),'{:target="_blank"}. To enable encryption, you need to generate keypair and push it in the corresponding worker\'s section (e.g. ',(0,t.jsx)(s.code,{children:"worker-controller.inc"})," or ",(0,t.jsx)(s.code,{children:"worker-normal.inc"})," or, even, in ",(0,t.jsx)(s.code,{children:"worker-proxy.inc"}),"):"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'$ rspamadm keypair\n\nkeypair {\n    privkey = "e4gr3yuw4xiy6dikdpqus8cmxj8c6pqstt448ycwhewhhrtxdahy";\n    id = "gnyieumi6sp6d3ykkukep9yuaq13q4u6xycmiqaw7iahsrz97acpposod1x8zogynnishtgxr47o815dgsz9t69d66jcm1drjei4a5d";\n    pubkey = "fg8uwtce9sta43sdwzddb11iez5thcskiufj4ug8esyfniqq5iiy";\n    type = "kex";\n    algorithm = "curve25519";\n    encoding = "base32";\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Regrettably, the HTTPCrypt protocol hasn't gained widespread adoption among popular libraries. Nonetheless, you can effectively utilize it with the ",(0,t.jsx)(s.code,{children:"rspamc"})," client and various internal clients, including Rspamd's proxy, which can serve as an encryption bridge for conducting spam scans via Rspamd.\nMoreover, you have the option to employ Nginx for SSL termination on behalf of Rspamd. While Rspamd's client-side components (e.g., proxy or ",(0,t.jsx)(s.code,{children:"rspamc"}),") offer native support for SSL encryption, it's important to note that SSL support on the server side is not currently available."]}),"\n",(0,t.jsx)(s.h3,{id:"http-request",children:"HTTP request"}),"\n",(0,t.jsxs)(s.p,{children:["Normally, you should just use ",(0,t.jsx)(s.code,{children:"/checkv2"})," here. However, if you want to communicate with the controller then you might want to use ",(0,t.jsx)(s.a,{href:"#controller-http-endpoints",children:"controller commands"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"http-headers",children:"HTTP headers"}),"\n",(0,t.jsx)(s.p,{children:"To minimize redundant processing, Rspamd enables an MTA to transmit pre-processed message data using HTTP headers. Rspamd accommodates the following non-standard HTTP headers:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Header"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Deliver-To"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines actual delivery recipient of message. Can be used for personalized statistics and for user specific options."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"IP"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines IP from which this message is received."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Helo"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines SMTP helo"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Hostname"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines resolved hostname"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Flags"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Supported from version 2.0: Defines output flags as a commas separated list: {::nomarkdown}",(0,t.jsxs)(s.ul,{children:[(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"pass_all"}),": pass all filters"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"groups"}),": return symbols groups"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"zstd"}),": compressed input/output"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"no_log"}),": do not log task"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"milter"}),": apply milter protocol related hacks"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"profile"}),": profile performance for this task"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"body_block"}),": accept rewritten body as a separate part of reply"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"ext_urls"}),": extended urls information"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"skip"}),": skip all filters processing"]}),(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"skip_process"}),": skip mime parsing/processing"]})]}),"{:/}"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"From"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines SMTP mail from command data"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Queue-Id"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines SMTP queue id for message (can be used instead of message id in logging)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Raw"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["If set to ",(0,t.jsx)(s.code,{children:"yes"}),", then Rspamd assumes that the content is not MIME and treat it as raw data."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Rcpt"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Defines SMTP recipient (there may be several ",(0,t.jsx)(s.code,{children:"Rcpt"})," headers)"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Pass"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["If this header has ",(0,t.jsx)(s.code,{children:"all"})," value, all filters would be checked for this message."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Subject"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines subject of message (is used for non-mime messages)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"User"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines username for authenticated SMTP client."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Settings-ID"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Defines ",(0,t.jsx)(s.a,{href:"/configuration/settings",children:"settings id"})," to apply."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Settings"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Defines list of rules (",(0,t.jsx)(s.a,{href:"/configuration/settings",children:"settings"})," ",(0,t.jsx)(s.code,{children:"apply"})," part) as raw json block to apply."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"User-Agent"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Defines user agent (special processing if it is ",(0,t.jsx)(s.code,{children:"rspamc"}),")."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"MTA-Tag"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"MTA defined tag (can be used in settings)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"MTA-Name"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Defines MTA name, used in ",(0,t.jsx)(s.code,{children:"Authentication-Results"})," routines."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"TLS-Cipher"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines TLS cipher name."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"TLS-Version"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Defines TLS version."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"TLS-Cert-Issuer"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Defines Cert issuer, can be used in conjunction with ",(0,t.jsx)(s.code,{children:"client_ca_name"})," in ",(0,t.jsx)(s.a,{href:"/workers/rspamd_proxy",children:"proxy worker"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"URL-Format"})}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Supported from version 1.9: return all URLs and email if this header is ",(0,t.jsx)(s.code,{children:"extended"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"Filename"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Hint for filename if used with some file."})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["Controller also defines certain headers, which you can find detailed information about ",(0,t.jsx)(s.a,{href:"#controller-http-endpoints",children:"here"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Furthermore, Rspamd supports standard HTTP headers like ",(0,t.jsx)(s.code,{children:"Content-Length"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"rspamd-http-reply",children:"Rspamd HTTP reply"}),"\n",(0,t.jsxs)(s.p,{children:["The response from Rspamd is encoded in ",(0,t.jsx)(s.code,{children:"JSON"})," format. Here's an example of a typical HTTP reply:"]}),"\n",(0,t.jsx)(s.p,{children:"HTTP/1.1 200 OK\nConnection: close\nServer: rspamd/0.9.0\nDate: Mon, 30 Mar 2015 16:19:35 GMT\nContent-Length: 825\nContent-Type: application/json"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n    "is_skipped": false,\n    "score": 5.2,\n    "required_score": 7,\n    "action": "add header",\n    "symbols": {\n        "DATE_IN_PAST": {\n            "name": "DATE_IN_PAST",\n            "score": 0.1\n        },\n        "FORGED_SENDER": {\n            "name": "FORGED_SENDER",\n            "score": 5\n        },\n        "TEST": {\n            "name": "TEST",\n            "score": 100500\n        },\n        "FUZZY_DENIED": {\n            "name": "FUZZY_DENIED",\n            "score": 0,\n            "options": [\n                "1: 1.00 / 1.00",\n                "1: 1.00 / 1.00"\n            ]\n        },\n        "HFILTER_HELO_5": {\n            "name": "HFILTER_HELO_5",\n            "score": 0.1\n        }\n    },\n    "urls": [\n        "www.example.com",\n        "another.example.com"\n    ],\n    "emails": [\n        "user@example.com"\n    ],\n    "message-id": "4E699308EFABE14EB3F18A1BB025456988527794@example"\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For convenience, the reply is LINTed using ",(0,t.jsx)(s.a,{href:"https://jsonlint.com",children:"JSONLint"}),'{:target="_blank"}. The actual response is compressed for efficiency.']}),"\n",(0,t.jsx)(s.p,{children:"Each response contains the following fields:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"is_skipped"})," - boolean flag that is ",(0,t.jsx)(s.code,{children:"true"})," if a message has been skipped due to settings"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"score"})," - floating-point value representing the effective score of message"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"required_score"})," - floating-point value meaning the threshold value for the metric"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"action"})," - recommended action for a message:\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"no action"})," - message is likely ham (please notice space, not an underscore)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"greylist"})," - message should be greylisted"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"add header"})," - message is suspicious and should be marked as spam (please notice space, not an underscore)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"rewrite subject"})," - message is suspicious and should have subject rewritten"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"soft reject"})," - message should be temporary rejected (for example, due to rate limit exhausting)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"reject"})," - message should be rejected as spam"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"symbols"})," - all symbols added during a message's processing, indexed by symbol names:\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"name"})," - name of symbol"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"score"})," - final score"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"options"})," - array of symbol options as an array of strings"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Additional keys that could be in the reply include:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"subject"})," - if action is ",(0,t.jsx)(s.code,{children:"rewrite subject"})," this value defines the desired subject for a message"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"urls"})," - a list of URLs found in a message (only hostnames)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"emails"})," - a list of emails found in a message"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"message-id"})," - ID of message (useful for logging)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"messages"})," - object containing optional messages added by Rspamd filters (such as ",(0,t.jsx)(s.code,{children:"SPF"}),") - The value of the ",(0,t.jsx)(s.code,{children:"smtp_message"})," key is intended to be returned as SMTP response text by the MTA"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"milter-headers",children:"Milter headers"}),"\n",(0,t.jsxs)(s.p,{children:["This section of the response is utilized to manipulate headers and the SMTP session. It is located under the ",(0,t.jsx)(s.code,{children:"milter"})," key in the response. Here are the potential elements within this object:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"add_headers"}),": headers to add (object, indexed by header name)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"remove_headers"}),": headers to remove (object, indexed by header name)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"change_from"}),": change SMTP from value (plain string)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"reject"}),": custom rejection (plain string value), e.g. ",(0,t.jsx)(s.code,{children:'reject="discard"'})," or ",(0,t.jsx)(s.code,{children:'reject="quarantine"'})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"spam_header"}),": custom spam header (plain string - header name)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"no_action"}),": instead of doing any action to a message, just add header ",(0,t.jsx)(s.code,{children:"X-Rspamd-Action"})," equal to that action and accept message (boolean value)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"add_rcpt"}),": (from 1.8.0) add new recipients (array of strings)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"del_rcpt"}),": (from 1.8.0) delete recipients (array of strings)"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"adding-headers",children:"Adding headers"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"add_headers"})," element has the following format:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n    "<header_name>": {\n        "value": "<header_value>",\n        "order": 0\n    },\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Where ",(0,t.jsx)(s.code,{children:"<header_name>"})," represents header's name, ",(0,t.jsx)(s.code,{children:"<header_value>"})," - value, and ",(0,t.jsx)(s.code,{children:"order"})," the order of insertion (e.g. 0 will be the first header)."]}),"\n",(0,t.jsx)(s.h3,{id:"removing-headers",children:"Removing headers"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"remove_headers"})," element has the following format:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n    "<header_name>": 1\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Where ",(0,t.jsx)(s.code,{children:"<header_name>"})," represents header's name, and the value is the order of the header to remove (starting from 1). There are special treatment for orders ",(0,t.jsx)(s.code,{children:"0"})," and negative order:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["if order is equal to zero, then it means that *",(0,t.jsx)(s.em,{children:"all"})," headers with this name should be removed"]}),"\n",(0,t.jsxs)(s.li,{children:["if order is negative, it means that the ",(0,t.jsx)(s.code,{children:"N"}),"th header from the ",(0,t.jsx)(s.strong,{children:"end"})," should be removed (where ",(0,t.jsx)(s.code,{children:"N"})," is ",(0,t.jsx)(s.code,{children:"abs(order)"}),")"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"complete-example",children:"Complete example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n    "milter":\n    {\n        "add_headers": {\n            "ArcMessageSignature": {\n                "value": "some_value with JSON\\nencoded values",\n                "order": 0\n            },\n        },\n        "remove_headers": {\n            "DKIM-Signature": -1\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"curl-example",children:"Curl example"}),"\n",(0,t.jsxs)(s.p,{children:["To check a message without rspamc:\n",(0,t.jsx)(s.code,{children:"curl --data-binary @- http://localhost:11333/symbols < file.eml"})]}),"\n",(0,t.jsx)(s.h2,{id:"normal-worker-http-endpoints",children:"Normal worker HTTP endpoints"}),"\n",(0,t.jsxs)(s.p,{children:["The following endpoints are valid on the normal worker and accept ",(0,t.jsx)(s.code,{children:"POST"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/checkv2"})," - Checks message and return action"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The below endpoints all use ",(0,t.jsx)(s.code,{children:"GET"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/ping"})," - Returns just a ",(0,t.jsx)(s.code,{children:"pong"})," HTTP reply (could be used for monitoring)"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"controller-http-endpoints",children:"Controller HTTP endpoints"}),"\n",(0,t.jsxs)(s.p,{children:["The following endpoints are valid merely on the controller. All of these may require ",(0,t.jsx)(s.code,{children:"Password"})," header to be sent depending on configuration (passing this as query string works too)."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/fuzzyadd"})," - Adds message to fuzzy storage"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/fuzzydel"})," - Removes message from fuzzy storage"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["These accept ",(0,t.jsx)(s.code,{children:"POST"}),". Headers which must be set are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Flag"}),": flag identifying fuzzy storage"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Weight"}),": weight to add to hashes"]}),"\n"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/learnspam"})," - Trains bayes classifier on spam message"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/learnham"})," - Trains bayes classifier on ham message"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"/checkv2"})," - Checks message and return action (same as normal worker)"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["These also accept ",(0,t.jsx)(s.code,{children:"POST"}),". Headers which may be set are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Classifier"}),": classifier name to be learned. If not specified, all available classifiers will be learned."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The following endpoints all use ",(0,t.jsx)(s.code,{children:"GET"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/errors"})," - Returns error messages from ring buffer"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/stat"})," - Returns statistics"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/statreset"})," - Returns statistics and reset countes"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/graph?type=<hourly|daily|weekly|monthly>"})," - Plots throughput graph"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/history"})," - Returns rolling history"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/historyreset"})," - Returns rolling history and resets its elements afterwards"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/actions"})," - Returns thresholds for actions"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/symbols"})," - Returns symbols in metric & their scores"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/maps"})," - Returns list of maps"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/neighbours"})," - Returns list of known peers"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/errors"})," - Returns a content of erros ring buffer"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/getmap"})," - Fetches contents of map according to ID passed in ",(0,t.jsx)(s.code,{children:"Map:"})," header"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/fuzzydelhash"})," - Deletes entries from fuzzy according to content of ",(0,t.jsx)(s.code,{children:"Hash:"})," header(s)"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/plugins"})," - Returns list of plugins or plugin specific stuff"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/ping"})," - Returns just a ",(0,t.jsx)(s.code,{children:"pong"})," HTTP reply (could be used for monitoring)"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"/metrics"})," - Returns OpenMetrics data"]}),"\n",(0,t.jsxs)(s.p,{children:["Sample response of ",(0,t.jsx)(s.code,{children:"/metrics"})," endpoint:"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'    # HELP rspamd_build_info A metric with a constant \'1\' value labeled by version from which rspamd was built.\n  # TYPE rspamd_build_info gauge\n  rspamd_build_info{version="3.2"} 1\n  # HELP rspamd_config A metric with a constant \'1\' value labeled by id of the current config.\n  # TYPE rspamd_config gauge\n  rspamd_config{id="nzpuz9fm3jk1xncp3q136cudb3qycb7sygxjcko89ya69i8zs3879wbifxh9wfoip7ur8or6dx1crry9px36j9x36btbndjtxug9kub"} 1\n  # HELP rspamd_scan_time_average Average messages scan time.\n  # TYPE rspamd_scan_time_average gauge\n  rspamd_scan_time_average 0.15881561463879001\n  # HELP process_start_time_seconds Start time of the process since unix epoch in seconds.\n  # TYPE process_start_time_seconds gauge\n  process_start_time_seconds 1663651459\n  # HELP rspamd_read_only Whether the rspamd instance is read-only.\n  # TYPE rspamd_read_only gauge\n  rspamd_read_only 0\n  # HELP rspamd_scanned_total Scanned messages.\n  # TYPE rspamd_scanned_total counter\n  rspamd_scanned_total 5978\n  # HELP rspamd_learned_total Learned messages.\n  # TYPE rspamd_learned_total counter\n  rspamd_learned_total 5937\n  # HELP rspamd_spam_total Messages classified as spam.\n  # TYPE rspamd_spam_total counter\n  rspamd_spam_total 5978\n  # HELP rspamd_ham_total Messages classified as spam.\n  # TYPE rspamd_ham_total counter\n  rspamd_ham_total 0\n  # HELP rspamd_connections Active connections.\n  # TYPE rspamd_connections gauge\n  rspamd_connections 0\n  # HELP rspamd_control_connections_total Control connections.\n  # TYPE rspamd_control_connections_total gauge\n  rspamd_control_connections_total 45399\n  # HELP rspamd_pools_allocated Pools allocated.\n  # TYPE rspamd_pools_allocated gauge\n  rspamd_pools_allocated 45585\n  # HELP rspamd_pools_freed Pools freed.\n  # TYPE rspamd_pools_freed gauge\n  rspamd_pools_freed 45542\n  # HELP rspamd_allocated_bytes Bytes allocated.\n  # TYPE rspamd_allocated_bytes gauge\n  rspamd_allocated_bytes 60537276\n  # HELP rspamd_chunks_allocated Memory pools: current chunks allocated.\n  # TYPE rspamd_chunks_allocated gauge\n  rspamd_chunks_allocated 374\n  # HELP rspamd_shared_chunks_allocated Memory pools: current shared chunks allocated.\n  # TYPE rspamd_shared_chunks_allocated gauge\n  rspamd_shared_chunks_allocated 15\n  # HELP rspamd_chunks_freed Memory pools: current chunks freed.\n  # TYPE rspamd_chunks_freed gauge\n  rspamd_chunks_freed 0\n  # HELP rspamd_chunks_oversized Memory pools: current chunks oversized (needs extra allocation/fragmentation).\n  # TYPE rspamd_chunks_oversized gauge\n  rspamd_chunks_oversized 1550\n  # HELP rspamd_fragmented Memory pools: fragmented memory waste.\n  # TYPE rspamd_fragmented gauge\n  rspamd_fragmented 0\n  # HELP rspamd_learns_total Total learns.\n  # TYPE rspamd_learns_total counter\n  rspamd_learns_total 9526\n  # HELP rspamd_actions_total Actions labelled by action type.\n  # TYPE rspamd_actions_total counter\n  rspamd_actions_total{type="reject"} 0\n  rspamd_actions_total{type="soft reject"} 0\n  rspamd_actions_total{type="rewrite subject"} 0\n  rspamd_actions_total{type="add header"} 5978\n  rspamd_actions_total{type="greylist"} 0\n  rspamd_actions_total{type="no action"} 0\n  # HELP rspamd_statfiles_revision Stat files revision.\n  # TYPE rspamd_statfiles_revision gauge\n  rspamd_statfiles_revision{symbol="BAYES_SPAM",type="redis"} 9429\n  rspamd_statfiles_revision{symbol="BAYES_HAM",type="redis"} 97\n  # HELP rspamd_statfiles_used Stat files used.\n  # TYPE rspamd_statfiles_used gauge\n  rspamd_statfiles_used{symbol="BAYES_SPAM",type="redis"} 0\n  rspamd_statfiles_used{symbol="BAYES_HAM",type="redis"} 0\n  # HELP rspamd_statfiles_totals Stat files total.\n  # TYPE rspamd_statfiles_totals gauge\n  rspamd_statfiles_totals{symbol="BAYES_SPAM",type="redis"} 0\n  rspamd_statfiles_totals{symbol="BAYES_HAM",type="redis"} 0\n  # HELP rspamd_statfiles_size Stat files size.\n  # TYPE rspamd_statfiles_size gauge\n  rspamd_statfiles_size{symbol="BAYES_SPAM",type="redis"} 0\n  rspamd_statfiles_size{symbol="BAYES_HAM",type="redis"} 0\n  # HELP rspamd_statfiles_languages Stat files languages.\n  # TYPE rspamd_statfiles_languages gauge\n  rspamd_statfiles_languages{symbol="BAYES_SPAM",type="redis"} 0\n  rspamd_statfiles_languages{symbol="BAYES_HAM",type="redis"} 0\n  # HELP rspamd_statfiles_users Stat files users.\n  # TYPE rspamd_statfiles_users gauge\n  rspamd_statfiles_users{symbol="BAYES_SPAM",type="redis"} 1\n  rspamd_statfiles_users{symbol="BAYES_HAM",type="redis"} 1\n  # HELP rspamd_fuzzy_stat Fuzzy stat labelled by storage.\n  # TYPE rspamd_fuzzy_stat gauge\n  rspamd_fuzzy_stat{storage="rspamd.com"} 1768011131\n  # EOF\n'})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(6540);const t={},l=r.createContext(t);function i(e){const s=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);