"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[5557],{3347:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"modules/metadata_exporter","title":"Metadata exporter","description":"The Metadata exporter operates on a set of rules that identify interesting messages, and subsequently sends information based on these rules to an external service. The exporter supports Redis Pub/Sub, HTTP POST, and SMTP as built-in backends, while also allowing users to define custom backends as desired.","source":"@site/docs/modules/metadata_exporter.md","sourceDirName":"modules","slug":"/modules/metadata_exporter","permalink":"/docs.rspamd.com/branches/master/ru/modules/metadata_exporter","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/metadata_exporter.md","tags":[],"version":"current","frontMatter":{"title":"Metadata exporter"},"sidebar":"docs","previous":{"title":"Mailing lists module","permalink":"/docs.rspamd.com/branches/master/ru/modules/maillist"},"next":{"title":"Metric exporter","permalink":"/docs.rspamd.com/branches/master/ru/modules/metric_exporter"}}');var r=n(4848),d=n(8453);const i={title:"Metadata exporter"},a="Metadata exporter",l={},c=[{value:"Theory of operation",id:"theory-of-operation",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Stock pushers (backends)",id:"stock-pushers-backends",level:3},{value:"Stock selectors",id:"stock-selectors",level:3},{value:"Stock formatters",id:"stock-formatters",level:3},{value:"Settings: general",id:"settings-general",level:3},{value:"Settings: <code>http</code> backend",id:"settings-http-backend",level:3},{value:"Settings: <code>redis_pubsub</code> backend",id:"settings-redis_pubsub-backend",level:3},{value:"Settings: <code>send_mail</code> backend",id:"settings-send_mail-backend",level:3},{value:"General metadata",id:"general-metadata",level:3},{value:"Custom functions",id:"custom-functions",level:3}];function o(e){const s={a:"a",b:"b",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",mark:"mark",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"metadata-exporter",children:"Metadata exporter"})}),"\n",(0,r.jsx)(s.p,{children:"The Metadata exporter operates on a set of rules that identify interesting messages, and subsequently sends information based on these rules to an external service. The exporter supports Redis Pub/Sub, HTTP POST, and SMTP as built-in backends, while also allowing users to define custom backends as desired."}),"\n",(0,r.jsx)(s.p,{children:"Potential applications of the Metadata exporter include quarantining, logging, alerting, and feedback loops."}),"\n",(0,r.jsx)(s.h3,{id:"theory-of-operation",children:"Theory of operation"}),"\n",(0,r.jsx)(s.p,{children:"For each rule defined in configuration:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.code,{children:"selector"})," function identifies messages that we want to export metadata from (default selector selects all messages)."]}),"\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.code,{children:"formatter"})," function extracts formatted metadata from the message (default formatter returns full message content)."]}),"\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.code,{children:"pusher"})," function (defined by the ",(0,r.jsx)(s.code,{children:"backend"})," setting) pushes the formatted metadata somewhere"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"A number of such functions are defined in the plugin which can be used in addition to user-defined functions."}),"\n",(0,r.jsx)(s.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:'metadata_exporter {\n\n  # Each rule defines some export process\n\n  rules {\n\n    # The following rule posts JSON-formatted metadata at the defined URL\n    # when it sees a rejected mail from an authenticated user\n    MY_HTTP_ALERT_1 {\n      backend = "http";\n      url = "http://127.0.0.1:8080/foo";\n      # More about selectors and formatters later\n      selector = "is_reject_authed";\n      formatter = "json";\n    }\n\n    # This rule posts all messages to a Redis Pub/Sub channel\n    MY_REDIS_PUBSUB_1 {\n      backend = "redis_pubsub";\n      channel = "foo";\n      # Default formatter and selector is used\n    }\n\n    # This rule sends an e-Mail alert over SMTP containing message metadata\n    # when it sees a rejected mail from an authenticated user\n    MY_EMAIL_1 {\n      backend = "send_mail";\n      smtp = "127.0.0.1";\n      mail_to = "user@example.com";\n      selector = "is_reject_authed";\n      formatter = "email_alert";\n    }\n\n  }\n\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"stock-pushers-backends",children:"Stock pushers (backends)"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"http"}),": sends content over HTTP POST"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"redis_pubsub"}),": sends content over Redis Pub/Sub"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"send_mail"}),": sends content over SMTP"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"stock-selectors",children:"Stock selectors"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"default"}),": selects all mail"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"is_spam"}),": matches messages with ",(0,r.jsx)(s.code,{children:"reject"})," or ",(0,r.jsx)(s.code,{children:"add header"})," action"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"is_spam_authed"}),": matches messages with ",(0,r.jsx)(s.code,{children:"reject"})," or ",(0,r.jsx)(s.code,{children:"add header"})," action from authenticated users"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"is_reject"}),": matches messages with ",(0,r.jsx)(s.code,{children:"reject"})," action"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"is_reject_authed"}),": matches messages with ",(0,r.jsx)(s.code,{children:"reject"})," action from authenticated users"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"is_not_soft_reject"}),": matches all messages except those with ",(0,r.jsx)(s.code,{children:"soft reject"})," action"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"stock-formatters",children:"Stock formatters"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"default"}),": returns full message content"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"email_alert"}),": generates an e-Mail report about the message"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"json"}),": returns JSON-formatted metadata about a message"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"settings-general",children:"Settings: general"}),"\n",(0,r.jsx)(s.p,{children:"The following settings can be defined on any rule:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"selector"}),": defines selector for the rule"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"formatter"}),": defines formatter for the rule"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"backend"}),": defines backend (pusher) for the rule"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"defer"}),": if true, ",(0,r.jsx)(s.code,{children:"soft reject"})," action is forced on failed processing"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"timeout"}),": defines module timeout (default: '5s')"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"settings-http-backend",children:["Settings: ",(0,r.jsx)(s.code,{children:"http"})," backend"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"url"})," (required): defines the URL to post content to"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"meta_header_prefix"}),": prefix for meta headers (default: ",(0,r.jsx)(s.code,{children:"'X-Rspamd-'"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"meta_headers"})," (bool): if set to ",(0,r.jsx)(s.code,{children:"true"}),", general metadata is added to HTTP request headers (default: ",(0,r.jsx)(s.code,{children:"false"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mime_type"}),": defines the MIME type of the content sent in the HTTP POST"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"user"})," & ",(0,r.jsx)(s.code,{children:"password"}),": if both parameters are set, Basic authentication will be used"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"gzip"})," (bool): specifies whether the payload needs to be sent with gzip compression (default: ",(0,r.jsx)(s.code,{children:"false"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"keepalived"})," (bool): specifies whether the connection should use keepalived (default: ",(0,r.jsx)(s.code,{children:"false"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"settings-redis_pubsub-backend",children:["Settings: ",(0,r.jsx)(s.code,{children:"redis_pubsub"})," backend"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"channel"})," (required): defines Pub/Sub channel to post content to"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["See ",(0,r.jsx)(s.a,{href:"/configuration/redis",children:"here"})," for information on configuring Redis servers."]}),"\n",(0,r.jsxs)(s.h3,{id:"settings-send_mail-backend",children:["Settings: ",(0,r.jsx)(s.code,{children:"send_mail"})," backend"]}),"\n",(0,r.jsxs)(s.p,{children:["If the ",(0,r.jsx)(s.code,{children:"send_mail"})," backend is used with the default formatter, the original spam message content will be analyzed by Rspamd and is highly likely matched as spam."]}),"\n",(0,r.jsxs)(s.p,{children:["When ",(0,r.jsx)(s.code,{children:"send_mail"})," backend is used in conjunction with ",(0,r.jsx)(s.code,{children:"email_alert"})," formatter, the URLs found in the symbols options will be analysed by Rspamd and the report will be matched as spam possibly."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsxs)(s.mark,{children:["To prevent ",(0,r.jsx)(s.b,{children:"looping"}),", it is essential to ensure that email messages from the Metadata exporter are ",(0,r.jsx)(s.b,{children:"not scanned"})," by Rspamd."]})," This can be achieved by setting up a specific Postfix Transport to bypass Rspamd, or by allowing the recipient of the ",(0,r.jsx)(s.code,{children:"email_alert"})," to receive spam."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"smtp"})," (required): hostname of SMTP server"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mail_to"})," (required): recipient of e-mail alert"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mail_from"}),": Sender address (default empty)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"email_alert_user"})," (1.7.0+, default false): Send a copy of the alert to the authenticated SMTP username"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"email_alert_sender"})," (1.7.0+, default false): Send a copy of the alert to the SMTP sender (NB: please ensure that it can be trusted)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"email_alert_recipients"})," (1.7.0+, default false): Send a copy of the alert to SMTP recipients (NB: please ensure they can be trusted; don't use this?)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"email_template"}),": template used for alert (default shown below)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"helo"}),": HELO to send (default 'rspamd')"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"smtp_port"}),": SMTP port if not 25"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["The default value for ",(0,r.jsx)(s.code,{children:"email_template"})," is as follows:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'From: "Rspamd" <$mail_from>\nTo: <$mail_to>\nSubject: Spam alert\nDate: $date\nMIME-Version: 1.0\nMessage-ID: <$our_message_id>\nContent-type: text/plain; charset=utf-8\nContent-Transfer-Encoding: 8bit\n\nAuthenticated username: $user\nIP: $ip\nQueue ID: $qid\nSMTP FROM: $from\nSMTP RCPT: $rcpt\nMIME From: $header_from\nMIME To: $header_to\nMIME Date: $header_date\nSubject: $header_subject\nMessage-ID: $message_id\nAction: $action\nScore: $score\nSymbols: $symbols\n'})}),"\n",(0,r.jsx)(s.p,{children:"Variables can be substituted according to general metadata keys described in the next section."}),"\n",(0,r.jsx)(s.h3,{id:"general-metadata",children:"General metadata"}),"\n",(0,r.jsxs)(s.p,{children:["Metadata as returned by the ",(0,r.jsx)(s.code,{children:"json"})," formatter can be referenced by key in ",(0,r.jsx)(s.code,{children:"email_template"}),". The following keys are defined:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"action"}),": metric action for message"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"from"}),": SMTP FROM"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"header_date"}),": Contents of Date header(s)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"header_from"}),": Contents of From header(s)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"header_subject"}),": Contents of Subject header(s)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"header_to"}),": Contents of To header(s)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"ip"}),": IP of message sender"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mail_from"})," (",(0,r.jsx)(s.code,{children:"email_template"})," only): sender of alert"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"mail_to"})," (",(0,r.jsx)(s.code,{children:"email_template"})," only): recipient of alert"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"message_id"}),": Message-ID of original message"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"our_message_id"})," (",(0,r.jsx)(s.code,{children:"email_template"})," only): message-ID generated for alert"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"qid"}),": Queue-ID of message provided by MTA"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"rcpt"}),": SMTP RCPT"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"score"}),": Metric score of the message"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"symbols"}),": Symbols in metric"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"user"}),": authenticated username of message sender"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"custom-functions",children:"Custom functions"}),"\n",(0,r.jsxs)(s.p,{children:["It is possible to define custom selectors/pushers/backends. Functions are defined in the ",(0,r.jsx)(s.code,{children:"custom_select"}),"/",(0,r.jsx)(s.code,{children:"custom_format"}),"/",(0,r.jsx)(s.code,{children:"custom_push"})," groups and referenced by name in the ",(0,r.jsx)(s.code,{children:"selector"}),"/",(0,r.jsx)(s.code,{children:"formatter"}),"/",(0,r.jsx)(s.code,{children:"backend"})," settings:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:'metadata_exporter {\n\n  # Define custom selector(s)\n  custom_select {\n    mine = <<EOD\nreturn function(task)\n  -- Select all messages\n  return true\nend\nEOD;\n  }\n\n  # Define custom formatter(s)\n  custom_format {\n    mine = <<EOD\nreturn function(task)\n  -- Push message ID\n  return task:get_message_id()\nend\nEOD;\n  }\n\n  # Define custom backend(s)\n  custom_push {\n    mine = <<EOD\nreturn function (task, data, rule)\n  -- Log payload\n  local rspamd_logger = require "rspamd_logger"\n  rspamd_logger.infox(task, \'METATEST %s\', data)\nend\nEOD;\n  }\n\n  rules {\n\n    CUSTOM_EXPORT {\n      selector = "mine";\n      formatter = "mine";\n      backend = "mine";\n    }\n\n  }\n\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var t=n(6540);const r={},d=t.createContext(r);function i(e){const s=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);