"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[4635],{6436:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"modules/greylisting","title":"Greylisting module","description":"{:.no_toc}","source":"@site/docs/modules/greylisting.md","sourceDirName":"modules","slug":"/modules/greylisting","permalink":"/docs.rspamd.com/branches/master/ru/modules/greylisting","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/greylisting.md","tags":[],"version":"current","frontMatter":{"title":"Greylisting module"},"sidebar":"docs","previous":{"title":"GPT Plugin","permalink":"/docs.rspamd.com/branches/master/ru/modules/gpt"},"next":{"title":"Hfilter module","permalink":"/docs.rspamd.com/branches/master/ru/modules/hfilter"}}');var r=i(4848),t=i(8453);const o={title:"Greylisting module"},d="Greylisting module",l={},c=[{value:"Principles of work",id:"principles-of-work",level:2},{value:"Module configuration",id:"module-configuration",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"greylisting-module",children:"Greylisting module"})}),"\n",(0,r.jsx)(s.p,{children:"{:.no_toc}"}),"\n",(0,r.jsxs)(s.p,{children:["The purpose of this module is to delay messages that have a spam score above the ",(0,r.jsx)(s.code,{children:"greylisting"})," action threshold."]}),"\n",(0,r.jsx)(s.h2,{id:"principles-of-work",children:"Principles of work"}),"\n",(0,r.jsx)(s.p,{children:"When the Greylisting module is enabled, two hashes are saved for each message in Redis:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"meta"})," hash is based on triplet ",(0,r.jsx)(s.code,{children:"from"}),":",(0,r.jsx)(s.code,{children:"to"}),":",(0,r.jsx)(s.code,{children:"ip"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"data"})," hash is taken from the message's body if it has enough length for it"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["IP address is stored with certain mask applied: it is ",(0,r.jsx)(s.code,{children:"/19"})," for IPv4 and ",(0,r.jsx)(s.code,{children:"/64"})," for IPv6 accordingly. Each hash has its own timestamp and Rspamd checks for the following times:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"greylisting"})," time - when a message should be temporary rejected"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"expire"})," time - when a greylisting hash is stored in Redis"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The hashes lifetime is depicted in the following scheme:"}),"\n",(0,r.jsx)(s.img,{className:"img-fluid",width:"75%",src:"/img/greylisting.png"}),"\n",(0,r.jsxs)(s.p,{children:["The greylisting module triggers a ",(0,r.jsx)(s.code,{children:"soft reject"})," action, which is intended to be interpreted by the MTA as a temporary rejection (typically through the Milter interface). For Exim, you can configure it to recognize ",(0,r.jsx)(s.code,{children:"soft reject"})," using the guidelines provided in the ",(0,r.jsx)(s.a,{href:"/tutorials/integration#integration-with-exim-mta",children:"integration guide"})," for details. For Haraka, support is available from version 2.9.0 onward."]}),"\n",(0,r.jsx)(s.h2,{id:"module-configuration",children:"Module configuration"}),"\n",(0,r.jsxs)(s.p,{children:["To use the greylisting module, you must first set up a Redis server to store hashes. You can find detailed instructions on how to do this in the ",(0,r.jsx)(s.a,{href:"/configuration/redis",children:"following document"}),". Once the Redis server is set up, you can modify a few specific options for the greylisting module. It is recommended that you define these options in ",(0,r.jsx)(s.code,{children:"local.d/greylist.conf"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"expire"})}),": setup hashes expire time (1 day by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"greylist_min_score"})}),": messages with scores below this threshold are not greylisted (default unset)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"ipv4_mask"})}),": mask to apply for IPv4 addresses (19 by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"ipv6_mask"})}),": mask to apply for IPv6 addresses (64 by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"key_prefix"})}),": prefix for hashes to store in Redis (",(0,r.jsx)(s.code,{children:"rg"})," by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"max_data_len"})}),": maximum length of data to be used for body hash (10kB by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"message"})}),": a message for temporary rejection reason (",(0,r.jsx)(s.code,{children:"Try again later"})," by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"timeout"})}),": defines greylisting timeout (5 min by default)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"whitelisted_ip"})}),": map of IP addresses and/or subnets to skip greylisting for"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"whitelist_domains_url"})}),": map of hostnames and/or eSLDs of hostnames to skip greylisting for"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"report_time"})}),": tell when greylisting is expired (appended to ",(0,r.jsx)(s.code,{children:"message"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"whitelist_symbols"})}),": skip greylisting when specific symbols have been found (from 1.9.1)"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["If you want to skip greylisting based on other conditions, you can simply disable the ",(0,r.jsx)(s.code,{children:"GREYLIST_CHECK"})," and ",(0,r.jsx)(s.code,{children:"GREYLIST_SAVE"})," symbols using the ",(0,r.jsx)(s.a,{href:"/configuration/settings",children:"settings module"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["To enable the module with its default settings, you must define at least one ",(0,r.jsx)(s.a,{href:"/configuration/redis",children:"redis"})," server to store greylisting data. You can do this by adding the following lines to ",(0,r.jsx)(s.code,{children:"local.d/greylist.conf"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:'# local.d/greylist.conf\nservers = "127.0.0.1:6379";\n'})}),"\n",(0,r.jsx)(s.p,{children:"Adding servers to store greylisting data enables greylisting in Rspamd."})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>d});var n=i(6540);const r={},t=n.createContext(r);function o(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);