"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[1023],{6168:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"tutorials/feedback_from_users_with_IMAPSieve","title":"Getting feedback from users with IMAPSieve","description":"The solution is very similar to Replacing antispam plugin with IMAPSieve,","source":"@site/docs/tutorials/feedback_from_users_with_IMAPSieve.md","sourceDirName":"tutorials","slug":"/tutorials/feedback_from_users_with_IMAPSieve","permalink":"/docs.rspamd.com/branches/master/ru/tutorials/feedback_from_users_with_IMAPSieve","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/tutorials/feedback_from_users_with_IMAPSieve.md","tags":[],"version":"current","frontMatter":{"title":"Getting feedback from users with IMAPSieve"},"sidebar":"docs","previous":{"title":"MTA integration","permalink":"/docs.rspamd.com/branches/master/ru/tutorials/integration"},"next":{"title":"Contributing to Rspamd Documentation","permalink":"/docs.rspamd.com/branches/master/ru/tutorials/site_contributing"}}');var r=s(4848),o=s(8453);const a={title:"Getting feedback from users with IMAPSieve"},t="Getting feedback from users with IMAPSieve",c={},l=[{value:"Requirements",id:"requirements",level:2},{value:"Folders",id:"folders",level:2},{value:"Dovecot configuration",id:"dovecot-configuration",level:2},{value:"Sieve scripts",id:"sieve-scripts",level:2},{value:"References",id:"references",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"getting-feedback-from-users-with-imapsieve",children:"Getting feedback from users with IMAPSieve"})}),"\n",(0,r.jsxs)(i.p,{children:["The solution is very similar to ",(0,r.jsx)(i.a,{href:"https://doc.dovecot.org/configuration_manual/howto/antispam_with_sieve/#for-rspamd",children:"Replacing antispam plugin with IMAPSieve"}),",\nbut instead of automatic learning it is supposed to store a copy of the message moved by user for further manual reviewing."]}),"\n",(0,r.jsxs)(i.p,{children:["In the example below when any user moves a message into or from ",(0,r.jsx)(i.code,{children:"Junk"})," folder, a copy  of the message is placed into ",(0,r.jsx)(i.code,{children:"report_ham"})," or ",(0,r.jsx)(i.code,{children:"report_spam"})," folder of ",(0,r.jsx)(i.code,{children:"spam@example.com"})," mailbox respectively. When a message located in ",(0,r.jsx)(i.code,{children:"Junk"})," folder replied to or forwarded, a copy of the message is placed into ",(0,r.jsx)(i.code,{children:"report_spam_reply"})," folder."]}),"\n",(0,r.jsx)(i.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(i.p,{children:["pigeonhole ",(0,r.jsx)(i.code,{children:"v0.4.14"})," or later"]}),"\n",(0,r.jsx)(i.h2,{id:"folders",children:"Folders"}),"\n",(0,r.jsxs)(i.p,{children:["Create ",(0,r.jsx)(i.code,{children:"report_ham"}),", ",(0,r.jsx)(i.code,{children:"report_spam"})," and ",(0,r.jsx)(i.code,{children:"report_spam_reply"})," folders in the ",(0,r.jsx)(i.code,{children:"spam@example.com"})," mailbox."]}),"\n",(0,r.jsx)(i.h2,{id:"dovecot-configuration",children:"Dovecot configuration"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"20-imap.conf"}),":"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"protocol imap {\n  mail_plugins = $mail_plugins imap_sieve\n}\n"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"90-plugin.conf"}),":"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"plugin {\n  sieve_plugins = sieve_imapsieve sieve_extprograms\n\n  # From elsewhere to Spam folder or flag changed in Spam folder\n  imapsieve_mailbox1_name = Junk\n  imapsieve_mailbox1_causes = COPY FLAG\n  imapsieve_mailbox1_before = file:/usr/local/etc/dovecot/sieve/report-spam.sieve\n\n  # From Spam folder to elsewhere\n  imapsieve_mailbox2_name = *\n  imapsieve_mailbox2_from = Junk\n  imapsieve_mailbox2_causes = COPY\n  imapsieve_mailbox2_before = file:/usr/local/etc/dovecot/sieve/report-ham.sieve\n\n  sieve_pipe_bin_dir = /usr/local/libexec/dovecot\n\n  sieve_global_extensions = +vnd.dovecot.pipe\n}\n"})}),"\n",(0,r.jsx)(i.h2,{id:"sieve-scripts",children:"Sieve scripts"}),"\n",(0,r.jsx)(i.p,{children:"/usr/local/etc/dovecot/sieve/report-spam.sieve:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:'require ["vnd.dovecot.pipe", "copy", "imapsieve", "environment", "imap4flags"];\n\nif environment :is "imap.cause" "COPY" {\n    pipe :copy "dovecot-lda" [ "-d", "spam@example.com", "-m", "report_spam" ];\n}\n\n# Catch replied or forwarded spam\nelsif anyof (allof (hasflag "\\\\Answered",\n                    environment :contains "imap.changedflags" "\\\\Answered"),\n             allof (hasflag "$Forwarded",\n                    environment :contains "imap.changedflags" "$Forwarded")) {\n    pipe :copy "dovecot-lda" [ "-d", "spam@example.com", "-m", "report_spam_reply" ];\n}\n'})}),"\n",(0,r.jsx)(i.p,{children:"/usr/local/etc/dovecot/sieve/report-ham.sieve:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:'require ["vnd.dovecot.pipe", "copy", "imapsieve", "environment", "variables"];\n\nif environment :matches "imap.mailbox" "*" {\n  set "mailbox" "${1}";\n}\n\nif string "${mailbox}" [ "Trash", "train_ham", "train_prob", "train_spam" ] {\n  stop;\n}\n\npipe :copy "dovecot-lda" [ "-d", "spam@example.com", "-m", "report_ham" ];\n'})}),"\n",(0,r.jsx)(i.p,{children:"Compile Sieve scripts:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-sh",children:"# sievec /usr/local/etc/dovecot/sieve/report-spam.sieve\n# sievec /usr/local/etc/dovecot/sieve/report-ham.sieve\n"})}),"\n",(0,r.jsxs)(i.p,{children:["Now copies of e-mail messages should be placed in the ",(0,r.jsx)(i.code,{children:"report_ham"})," and ",(0,r.jsx)(i.code,{children:"report_spam"})," folders of ",(0,r.jsx)(i.code,{children:"spam@example.com"})," mailbox when user moves e-mails between folders."]}),"\n",(0,r.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://doc.dovecot.org/configuration_manual/howto/antispam_with_sieve/#for-rspamd",children:"Replacing antispam plugin with IMAPSieve"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://doc.dovecot.org/configuration_manual/sieve/",children:"Sieve"})}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>a,x:()=>t});var n=s(6540);const r={},o=n.createContext(r);function a(e){const i=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);