"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[2091],{1418:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"developers/writing_rules","title":"Rule Writing Workshop","description":"This workshop teaches you to create effective custom rules for Rspamd through progressive learning. We start with simple concepts and build toward complex, production-ready rules that solve real-world spam filtering challenges.","source":"@site/docs/developers/writing_rules.md","sourceDirName":"developers","slug":"/developers/writing_rules","permalink":"/docs.rspamd.com/branches/master/ru/developers/writing_rules","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/developers/writing_rules.md","tags":[],"version":"current","frontMatter":{"title":"Rule Writing Workshop"},"sidebar":"docs","previous":{"title":"Coroutines and async calls","permalink":"/docs.rspamd.com/branches/master/ru/developers/sync_async"},"next":{"title":"Writing tests for Rspamd","permalink":"/docs.rspamd.com/branches/master/ru/developers/writing_tests"}}');var r=l(4848),t=l(8453);const i={title:"Rule Writing Workshop"},a="Rule Writing Workshop",o={},c=[{value:"Learning Path Overview",id:"learning-path-overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Level 1: Understanding Symbols",id:"level-1-understanding-symbols",level:2},{value:"Symbol anatomy",id:"symbol-anatomy",level:3},{value:"Your first symbol",id:"your-first-symbol",level:3},{value:"Level 2: Simple Pattern Matching",id:"level-2-simple-pattern-matching",level:2},{value:"Level 3: Multimap Rules",id:"level-3-multimap-rules",level:2},{value:"Level 4: Regular Expression Rules",id:"level-4-regular-expression-rules",level:2},{value:"Level 4.1: Conditional Regular Expressions",id:"level-41-conditional-regular-expressions",level:2},{value:"Level 5: Selectors",id:"level-5-selectors",level:2},{value:"Level 6: Basic Lua Scripting",id:"level-6-basic-lua-scripting",level:2},{value:"Level 7: Plugin Creation",id:"level-7-plugin-creation",level:2},{value:"Level 8: Advanced Lua Functions",id:"level-8-advanced-lua-functions",level:2},{value:"Level 9: Performance Optimization",id:"level-9-performance-optimization",level:2},{value:"Level 10: Production Deployment",id:"level-10-production-deployment",level:2},{value:"Reference: Additional Technical Details",id:"reference-additional-technical-details",level:2},{value:"Configuration files",id:"configuration-files",level:3},{value:"Rule weights",id:"rule-weights",level:3},{value:"Symbols registration patterns",id:"symbols-registration-patterns",level:3},{value:"Redis requests",id:"redis-requests",level:3},{value:"config vs rspamd_config",id:"config-vs-rspamd_config",level:3},{value:"Rules check order",id:"rules-check-order",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rule-writing-workshop",children:"Rule Writing Workshop"})}),"\n",(0,r.jsx)(n.p,{children:"This workshop teaches you to create effective custom rules for Rspamd through progressive learning. We start with simple concepts and build toward complex, production-ready rules that solve real-world spam filtering challenges."}),"\n",(0,r.jsx)(n.h2,{id:"learning-path-overview",children:"Learning Path Overview"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    A[Understanding Symbols] --\x3e B[Simple Pattern Matching]\n    B --\x3e C[Multimap Rules]\n    C --\x3e D[Regular Expression Rules]\n    D --\x3e E[Conditional Regexps]\n    E --\x3e F[Selectors]\n    F --\x3e G[Basic Lua Scripting]\n    G --\x3e H[Plugin Creation]\n    H --\x3e I[Advanced Lua Functions]\n    I --\x3e J[Performance Optimization]\n    J --\x3e K[Production Deployment]"}),"\n",(0,r.jsxs)(n.p,{children:["See the Tool Selection Guide for when to use each tool: ",(0,r.jsx)(n.a,{href:"/guides/configuration/tool-selection",children:"/guides/configuration/tool-selection"})]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Working Rspamd installation - see ",(0,r.jsx)(n.a,{href:"/getting-started/installation",children:"Installation"})]}),"\n",(0,r.jsxs)(n.li,{children:["Basic configuration understanding - see ",(0,r.jsx)(n.a,{href:"/guides/configuration/fundamentals",children:"Configuration fundamentals"})]}),"\n",(0,r.jsx)(n.li,{children:"Command line comfort and a safe test environment"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"level-1-understanding-symbols",children:"Level 1: Understanding Symbols"}),"\n",(0,r.jsx)(n.h3,{id:"symbol-anatomy",children:"Symbol anatomy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:register_symbol({\n  name = 'MY_CUSTOM_RULE',\n  score = 2.5,\n  description = 'Detects something bad',\n  callback = my_function,\n  type = 'normal'\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"your-first-symbol",children:"Your first symbol"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- /etc/rspamd/local.d/custom_rules.lua\nlocal function always_fires(task)\n  return true\nend\n\nrspamd_config:register_symbol({\n  name = 'WORKSHOP_FIRST_RULE',\n  score = 0.1,\n  description = 'My first custom rule - always fires',\n  callback = always_fires\n})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-2-simple-pattern-matching",children:"Level 2: Simple Pattern Matching"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local function check_sender_domain(task)\n  local from = task:get_from('mime')\n  if from and from[1] and from[1]['domain'] == 'suspicious-domain.com' then\n    return true\n  end\n  return false\nend\n\nrspamd_config:register_symbol({\n  name = 'SUSPICIOUS_SENDER_DOMAIN',\n  score = 5.0,\n  description = 'Message from suspicious domain',\n  callback = check_sender_domain\n})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-3-multimap-rules",children:"Level 3: Multimap Rules"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'BAD_DOMAINS {\n  type = "from";\n  map = "/etc/rspamd/bad_domains.map";\n  score = 8.0;\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"level-4-regular-expression-rules",children:"Level 4: Regular Expression Rules"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local function check_credit_cards(task)\n  local text_parts = task:get_text_parts()\n  if text_parts then\n    for _, part in ipairs(text_parts) do\n      local content = tostring(part:get_content())\n      local cc_pattern = '%d%d%d%d[%s%-]?%d%d%d%d[%s%-]?%d%d%d%d[%s%-]?%d%d%d%d'\n      if string.match(content, cc_pattern) then\n        return true, 1.0\n      end\n    end\n  end\n  return false\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-41-conditional-regular-expressions",children:"Level 4.1: Conditional Regular Expressions"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"re_conditions"})," to validate complex patterns efficiently and avoid false positives. This lets you keep regexps fast while confirming matches with Lua."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- Example inspired by rules/bitcoin.lua\nconfig.regexp['BITCOIN_ADDR'] = {\n  re = string.format('(%s) + (%s) > 0', normal_wallet_re, btc_bleach_re),\n  expression_flags = { 'noopt' },\n  re_conditions = {\n    [normal_wallet_re] = function(task, txt, s, e)\n      local word = lua_util.str_trim(txt:sub(s + 1, e))\n      local valid = is_traditional_btc_address(word)\n      if valid then\n        task:insert_result('BITCOIN_ADDR', 1.0, word)\n        return true\n      end\n      return false\n    end,\n    [btc_bleach_re] = function(task, txt, s, e)\n      local word = tostring(lua_util.str_trim(txt:sub(s + 1, e)))\n      local valid = is_segwit_bech32_address(task, word)\n      if valid then\n        task:insert_result('BITCOIN_ADDR', 1.0, word)\n        return true\n      end\n      return false\n    end,\n  },\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Tips:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep regexps bounded and strict"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"re_conditions"})," to confirm structure/checksums"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"level-5-selectors",children:"Level 5: Selectors"}),"\n",(0,r.jsxs)(n.p,{children:["Selectors extract and transform data from a message and can be reused across modules (regexp, multimap, ratelimit, reputation, etc.). See the full reference: ",(0,r.jsx)(n.a,{href:"/configuration/selectors",children:"/configuration/selectors"})]}),"\n",(0,r.jsx)(n.p,{children:"Minimal examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'# /etc/rspamd/local.d/multimap.conf\nRISKY_SUBJECT_SELECTOR {\n  type = "selector";\n  selector = "header(\'Subject\').lower";\n  map = "/etc/rspamd/maps/risky_subjects.list";\n  score = 3.0;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can also feed selectors into regexp rules by registering them first:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:register_re_selector('user_subj', \"user.lower;header('Subject').lower\", ' ')\n\nconfig['regexp']['USER_SUBJECT_MATCH'] = {\n  re = 'user_subj=/^admin .* urgent/{selector}',\n  score = 2.0,\n  one_shot = true,\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-6-basic-lua-scripting",children:"Level 6: Basic Lua Scripting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local function explore_task_object(task)\n  local logger = require \"rspamd_logger\"\n  logger.infox(task, \"Subject: %s\", task:get_header('Subject') or 'N/A')\n  return false\nend\n\nrspamd_config:register_symbol({\n  name = 'TASK_EXPLORER',\n  score = 0.0,\n  description = 'Explores task object properties',\n  callback = explore_task_object\n})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-7-plugin-creation",children:"Level 7: Plugin Creation"}),"\n",(0,r.jsx)(n.p,{children:"Use a plugin when you need configurable, reusable multi-symbol logic."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"-- /etc/rspamd/local.d/my_plugin.lua (deployed in the right place for your setup)\nlocal lua_util = require \"lua_util\"\n\nlocal M = 'my_plugin'\n\nlocal function check_one(task)\n  if task:get_header('X-Flag') == 'on' then\n    task:insert_result('MY_PLUGIN_SYMBOL', 1.0)\n  end\nend\n\nrspamd_config:register_symbol({\n  name = 'MY_PLUGIN_SYMBOL',\n  callback = check_one,\n  score = 0.0,\n  group = 'policies',\n})\n\nreturn { name = M }\n"})}),"\n",(0,r.jsx)(n.p,{children:"Configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:"# /etc/rspamd/local.d/my_plugin.conf\nenabled = true;\nthreshold = 5;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-8-advanced-lua-functions",children:"Level 8: Advanced Lua Functions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local function check_sender_reputation(task)\n  local from = task:get_from('mime')\n  if not from or not from[1] then return false end\n  local domain = from[1]['domain']\n  local function dns_callback(resolver, to_resolve, results, err)\n    if results and results[1] == '127.0.0.2' then\n      task:insert_result('SENDER_REPUTATION_BAD', 1.0)\n    end\n  end\n  task:get_resolver():resolve_txt({ task = task, name = domain .. '.reputation.example.com', callback = dns_callback })\n  return false\nend\n\nrspamd_config:register_symbol({ name = 'SENDER_REPUTATION_CHECK', type = 'prefilter', callback = check_sender_reputation, priority = 5 })\nrspamd_config:register_symbol({ name = 'SENDER_REPUTATION_BAD', score = 5.0, parent = 'SENDER_REPUTATION_CHECK' })\n"})}),"\n",(0,r.jsx)(n.h2,{id:"level-9-performance-optimization",children:"Level 9: Performance Optimization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Early returns"}),"\n",(0,r.jsx)(n.li,{children:"Prefer simple string ops over regex when possible"}),"\n",(0,r.jsx)(n.li,{children:"Cache expensive operations"}),"\n",(0,r.jsx)(n.li,{children:"Process selectively"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"level-10-production-deployment",children:"Level 10: Production Deployment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test with rspamc"}),"\n",(0,r.jsx)(n.li,{children:"Monitor rule performance, log slow rules"}),"\n",(0,r.jsx)(n.li,{children:"Add error handling with pcall"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"reference-additional-technical-details",children:"Reference: Additional Technical Details"}),"\n",(0,r.jsx)(n.h3,{id:"configuration-files",children:"Configuration files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'.include(try=true,priority=1) "$CONFDIR/local.d/config.conf"\n.include(try=true,priority=1) "$CONFDIR/override.d/config.conf"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"rule-weights",children:"Rule weights"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'symbol "MY_SYMBOL" { description = "my cool rule"; score = 1.5; }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"symbols-registration-patterns",children:"Symbols registration patterns"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:register_symbol{ type = 'normal', name = 'MY_SYMBOL', callback = function(task) end, score = 1.0 }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"redis-requests",children:"Redis requests"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local lua_redis = require \"lua_redis\"\nlocal redis_params = lua_redis.parse_redis_server('module')\n"})}),"\n",(0,r.jsx)(n.h3,{id:"config-vs-rspamd_config",children:"config vs rspamd_config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"rspamd_config:get_all_opts('section')\nrspamd_config.SYMBOL = {...}\nconfig['regexp']['SYMBOL'] = { callback = function(task) ... end }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rules-check-order",children:"Rules check order"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Stage"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Connection filters"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Initial stage right after connection established"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Message processing"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Text extraction, HTML parsing, language detection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Pre-filters"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Executed before normal filters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Normal filters"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Main rules, dependency graph defines order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Statistics"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Checked after normal symbols"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Composites (pass 1)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Combine results before post-filters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Post-filters"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"After normal filters and composites"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Composites (pass 2)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Combine results including postfilters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Idempotent filters"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Must not change result"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>i,x:()=>a});var s=l(6540);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);