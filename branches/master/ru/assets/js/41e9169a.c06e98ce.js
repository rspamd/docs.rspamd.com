"use strict";(self.webpackChunkrspamd_docs=self.webpackChunkrspamd_docs||[]).push([[2603],{4020:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"modules/ip_score","title":"IP Score module","description":"This module is deprecated and is removed from Rspamd 2.0 due to several serious design flaws, e.g. reputation tokens had no decay leading to a situation with a positive loopback link and thus incorrect reputation calculations.","source":"@site/docs/modules/ip_score.md","sourceDirName":"modules","slug":"/modules/ip_score","permalink":"/docs.rspamd.com/branches/master/ru/modules/ip_score","draft":false,"unlisted":false,"editUrl":"https://github.com/rspamd/docs.rspamd.com/edit/master/docs/modules/ip_score.md","tags":[],"version":"current","frontMatter":{"title":"IP Score module"},"sidebar":"docs","previous":{"title":"Redis history module","permalink":"/docs.rspamd.com/branches/master/ru/modules/history_redis"},"next":{"title":"known_senders module","permalink":"/docs.rspamd.com/branches/master/ru/modules/known_senders"}}');var r=n(4848),i=n(8453);const t={title:"IP Score module"},a="IP Score",c={},d=[{value:"Theory of operation",id:"theory-of-operation",level:3},{value:"Configuration",id:"configuration",level:3}];function l(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"ip-score",children:"IP Score"})}),"\n",(0,r.jsx)(s.h1,{id:"deprecation-warning",children:"Deprecation warning!"}),"\n",(0,r.jsxs)(s.p,{children:["This module is deprecated and is removed from Rspamd 2.0 due to several serious design flaws, e.g. reputation tokens had no decay leading to a situation with a positive loopback link and thus incorrect reputation calculations.\nThe existing configuration could be automatically transferred to ",(0,r.jsx)(s.a,{href:"/modules/reputation",children:"reputation module"}),".\nUnfortunately, the existing reputation built cannot be transferred for many reasons. One of the reasons is that it was simply wrong in many cases."]}),"\n",(0,r.jsx)(s.h3,{id:"theory-of-operation",children:"Theory of operation"}),"\n",(0,r.jsx)(s.p,{children:"IP Score tracks the number of messages received from a given IP/subnet/ASN/country and records this alongside a total score. The scores which are added to these total scores are calculated as follows:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"ip_score = action_multiplier * tanh (e * (metric_score/score_divisor))\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"e"})," is the mathematical constant: 2.718.\n",(0,r.jsx)(s.code,{children:"tanh"})," is the hyperbolic tangent function.\n",(0,r.jsx)(s.code,{children:"metric_score"})," is the score Rspamd assigned the message.\n",(0,r.jsx)(s.code,{children:"action_multiplier"})," is the multiplier configured for the metric action, or zero in case action is ",(0,r.jsx)(s.code,{children:"no action"})," and score is positive.\n",(0,r.jsx)(s.code,{children:"score_divisor"})," is supplied from setting with the same name- if not supplied no division is done (recommended value: 10-100)."]}),"\n",(0,r.jsx)(s.p,{children:"Default multipliers are shown below:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:'actions {\n  reject = 1.0;\n  "add header" = 0.25;\n  "rewrite subject" = 0.25;\n  "no action" = 1.0;\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"So with these settings:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"a message with score -0.1 gets ip score: -0.265"}),"\n",(0,r.jsx)(s.li,{children:"a message with score -1.0 gets ip score: -0.991"}),"\n",(0,r.jsxs)(s.li,{children:["a message with positive score & ",(0,r.jsx)(s.code,{children:"no action"})," action always gets ip score: 0.00"]}),"\n",(0,r.jsxs)(s.li,{children:["a message with ",(0,r.jsx)(s.code,{children:"add header"})," action & score 7 gets ip score: 0.249"]}),"\n",(0,r.jsxs)(s.li,{children:["a message with ",(0,r.jsx)(s.code,{children:"reject"})," action and score 15 gets ip score: 1.0"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["For each IP address/ASN/country/subnet Rspamd stores a key in a hash in Redis the value of which is formatted: ",(0,r.jsx)(s.code,{children:"total ip score|total number of messages received"})," - for each incoming message Rspamd increments the total number of messages by one and adds the new ip score to the total."]}),"\n",(0,r.jsx)(s.p,{children:"Once a predefined number of messages from a given IP address/subnet/ASN/country have been seen (10 in default configuration), Rspamd will begin to add scores to messages, which are calculated as follows:"}),"\n",(0,r.jsx)(s.p,{children:"First Rspamd calculates a subscore for whichever things it has seen enough messages for (IP address/subnet/ASN/country) as follows:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"subscore = score_multiplier * tanh(e * total_score / total_messages)\nsubscore = floor(subscore * 10)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Score multiplier is dependent on the component the subscore is being generated for; default multipliers are shown below:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:"scores {\n  asn = 0.5;\n  country = 0.1;\n  ipnet = 0.8;\n  ip = 1.0;\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Subscores are added to each other to determine a total. If ",(0,r.jsx)(s.code,{children:"min_score"})," or ",(0,r.jsx)(s.code,{children:"max_score"})," are defined in configuration these set a lower/upper bound for the total score."]}),"\n",(0,r.jsx)(s.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(s.p,{children:["Refer to example configuration below for available settings. To use default settings, just ",(0,r.jsx)(s.a,{href:"/configuration/redis",children:"configure Redis"})," either globally or just for ",(0,r.jsx)(s.code,{children:"ip_score"})," and assign a weight to the ",(0,r.jsx)(s.code,{children:"IP_SCORE"})," symbol. Module configuration should be added to ",(0,r.jsx)(s.code,{children:"/etc/rspamd/local.d/ip_score.conf"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:'# how each action is treated in scoring\nactions {\n  reject = 1.0;\n  "add header" = 0.25;\n  "rewrite subject" = 0.25;\n  "no action" = 1.0;\n}\n# how each component is evaluated\nscores {\n  asn = 0.5;\n  country = 0.1;\n  ipnet = 0.8;\n  ip = 1.0;\n}\n# prefix for asn hashes\nasn_prefix = "a:";\n# prefix for country hashes\ncountry_prefix = "c:";\n# hash table in redis used for storing scores\nhash = "ip_score";\n# prefix for subnet hashes\nipnet_prefix = "n:";\n# minimum number of messages to be scored\nlower_bound = 10;\n# the metric to score (usually "default")\nmetric = "default";\n# upper and lower bounds at which to cap total score\n#max_score = 10;\n#min_score = -5;\n# Amount to divide subscores by before applying tanh\nscore_divisor = 10;\n# list of servers (or configure redis globally)\n#servers = "localhost";\n# symbol to be inserted\nsymbol = "IP_SCORE";\n'})}),"\n",(0,r.jsxs)(s.p,{children:["You will also have to register some weight for the symbol in metric. For example you could add the following to ",(0,r.jsx)(s.code,{children:"/etc/rspamd/local.d/metrics.conf"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-hcl",children:'symbol "IP_SCORE" {\n  weight = 2.0;\n  description = "IP reputation";\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>a});var o=n(6540);const r={},i=o.createContext(r);function t(e){const s=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(i.Provider,{value:s},e.children)}}}]);